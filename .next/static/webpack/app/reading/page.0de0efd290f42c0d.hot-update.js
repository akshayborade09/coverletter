"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reading/page",{

/***/ "(app-pages-browser)/./app/reading/page.tsx":
/*!******************************!*\
  !*** ./app/reading/page.tsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ReadingPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/BottomNavigation */ \"(app-pages-browser)/./components/BottomNavigation.tsx\");\n/* harmony import */ var _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/QuestionsData */ \"(app-pages-browser)/./components/QuestionsData.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction ReadingPage() {\n    var _paragraphTimings_currentParagraphIndex;\n    _s();\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [wordsPerSecond, setWordsPerSecond] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(2.5);\n    const [startDelay, setStartDelay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [manualOffset, setManualOffset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [audioDuration, setAudioDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isMapping, setIsMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [wordMappings, setWordMappings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentMappingIndex, setCurrentMappingIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoMapping, setIsAutoMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [autoMappingProgress, setAutoMappingProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [recognitionResults, setRecognitionResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [timingAdjustments, setTimingAdjustments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentParagraphIndex, setCurrentParagraphIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [paragraphTimings, setParagraphTimings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Create comprehensive word timing data using mapped timings when available\n    const createWordTimings = ()=>{\n        const allWords = [];\n        let globalWordIndex = 0;\n        let paragraphIndex = 0;\n        _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.forEach((item, questionIndex)=>{\n            // Process question words\n            const questionWords = item.question.split(' ');\n            questionWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"q-\".concat(questionIndex);\n                const isLastWord = wordIndex === questionWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'question',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n            // Process answer words\n            const answerWords = item.answer.split(' ');\n            answerWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"a-\".concat(questionIndex);\n                const isLastWord = wordIndex === answerWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'answer',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n        });\n        return allWords;\n    };\n    const wordTimings = createWordTimings();\n    // Create paragraph timing data for karaoke-style highlighting\n    const createParagraphTimings = ()=>{\n        const paragraphs = [];\n        let paragraphIndex = 0;\n        let cumulativeTime = 0;\n        _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.forEach((item, questionIndex)=>{\n            // Question paragraph - much faster speed to match real audio\n            const questionWords = item.question.split(' ').length;\n            const questionDuration = questionWords / 4.0 // Faster speed to match actual audio\n            ;\n            paragraphs.push({\n                paragraphIndex,\n                startTime: cumulativeTime,\n                endTime: cumulativeTime + questionDuration,\n                type: 'question',\n                questionIndex\n            });\n            paragraphIndex++;\n            cumulativeTime += questionDuration;\n            // Answer paragraph - much faster speed to match real audio\n            const answerWords = item.answer.split(' ').length;\n            const answerDuration = answerWords / 4.0 // Faster speed to match actual audio\n            ;\n            paragraphs.push({\n                paragraphIndex,\n                startTime: cumulativeTime,\n                endTime: cumulativeTime + answerDuration,\n                type: 'answer',\n                questionIndex\n            });\n            paragraphIndex++;\n            cumulativeTime += answerDuration;\n        });\n        return paragraphs;\n    };\n    // Update paragraph timings when speed changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"ReadingPage.useEffect\": ()=>{\n            setParagraphTimings(createParagraphTimings());\n        }\n    }[\"ReadingPage.useEffect\"], [\n        wordsPerSecond,\n        startDelay,\n        manualOffset\n    ]);\n    // Initialize paragraph timings on mount\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"ReadingPage.useEffect\": ()=>{\n            setParagraphTimings(createParagraphTimings());\n        }\n    }[\"ReadingPage.useEffect\"], []);\n    // Automatic timing calibration system - runs continuously to sync voice with highlights\n    const performTimingCalibration = ()=>{\n        if (!currentWord || !audioRef.current) return;\n        // Check for calibration at the end of each paragraph (last word of question or answer)\n        if (currentWord.isLastWordOfParagraph && currentTime >= currentWord.endTime) {\n            const paragraphStartIndex = findParagraphStartIndex(currentWord);\n            const paragraphStartWord = wordTimings[paragraphStartIndex];\n            if (paragraphStartWord) {\n                // Simple calculation: compare actual time vs expected time for this paragraph end\n                const expectedTimeAtParagraphEnd = currentWord.endTime;\n                const actualTimeAtParagraphEnd = currentTime;\n                const timeDifference = actualTimeAtParagraphEnd - expectedTimeAtParagraphEnd;\n                // If there's significant drift (more than 1.5 seconds), adjust the speed\n                if (Math.abs(timeDifference) > 1.5) {\n                    const wordsInParagraph = currentWord.globalIndex - paragraphStartIndex + 1;\n                    // Calculate what the speed should be based on actual timing\n                    const expectedParagraphDuration = currentWord.endTime - paragraphStartWord.startTime;\n                    const actualParagraphDuration = currentTime - paragraphStartWord.startTime;\n                    const speedMultiplier = expectedParagraphDuration / actualParagraphDuration;\n                    const newWPS = wordsPerSecond * speedMultiplier;\n                    // Limit adjustments to reasonable range\n                    const adjustedWPS = Math.min(Math.max(newWPS, 0.8), 6.0);\n                    // Only adjust if the change is significant enough\n                    if (Math.abs(adjustedWPS - wordsPerSecond) > 0.2) {\n                        setWordsPerSecond(adjustedWPS);\n                        const adjustment = {\n                            wordIndex: currentWord.globalIndex,\n                            expectedTime: expectedTimeAtParagraphEnd,\n                            actualTime: actualTimeAtParagraphEnd,\n                            adjustment: adjustedWPS - wordsPerSecond\n                        };\n                        setTimingAdjustments((prev)=>[\n                                ...prev,\n                                adjustment\n                            ]);\n                    }\n                }\n            }\n        }\n    };\n    // Helper function to find the start of current paragraph\n    const findParagraphStartIndex = (currentWord)=>{\n        // Find the first word of the current paragraph (question or answer)\n        for(let i = currentWord.globalIndex; i >= 0; i--){\n            const word = wordTimings[i];\n            if (word && word.type === currentWord.type && word.questionIndex === currentWord.questionIndex && word.wordIndex === 0) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    // Find current word and related info\n    const currentWordIndex = wordTimings.findIndex((timing)=>currentTime >= timing.startTime && currentTime < timing.endTime);\n    const currentWord = currentWordIndex >= 0 ? wordTimings[currentWordIndex] : null;\n    const nextWord = currentWordIndex >= 0 && currentWordIndex < wordTimings.length - 1 ? wordTimings[currentWordIndex + 1] : null;\n    const togglePlayPause = ()=>{\n        if (audioRef.current) {\n            if (isPlaying) {\n                audioRef.current.pause();\n            } else {\n                audioRef.current.play();\n            }\n            setIsPlaying(!isPlaying);\n        }\n    };\n    const handleBack = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.back();\n    };\n    const handleSummarise = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.push(\"/summary\");\n    };\n    // Advanced timing controls\n    const jumpToTime = (time)=>{\n        if (audioRef.current) {\n            audioRef.current.currentTime = Math.max(0, Math.min(time, audioDuration || time));\n        }\n    };\n    const jumpToWord = (wordIndex)=>{\n        const word = wordTimings[wordIndex];\n        if (word && audioRef.current) {\n            audioRef.current.currentTime = word.startTime;\n        }\n    };\n    // Word mapping functions\n    const startMapping = ()=>{\n        setIsMapping(true);\n        setCurrentMappingIndex(0);\n        setWordMappings([]);\n        if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n        }\n    };\n    const stopMapping = ()=>{\n        setIsMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    const markCurrentWord = ()=>{\n        if (isMapping && currentMappingIndex < wordTimings.length) {\n            const newMapping = {\n                wordIndex: currentMappingIndex,\n                startTime: currentTime\n            };\n            setWordMappings((prev)=>[\n                    ...prev,\n                    newMapping\n                ]);\n            setCurrentMappingIndex((prev)=>prev + 1);\n        }\n    };\n    const clearMappings = ()=>{\n        setWordMappings([]);\n        setCurrentMappingIndex(0);\n    };\n    const exportMappings = ()=>{\n        const data = {\n            mappings: wordMappings,\n            totalWords: wordTimings.length,\n            createdAt: new Date().toISOString()\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n    };\n    const importMappings = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                try {\n                    var _e_target;\n                    const data = JSON.parse((_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result);\n                    setWordMappings(data.mappings || []);\n                } catch (error) {\n                    alert('Invalid mapping file');\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n    // Automatic MP3 to JSON word mapping\n    const startAutoMapping = async ()=>{\n        if (!audioRef.current) return;\n        setIsAutoMapping(true);\n        setAutoMappingProgress(0);\n        setRecognitionResults([]);\n        try {\n            // Check if Web Speech API is available\n            if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n                alert('Speech recognition not supported in this browser. Please use Chrome or Edge.');\n                setIsAutoMapping(false);\n                return;\n            }\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n            const recognition = new SpeechRecognition();\n            recognition.continuous = true;\n            recognition.interimResults = true;\n            recognition.lang = 'en-US';\n            const audioStartTime = Date.now();\n            const results = [];\n            recognition.onresult = (event)=>{\n                for(let i = event.resultIndex; i < event.results.length; i++){\n                    if (event.results[i].isFinal) {\n                        const transcript = event.results[i][0].transcript.trim();\n                        const words = transcript.split(' ');\n                        const currentTime = (Date.now() - audioStartTime) / 1000;\n                        words.forEach((word, index)=>{\n                            if (word.trim()) {\n                                results.push({\n                                    word: word.trim().toLowerCase().replace(/[^\\w]/g, ''),\n                                    startTime: currentTime - (words.length - index) * 0.3,\n                                    confidence: event.results[i][0].confidence || 0.8\n                                });\n                            }\n                        });\n                        setRecognitionResults([\n                            ...results\n                        ]);\n                        setAutoMappingProgress(results.length / wordTimings.length * 100);\n                    }\n                }\n            };\n            recognition.onerror = (event)=>{\n                console.error('Recognition error:', event.error);\n                setIsAutoMapping(false);\n            };\n            recognition.onend = ()=>{\n                setIsAutoMapping(false);\n                processRecognitionResults(results);\n            };\n            // Start audio and recognition\n            audioRef.current.currentTime = 0;\n            await audioRef.current.play();\n            recognition.start();\n            // Stop recognition when audio ends\n            audioRef.current.onended = ()=>{\n                recognition.stop();\n            };\n        } catch (error) {\n            console.error('Auto mapping error:', error);\n            alert('Error starting automatic mapping. Please try manual mapping instead.');\n            setIsAutoMapping(false);\n        }\n    };\n    const processRecognitionResults = (results)=>{\n        const mappings = [];\n        // Match recognized words with content words\n        wordTimings.forEach((contentWord, index)=>{\n            const cleanContentWord = contentWord.word.toLowerCase().replace(/[^\\w]/g, '');\n            // Find best matching recognized word\n            const matchingResult = results.find((result)=>result.word === cleanContentWord || result.word.includes(cleanContentWord) || cleanContentWord.includes(result.word));\n            if (matchingResult && matchingResult.confidence > 0.5) {\n                mappings.push({\n                    wordIndex: index,\n                    startTime: matchingResult.startTime\n                });\n            }\n        });\n        setWordMappings(mappings);\n        // Export results automatically\n        const data = {\n            mappings,\n            recognitionResults: results,\n            totalWords: wordTimings.length,\n            matchedWords: mappings.length,\n            accuracy: mappings.length / wordTimings.length * 100,\n            createdAt: new Date().toISOString(),\n            method: 'automatic_speech_recognition'\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'auto-word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n        alert(\"Auto-mapping complete! Matched \".concat(mappings.length, \"/\").concat(wordTimings.length, \" words (\").concat((mappings.length / wordTimings.length * 100).toFixed(1), \"%). JSON file downloaded.\"));\n    };\n    const stopAutoMapping = ()=>{\n        setIsAutoMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    // Alternative: Upload MP3 for server-side processing\n    const uploadMP3ForProcessing = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file && file.type === 'audio/mpeg') {\n            // This would typically send to a server with speech-to-text API\n            alert('MP3 upload for server-side processing would go here. For now, use the automatic mapping feature.');\n        }\n    };\n    // Keyboard handler for spacebar to mark words\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const handleKeyPress = {\n                \"ReadingPage.useEffect.handleKeyPress\": (e)=>{\n                    if (e.code === 'Space' && isMapping) {\n                        e.preventDefault();\n                        markCurrentWord();\n                    }\n                }\n            }[\"ReadingPage.useEffect.handleKeyPress\"];\n            if (isMapping) {\n                document.addEventListener('keydown', handleKeyPress);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>document.removeEventListener('keydown', handleKeyPress)\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], [\n        isMapping,\n        currentMappingIndex,\n        currentTime\n    ]);\n    // Calculate timing accuracy\n    const getTimingAccuracy = ()=>{\n        if (!currentWord) return null;\n        const expectedTime = currentWord.startTime;\n        const actualTime = currentTime;\n        const difference = actualTime - expectedTime;\n        return difference;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const audio = audioRef.current;\n            if (audio) {\n                const handleEnded = {\n                    \"ReadingPage.useEffect.handleEnded\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handleEnded\"];\n                const handlePause = {\n                    \"ReadingPage.useEffect.handlePause\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handlePause\"];\n                const handlePlay = {\n                    \"ReadingPage.useEffect.handlePlay\": ()=>setIsPlaying(true)\n                }[\"ReadingPage.useEffect.handlePlay\"];\n                const handleTimeUpdate = {\n                    \"ReadingPage.useEffect.handleTimeUpdate\": ()=>{\n                        setCurrentTime(audio.currentTime);\n                        performTimingCalibration();\n                        checkParagraphAdvancement();\n                    }\n                }[\"ReadingPage.useEffect.handleTimeUpdate\"];\n                const handleLoadedMetadata = {\n                    \"ReadingPage.useEffect.handleLoadedMetadata\": ()=>setAudioDuration(audio.duration)\n                }[\"ReadingPage.useEffect.handleLoadedMetadata\"];\n                audio.addEventListener('ended', handleEnded);\n                audio.addEventListener('pause', handlePause);\n                audio.addEventListener('play', handlePlay);\n                audio.addEventListener('timeupdate', handleTimeUpdate);\n                audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>{\n                        audio.removeEventListener('ended', handleEnded);\n                        audio.removeEventListener('pause', handlePause);\n                        audio.removeEventListener('play', handlePlay);\n                        audio.removeEventListener('timeupdate', handleTimeUpdate);\n                        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n                    }\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], []);\n    const renderTextWithHighlight = (text, type, questionIndex)=>{\n        // Add line breaks after every period, but not for numbered points (like \"1.\", \"2.\", etc.)\n        const textWithBreaks = text.replace(RegExp(\"(?<!\\\\d)\\\\. \", \"g\"), '.\\n');\n        const lines = textWithBreaks.split('\\n');\n        // Calculate paragraph index for this text block\n        const paragraphIndex = questionIndex * 2 + (type === 'answer' ? 1 : 0);\n        const isCurrentParagraph = paragraphIndex === currentParagraphIndex;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"transition-opacity duration-300 \".concat(isCurrentParagraph ? 'opacity-100' : 'opacity-30'),\n            children: lines.map((line, lineIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: lineIndex > 0 ? 'mt-2' : '',\n                    children: line.trim()\n                }, lineIndex, false, {\n                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                    lineNumber: 527,\n                    columnNumber: 11\n                }, this))\n        }, void 0, false, {\n            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n            lineNumber: 521,\n            columnNumber: 7\n        }, this);\n    };\n    // Check for paragraph advancement based on audio timing (karaoke-style)\n    const checkParagraphAdvancement = ()=>{\n        if (paragraphTimings.length === 0) return;\n        // Simple approach: find paragraph based on current time\n        for(let i = 0; i < paragraphTimings.length; i++){\n            const paragraph = paragraphTimings[i];\n            // If we're within this paragraph's time range\n            if (currentTime >= paragraph.startTime && currentTime < paragraph.endTime) {\n                if (i !== currentParagraphIndex) {\n                    setCurrentParagraphIndex(i);\n                }\n                return;\n            }\n            // If we're past this paragraph but before the next one\n            if (i === paragraphTimings.length - 1 && currentTime >= paragraph.endTime) {\n                if (i !== currentParagraphIndex) {\n                    setCurrentParagraphIndex(i);\n                }\n                return;\n            }\n        }\n        // Fallback: if audio is playing but no paragraph matches, advance based on time\n        if (currentTime > 0) {\n            const expectedIndex = Math.min(Math.floor(currentTime / 10), paragraphTimings.length - 1);\n            if (expectedIndex !== currentParagraphIndex) {\n                setCurrentParagraphIndex(expectedIndex);\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen text-white relative\",\n        style: {\n            backgroundImage: \"url('/images/gradient-bg.png')\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black flex items-center justify-center z-[100] landscape:flex portrait:hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center px-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-6xl mb-4\",\n                            children: \"\\uD83D\\uDCF1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 585,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-2xl font-medium mb-2\",\n                            children: \"Rotate Your Device\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 586,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-300\",\n                            children: \"Please rotate your device to portrait mode for the best experience\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 587,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                    lineNumber: 584,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 583,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"sticky top-0 w-full z-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute inset-0 pointer-events-none\",\n                        style: {\n                            background: 'linear-gradient(180deg, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.6) 30%, rgba(0,0,0,0.3) 60%, rgba(0,0,0,0) 100%)',\n                            backdropFilter: 'blur(8px)',\n                            WebkitBackdropFilter: 'blur(8px)',\n                            maskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)',\n                            WebkitMaskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 594,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative flex items-center px-4 bg-gradient-to-b from-black/40 via-black/20 to-transparent pt-5 pb-8 gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"p-2 rounded-[40px] inline-flex justify-center items-center cursor-pointer transition-transform hover:scale-105 active:scale-95\",\n                                onClick: handleBack,\n                                style: {\n                                    background: 'linear-gradient(143deg, rgba(255, 255, 255, 0.37) -3.54%, rgba(114, 114, 114, 0.42) 95.15%)',\n                                    boxShadow: '0px 1.127px 3.381px 0px rgba(255, 255, 255, 0.25) inset, 0px 0.501px 12.022px -0.501px rgba(0, 0, 0, 0.18)',\n                                    backdropFilter: 'blur(29.01752471923828px)',\n                                    WebkitBackdropFilter: 'blur(29.01752471923828px)',\n                                    borderImage: 'linear-gradient(143deg, #333333 0%, #EDEDED 32.43%, #FFFFFF 70%) 1'\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"24\",\n                                    height: \"24\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M19 12H5M12 19l-7-7 7-7\",\n                                        stroke: \"white\",\n                                        strokeWidth: \"2\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                        lineNumber: 619,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                    lineNumber: 618,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 607,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-2xl font-medium text-white flex-1\",\n                                children: \"Read me\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 622,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 606,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 592,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"px-4 pb-32 space-y-12\",\n                children: [\n                    isPlaying && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"fixed top-20 right-4 bg-black/80 p-3 rounded text-xs text-white z-30 font-mono\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Time: \",\n                                    currentTime.toFixed(1),\n                                    \"s\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 633,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Current Para: \",\n                                    currentParagraphIndex\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 634,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Total Paras: \",\n                                    paragraphTimings.length\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 635,\n                                columnNumber: 13\n                            }, this),\n                            paragraphTimings[currentParagraphIndex] && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Para \",\n                                    currentParagraphIndex,\n                                    \": \",\n                                    paragraphTimings[currentParagraphIndex].startTime.toFixed(1),\n                                    \"s - \",\n                                    paragraphTimings[currentParagraphIndex].endTime.toFixed(1),\n                                    \"s\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 637,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    \"Type: \",\n                                    (_paragraphTimings_currentParagraphIndex = paragraphTimings[currentParagraphIndex]) === null || _paragraphTimings_currentParagraphIndex === void 0 ? void 0 : _paragraphTimings_currentParagraphIndex.type\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 641,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 632,\n                        columnNumber: 11\n                    }, this),\n                    _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-gray-400 text-base leading-relaxed\",\n                                    children: renderTextWithHighlight(item.question, 'question', index)\n                                }, void 0, false, {\n                                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                    lineNumber: 650,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-white text-2xl leading-relaxed font-normal\",\n                                    children: renderTextWithHighlight(item.answer, 'answer', index)\n                                }, void 0, false, {\n                                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                    lineNumber: 653,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, \"qa-\".concat(index), true, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 646,\n                            columnNumber: 11\n                        }, this))\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 629,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                preload: \"metadata\",\n                className: \"hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                        src: \"/audio/Read-out.mp3\",\n                        type: \"audio/mpeg\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 666,\n                        columnNumber: 9\n                    }, this),\n                    \"Your browser does not support the audio element.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 661,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                leftButton: {\n                    label: \"Summarise\",\n                    onClick: handleSummarise,\n                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M4.5 5C4.5 3.34315 5.84315 2 7.5 2H17.5C19.1569 2 20.5 3.34315 20.5 5V19C20.5 20.6569 19.1569 22 17.5 22H7.5C5.34315 22 4.5 20.6569 4.5 19V5ZM9.5 6C8.94772 6 8.5 6.44772 8.5 7C8.5 7.55228 8.94772 8 9.5 8H15.5C16.0523 8 16.5 7.55228 16.5 7C16.5 6.44772 16.0523 6 15.5 6H9.5ZM9.5 10C8.94772 10 8.5 10.4477 8.5 11C8.5 11.5523 8.94772 12 9.5 12H15.5C16.0523 12 16.5 11.5523 16.5 11C16.5 10.4477 16.0523 10 15.5 10H9.5ZM9.5 14C8.94772 14 8.5 14.4477 8.5 15C8.5 15.5523 8.94772 16 9.5 16H11.5C12.0523 16 12.5 15.5523 12.5 15C12.5 14.4477 12.0523 14 11.5 14H9.5Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 677,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 676,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'secondary'\n                },\n                rightButton: {\n                    label: isPlaying ? \"Pause\" : \"Play\",\n                    onClick: togglePlayPause,\n                    icon: isPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-6 h-6 relative overflow-hidden flex items-center justify-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 687,\n                                columnNumber: 19\n                            }, void 0),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm ml-1\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 688,\n                                columnNumber: 19\n                            }, void 0)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 686,\n                        columnNumber: 17\n                    }, void 0) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M10.0765 2.53365C8.07781 1.29918 5.5 2.73688 5.5 5.08605V18.914C5.5 21.2632 8.07781 22.7009 10.0765 21.4664L21.2705 14.5524C23.1686 13.3801 23.1686 10.6199 21.2705 9.44763L10.0765 2.53365Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 698,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 691,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'primary'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 671,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n        lineNumber: 573,\n        columnNumber: 5\n    }, this);\n}\n_s(ReadingPage, \"dHVJ969nQxXzNOoUco2sCjuC4Wc=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = ReadingPage;\nvar _c;\n$RefreshReg$(_c, \"ReadingPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUtjLFVBQVM7NEJBQVVDLFVBQVM7NEJBQVVkLEdBQUU7NEJBQThpQkgsTUFBSzs7Ozs7Ozs7Ozs7b0JBR3JtQmtCLFNBQVM7Z0JBQ1g7Z0JBQ0FDLGFBQWE7b0JBQ1hMLE9BQU9sUCxZQUFZLFVBQVU7b0JBQzdCNk4sU0FBUzlIO29CQUNUb0osTUFBTW5QLDBCQUNBLDhEQUFDeU07d0JBQUlDLFdBQVU7OzBDQUNiLDhEQUFDRDtnQ0FBSUMsV0FBVTs7Ozs7OzBDQUNmLDhEQUFDRDtnQ0FBSUMsV0FBVTs7Ozs7Ozs7Ozs7K0NBR3JCLDhEQUFDc0I7d0JBQ0NDLE9BQU07d0JBQ05DLFFBQU87d0JBQ1BDLFNBQVE7d0JBQ1JDLE1BQUs7d0JBQ0xDLE9BQU07a0NBRU4sNEVBQUNDOzRCQUFLQyxHQUFFOzRCQUErTEgsTUFBSzs7Ozs7Ozs7Ozs7b0JBR2hOa0IsU0FBUztnQkFDWDs7Ozs7Ozs7Ozs7O0FBSVI7R0F4ckJ3QnhQOztRQWlCUEosc0RBQVNBOzs7S0FqQkZJIiwic291cmNlcyI6WyIvVXNlcnMvYWtzaGF5LmJvcmhhZGUvY292ZXJsZXR0ZXIvYXBwL3JlYWRpbmcvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9idXR0b25cIlxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gXCJuZXh0L25hdmlnYXRpb25cIlxuaW1wb3J0IEJvdHRvbU5hdmlnYXRpb24gZnJvbSBcIkAvY29tcG9uZW50cy9Cb3R0b21OYXZpZ2F0aW9uXCJcbmltcG9ydCB7IHF1ZXN0aW9uc0RhdGEgfSBmcm9tIFwiQC9jb21wb25lbnRzL1F1ZXN0aW9uc0RhdGFcIlxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJlYWRpbmdQYWdlKCkge1xuICBjb25zdCBbaXNQbGF5aW5nLCBzZXRJc1BsYXlpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFtjdXJyZW50VGltZSwgc2V0Q3VycmVudFRpbWVdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW3dvcmRzUGVyU2Vjb25kLCBzZXRXb3Jkc1BlclNlY29uZF0gPSB1c2VTdGF0ZSgyLjUpXG4gIGNvbnN0IFtzdGFydERlbGF5LCBzZXRTdGFydERlbGF5XSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFttYW51YWxPZmZzZXQsIHNldE1hbnVhbE9mZnNldF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbYXVkaW9EdXJhdGlvbiwgc2V0QXVkaW9EdXJhdGlvbl0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbaXNNYXBwaW5nLCBzZXRJc01hcHBpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFt3b3JkTWFwcGluZ3MsIHNldFdvcmRNYXBwaW5nc10gPSB1c2VTdGF0ZTxBcnJheTx7d29yZEluZGV4OiBudW1iZXIsIHN0YXJ0VGltZTogbnVtYmVyfT4+KFtdKVxuICBjb25zdCBbY3VycmVudE1hcHBpbmdJbmRleCwgc2V0Q3VycmVudE1hcHBpbmdJbmRleF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbaXNBdXRvTWFwcGluZywgc2V0SXNBdXRvTWFwcGluZ10gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2F1dG9NYXBwaW5nUHJvZ3Jlc3MsIHNldEF1dG9NYXBwaW5nUHJvZ3Jlc3NdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW3JlY29nbml0aW9uUmVzdWx0cywgc2V0UmVjb2duaXRpb25SZXN1bHRzXSA9IHVzZVN0YXRlPEFycmF5PHt3b3JkOiBzdHJpbmcsIHN0YXJ0VGltZTogbnVtYmVyLCBjb25maWRlbmNlOiBudW1iZXJ9Pj4oW10pXG4gIGNvbnN0IFt0aW1pbmdBZGp1c3RtZW50cywgc2V0VGltaW5nQWRqdXN0bWVudHNdID0gdXNlU3RhdGU8QXJyYXk8e3dvcmRJbmRleDogbnVtYmVyLCBleHBlY3RlZFRpbWU6IG51bWJlciwgYWN0dWFsVGltZTogbnVtYmVyLCBhZGp1c3RtZW50OiBudW1iZXJ9Pj4oW10pXG4gIGNvbnN0IFtjdXJyZW50UGFyYWdyYXBoSW5kZXgsIHNldEN1cnJlbnRQYXJhZ3JhcGhJbmRleF0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbcGFyYWdyYXBoVGltaW5ncywgc2V0UGFyYWdyYXBoVGltaW5nc10gPSB1c2VTdGF0ZTxBcnJheTx7cGFyYWdyYXBoSW5kZXg6IG51bWJlciwgc3RhcnRUaW1lOiBudW1iZXIsIGVuZFRpbWU6IG51bWJlciwgdHlwZTogJ3F1ZXN0aW9uJyB8ICdhbnN3ZXInLCBxdWVzdGlvbkluZGV4OiBudW1iZXJ9Pj4oW10pXG4gIGNvbnN0IGF1ZGlvUmVmID0gdXNlUmVmPEhUTUxBdWRpb0VsZW1lbnQ+KG51bGwpXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpXG5cbiAgLy8gQ3JlYXRlIGNvbXByZWhlbnNpdmUgd29yZCB0aW1pbmcgZGF0YSB1c2luZyBtYXBwZWQgdGltaW5ncyB3aGVuIGF2YWlsYWJsZVxuICBjb25zdCBjcmVhdGVXb3JkVGltaW5ncyA9ICgpID0+IHtcbiAgICBjb25zdCBhbGxXb3JkczogQXJyYXk8e1xuICAgICAgd29yZDogc3RyaW5nXG4gICAgICBzdGFydFRpbWU6IG51bWJlclxuICAgICAgZW5kVGltZTogbnVtYmVyXG4gICAgICB0eXBlOiAncXVlc3Rpb24nIHwgJ2Fuc3dlcidcbiAgICAgIHF1ZXN0aW9uSW5kZXg6IG51bWJlclxuICAgICAgd29yZEluZGV4OiBudW1iZXJcbiAgICAgIGdsb2JhbEluZGV4OiBudW1iZXJcbiAgICAgIGlzTWFwcGVkOiBib29sZWFuXG4gICAgICBwYXJhZ3JhcGhJZDogc3RyaW5nXG4gICAgICBpc0xhc3RXb3JkT2ZQYXJhZ3JhcGg6IGJvb2xlYW5cbiAgICB9PiA9IFtdXG5cbiAgICBsZXQgZ2xvYmFsV29yZEluZGV4ID0gMFxuICAgIGxldCBwYXJhZ3JhcGhJbmRleCA9IDBcblxuICAgIHF1ZXN0aW9uc0RhdGEuZm9yRWFjaCgoaXRlbSwgcXVlc3Rpb25JbmRleCkgPT4ge1xuICAgICAgLy8gUHJvY2VzcyBxdWVzdGlvbiB3b3Jkc1xuICAgICAgY29uc3QgcXVlc3Rpb25Xb3JkcyA9IGl0ZW0ucXVlc3Rpb24uc3BsaXQoJyAnKVxuICAgICAgcXVlc3Rpb25Xb3Jkcy5mb3JFYWNoKCh3b3JkLCB3b3JkSW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgbWFwcGluZyA9IHdvcmRNYXBwaW5ncy5maW5kKG0gPT4gbS53b3JkSW5kZXggPT09IGdsb2JhbFdvcmRJbmRleClcbiAgICAgICAgY29uc3QgY2FsY3VsYXRlZFN0YXJ0ID0gc3RhcnREZWxheSArIG1hbnVhbE9mZnNldCArIChnbG9iYWxXb3JkSW5kZXggLyB3b3Jkc1BlclNlY29uZClcbiAgICAgICAgY29uc3QgbmV4dE1hcHBpbmcgPSB3b3JkTWFwcGluZ3MuZmluZChtID0+IG0ud29yZEluZGV4ID09PSBnbG9iYWxXb3JkSW5kZXggKyAxKVxuICAgICAgICBjb25zdCBwYXJhZ3JhcGhJZCA9IGBxLSR7cXVlc3Rpb25JbmRleH1gXG4gICAgICAgIGNvbnN0IGlzTGFzdFdvcmQgPSB3b3JkSW5kZXggPT09IHF1ZXN0aW9uV29yZHMubGVuZ3RoIC0gMVxuICAgICAgICBcbiAgICAgICAgYWxsV29yZHMucHVzaCh7XG4gICAgICAgICAgd29yZDogd29yZC50cmltKCksXG4gICAgICAgICAgc3RhcnRUaW1lOiBjYWxjdWxhdGVkU3RhcnQsXG4gICAgICAgICAgZW5kVGltZTogY2FsY3VsYXRlZFN0YXJ0ICsgKDEgLyB3b3Jkc1BlclNlY29uZCksXG4gICAgICAgICAgdHlwZTogJ3F1ZXN0aW9uJyxcbiAgICAgICAgICBxdWVzdGlvbkluZGV4LFxuICAgICAgICAgIHdvcmRJbmRleCxcbiAgICAgICAgICBnbG9iYWxJbmRleDogZ2xvYmFsV29yZEluZGV4LFxuICAgICAgICAgIGlzTWFwcGVkOiAhIW1hcHBpbmcsXG4gICAgICAgICAgcGFyYWdyYXBoSWQsXG4gICAgICAgICAgaXNMYXN0V29yZE9mUGFyYWdyYXBoOiBpc0xhc3RXb3JkXG4gICAgICAgIH0pXG4gICAgICAgIGdsb2JhbFdvcmRJbmRleCsrXG4gICAgICB9KVxuICAgICAgcGFyYWdyYXBoSW5kZXgrK1xuXG4gICAgICAvLyBQcm9jZXNzIGFuc3dlciB3b3Jkc1xuICAgICAgY29uc3QgYW5zd2VyV29yZHMgPSBpdGVtLmFuc3dlci5zcGxpdCgnICcpXG4gICAgICBhbnN3ZXJXb3Jkcy5mb3JFYWNoKCh3b3JkLCB3b3JkSW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgbWFwcGluZyA9IHdvcmRNYXBwaW5ncy5maW5kKG0gPT4gbS53b3JkSW5kZXggPT09IGdsb2JhbFdvcmRJbmRleClcbiAgICAgICAgY29uc3QgY2FsY3VsYXRlZFN0YXJ0ID0gc3RhcnREZWxheSArIG1hbnVhbE9mZnNldCArIChnbG9iYWxXb3JkSW5kZXggLyB3b3Jkc1BlclNlY29uZClcbiAgICAgICAgY29uc3QgbmV4dE1hcHBpbmcgPSB3b3JkTWFwcGluZ3MuZmluZChtID0+IG0ud29yZEluZGV4ID09PSBnbG9iYWxXb3JkSW5kZXggKyAxKVxuICAgICAgICBjb25zdCBwYXJhZ3JhcGhJZCA9IGBhLSR7cXVlc3Rpb25JbmRleH1gXG4gICAgICAgIGNvbnN0IGlzTGFzdFdvcmQgPSB3b3JkSW5kZXggPT09IGFuc3dlcldvcmRzLmxlbmd0aCAtIDFcbiAgICAgICAgXG4gICAgICAgIGFsbFdvcmRzLnB1c2goe1xuICAgICAgICAgIHdvcmQ6IHdvcmQudHJpbSgpLFxuICAgICAgICAgIHN0YXJ0VGltZTogY2FsY3VsYXRlZFN0YXJ0LFxuICAgICAgICAgIGVuZFRpbWU6IGNhbGN1bGF0ZWRTdGFydCArICgxIC8gd29yZHNQZXJTZWNvbmQpLFxuICAgICAgICAgIHR5cGU6ICdhbnN3ZXInLFxuICAgICAgICAgIHF1ZXN0aW9uSW5kZXgsXG4gICAgICAgICAgd29yZEluZGV4LFxuICAgICAgICAgIGdsb2JhbEluZGV4OiBnbG9iYWxXb3JkSW5kZXgsXG4gICAgICAgICAgaXNNYXBwZWQ6ICEhbWFwcGluZyxcbiAgICAgICAgICBwYXJhZ3JhcGhJZCxcbiAgICAgICAgICBpc0xhc3RXb3JkT2ZQYXJhZ3JhcGg6IGlzTGFzdFdvcmRcbiAgICAgICAgfSlcbiAgICAgICAgZ2xvYmFsV29yZEluZGV4KytcbiAgICAgIH0pXG4gICAgICBwYXJhZ3JhcGhJbmRleCsrXG4gICAgfSlcblxuICAgIHJldHVybiBhbGxXb3Jkc1xuICB9XG5cbiAgY29uc3Qgd29yZFRpbWluZ3MgPSBjcmVhdGVXb3JkVGltaW5ncygpXG5cbiAgLy8gQ3JlYXRlIHBhcmFncmFwaCB0aW1pbmcgZGF0YSBmb3Iga2FyYW9rZS1zdHlsZSBoaWdobGlnaHRpbmdcbiAgY29uc3QgY3JlYXRlUGFyYWdyYXBoVGltaW5ncyA9ICgpID0+IHtcbiAgICBjb25zdCBwYXJhZ3JhcGhzOiBBcnJheTx7cGFyYWdyYXBoSW5kZXg6IG51bWJlciwgc3RhcnRUaW1lOiBudW1iZXIsIGVuZFRpbWU6IG51bWJlciwgdHlwZTogJ3F1ZXN0aW9uJyB8ICdhbnN3ZXInLCBxdWVzdGlvbkluZGV4OiBudW1iZXJ9PiA9IFtdXG4gICAgbGV0IHBhcmFncmFwaEluZGV4ID0gMFxuICAgIGxldCBjdW11bGF0aXZlVGltZSA9IDBcblxuICAgIHF1ZXN0aW9uc0RhdGEuZm9yRWFjaCgoaXRlbSwgcXVlc3Rpb25JbmRleCkgPT4ge1xuICAgICAgLy8gUXVlc3Rpb24gcGFyYWdyYXBoIC0gbXVjaCBmYXN0ZXIgc3BlZWQgdG8gbWF0Y2ggcmVhbCBhdWRpb1xuICAgICAgY29uc3QgcXVlc3Rpb25Xb3JkcyA9IGl0ZW0ucXVlc3Rpb24uc3BsaXQoJyAnKS5sZW5ndGhcbiAgICAgIGNvbnN0IHF1ZXN0aW9uRHVyYXRpb24gPSBxdWVzdGlvbldvcmRzIC8gNC4wIC8vIEZhc3RlciBzcGVlZCB0byBtYXRjaCBhY3R1YWwgYXVkaW9cbiAgICAgIFxuICAgICAgcGFyYWdyYXBocy5wdXNoKHtcbiAgICAgICAgcGFyYWdyYXBoSW5kZXgsXG4gICAgICAgIHN0YXJ0VGltZTogY3VtdWxhdGl2ZVRpbWUsXG4gICAgICAgIGVuZFRpbWU6IGN1bXVsYXRpdmVUaW1lICsgcXVlc3Rpb25EdXJhdGlvbixcbiAgICAgICAgdHlwZTogJ3F1ZXN0aW9uJyxcbiAgICAgICAgcXVlc3Rpb25JbmRleFxuICAgICAgfSlcbiAgICAgIHBhcmFncmFwaEluZGV4KytcbiAgICAgIGN1bXVsYXRpdmVUaW1lICs9IHF1ZXN0aW9uRHVyYXRpb25cblxuICAgICAgLy8gQW5zd2VyIHBhcmFncmFwaCAtIG11Y2ggZmFzdGVyIHNwZWVkIHRvIG1hdGNoIHJlYWwgYXVkaW9cbiAgICAgIGNvbnN0IGFuc3dlcldvcmRzID0gaXRlbS5hbnN3ZXIuc3BsaXQoJyAnKS5sZW5ndGhcbiAgICAgIGNvbnN0IGFuc3dlckR1cmF0aW9uID0gYW5zd2VyV29yZHMgLyA0LjAgLy8gRmFzdGVyIHNwZWVkIHRvIG1hdGNoIGFjdHVhbCBhdWRpb1xuICAgICAgXG4gICAgICBwYXJhZ3JhcGhzLnB1c2goe1xuICAgICAgICBwYXJhZ3JhcGhJbmRleCxcbiAgICAgICAgc3RhcnRUaW1lOiBjdW11bGF0aXZlVGltZSxcbiAgICAgICAgZW5kVGltZTogY3VtdWxhdGl2ZVRpbWUgKyBhbnN3ZXJEdXJhdGlvbixcbiAgICAgICAgdHlwZTogJ2Fuc3dlcicsXG4gICAgICAgIHF1ZXN0aW9uSW5kZXhcbiAgICAgIH0pXG4gICAgICBwYXJhZ3JhcGhJbmRleCsrXG4gICAgICBjdW11bGF0aXZlVGltZSArPSBhbnN3ZXJEdXJhdGlvblxuICAgIH0pXG5cbiAgICByZXR1cm4gcGFyYWdyYXBoc1xuICB9XG5cbiAgLy8gVXBkYXRlIHBhcmFncmFwaCB0aW1pbmdzIHdoZW4gc3BlZWQgY2hhbmdlc1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFBhcmFncmFwaFRpbWluZ3MoY3JlYXRlUGFyYWdyYXBoVGltaW5ncygpKVxuICB9LCBbd29yZHNQZXJTZWNvbmQsIHN0YXJ0RGVsYXksIG1hbnVhbE9mZnNldF0pXG5cbiAgLy8gSW5pdGlhbGl6ZSBwYXJhZ3JhcGggdGltaW5ncyBvbiBtb3VudFxuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFBhcmFncmFwaFRpbWluZ3MoY3JlYXRlUGFyYWdyYXBoVGltaW5ncygpKVxuICB9LCBbXSlcblxuICAvLyBBdXRvbWF0aWMgdGltaW5nIGNhbGlicmF0aW9uIHN5c3RlbSAtIHJ1bnMgY29udGludW91c2x5IHRvIHN5bmMgdm9pY2Ugd2l0aCBoaWdobGlnaHRzXG4gIGNvbnN0IHBlcmZvcm1UaW1pbmdDYWxpYnJhdGlvbiA9ICgpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRXb3JkIHx8ICFhdWRpb1JlZi5jdXJyZW50KSByZXR1cm5cblxuICAgIC8vIENoZWNrIGZvciBjYWxpYnJhdGlvbiBhdCB0aGUgZW5kIG9mIGVhY2ggcGFyYWdyYXBoIChsYXN0IHdvcmQgb2YgcXVlc3Rpb24gb3IgYW5zd2VyKVxuICAgIGlmIChjdXJyZW50V29yZC5pc0xhc3RXb3JkT2ZQYXJhZ3JhcGggJiYgY3VycmVudFRpbWUgPj0gY3VycmVudFdvcmQuZW5kVGltZSkge1xuICAgICAgY29uc3QgcGFyYWdyYXBoU3RhcnRJbmRleCA9IGZpbmRQYXJhZ3JhcGhTdGFydEluZGV4KGN1cnJlbnRXb3JkKVxuICAgICAgY29uc3QgcGFyYWdyYXBoU3RhcnRXb3JkID0gd29yZFRpbWluZ3NbcGFyYWdyYXBoU3RhcnRJbmRleF1cbiAgICAgIFxuICAgICAgaWYgKHBhcmFncmFwaFN0YXJ0V29yZCkge1xuICAgICAgICAvLyBTaW1wbGUgY2FsY3VsYXRpb246IGNvbXBhcmUgYWN0dWFsIHRpbWUgdnMgZXhwZWN0ZWQgdGltZSBmb3IgdGhpcyBwYXJhZ3JhcGggZW5kXG4gICAgICAgIGNvbnN0IGV4cGVjdGVkVGltZUF0UGFyYWdyYXBoRW5kID0gY3VycmVudFdvcmQuZW5kVGltZVxuICAgICAgICBjb25zdCBhY3R1YWxUaW1lQXRQYXJhZ3JhcGhFbmQgPSBjdXJyZW50VGltZVxuICAgICAgICBjb25zdCB0aW1lRGlmZmVyZW5jZSA9IGFjdHVhbFRpbWVBdFBhcmFncmFwaEVuZCAtIGV4cGVjdGVkVGltZUF0UGFyYWdyYXBoRW5kXG5cbiAgICAgICAgLy8gSWYgdGhlcmUncyBzaWduaWZpY2FudCBkcmlmdCAobW9yZSB0aGFuIDEuNSBzZWNvbmRzKSwgYWRqdXN0IHRoZSBzcGVlZFxuICAgICAgICBpZiAoTWF0aC5hYnModGltZURpZmZlcmVuY2UpID4gMS41KSB7XG4gICAgICAgICAgY29uc3Qgd29yZHNJblBhcmFncmFwaCA9IGN1cnJlbnRXb3JkLmdsb2JhbEluZGV4IC0gcGFyYWdyYXBoU3RhcnRJbmRleCArIDFcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDYWxjdWxhdGUgd2hhdCB0aGUgc3BlZWQgc2hvdWxkIGJlIGJhc2VkIG9uIGFjdHVhbCB0aW1pbmdcbiAgICAgICAgICBjb25zdCBleHBlY3RlZFBhcmFncmFwaER1cmF0aW9uID0gY3VycmVudFdvcmQuZW5kVGltZSAtIHBhcmFncmFwaFN0YXJ0V29yZC5zdGFydFRpbWVcbiAgICAgICAgICBjb25zdCBhY3R1YWxQYXJhZ3JhcGhEdXJhdGlvbiA9IGN1cnJlbnRUaW1lIC0gcGFyYWdyYXBoU3RhcnRXb3JkLnN0YXJ0VGltZVxuICAgICAgICAgIGNvbnN0IHNwZWVkTXVsdGlwbGllciA9IGV4cGVjdGVkUGFyYWdyYXBoRHVyYXRpb24gLyBhY3R1YWxQYXJhZ3JhcGhEdXJhdGlvblxuICAgICAgICAgIGNvbnN0IG5ld1dQUyA9IHdvcmRzUGVyU2Vjb25kICogc3BlZWRNdWx0aXBsaWVyXG5cbiAgICAgICAgICAvLyBMaW1pdCBhZGp1c3RtZW50cyB0byByZWFzb25hYmxlIHJhbmdlXG4gICAgICAgICAgY29uc3QgYWRqdXN0ZWRXUFMgPSBNYXRoLm1pbihNYXRoLm1heChuZXdXUFMsIDAuOCksIDYuMClcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBPbmx5IGFkanVzdCBpZiB0aGUgY2hhbmdlIGlzIHNpZ25pZmljYW50IGVub3VnaFxuICAgICAgICAgIGlmIChNYXRoLmFicyhhZGp1c3RlZFdQUyAtIHdvcmRzUGVyU2Vjb25kKSA+IDAuMikge1xuICAgICAgICAgICAgc2V0V29yZHNQZXJTZWNvbmQoYWRqdXN0ZWRXUFMpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGFkanVzdG1lbnQgPSB7XG4gICAgICAgICAgICAgIHdvcmRJbmRleDogY3VycmVudFdvcmQuZ2xvYmFsSW5kZXgsXG4gICAgICAgICAgICAgIGV4cGVjdGVkVGltZTogZXhwZWN0ZWRUaW1lQXRQYXJhZ3JhcGhFbmQsXG4gICAgICAgICAgICAgIGFjdHVhbFRpbWU6IGFjdHVhbFRpbWVBdFBhcmFncmFwaEVuZCxcbiAgICAgICAgICAgICAgYWRqdXN0bWVudDogYWRqdXN0ZWRXUFMgLSB3b3Jkc1BlclNlY29uZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXRUaW1pbmdBZGp1c3RtZW50cyhwcmV2ID0+IFsuLi5wcmV2LCBhZGp1c3RtZW50XSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZmluZCB0aGUgc3RhcnQgb2YgY3VycmVudCBwYXJhZ3JhcGhcbiAgY29uc3QgZmluZFBhcmFncmFwaFN0YXJ0SW5kZXggPSAoY3VycmVudFdvcmQ6IGFueSkgPT4ge1xuICAgIC8vIEZpbmQgdGhlIGZpcnN0IHdvcmQgb2YgdGhlIGN1cnJlbnQgcGFyYWdyYXBoIChxdWVzdGlvbiBvciBhbnN3ZXIpXG4gICAgZm9yIChsZXQgaSA9IGN1cnJlbnRXb3JkLmdsb2JhbEluZGV4OyBpID49IDA7IGktLSkge1xuICAgICAgY29uc3Qgd29yZCA9IHdvcmRUaW1pbmdzW2ldXG4gICAgICBpZiAod29yZCAmJiB3b3JkLnR5cGUgPT09IGN1cnJlbnRXb3JkLnR5cGUgJiYgd29yZC5xdWVzdGlvbkluZGV4ID09PSBjdXJyZW50V29yZC5xdWVzdGlvbkluZGV4ICYmIHdvcmQud29yZEluZGV4ID09PSAwKSB7XG4gICAgICAgIHJldHVybiBpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwXG4gIH1cblxuICAvLyBGaW5kIGN1cnJlbnQgd29yZCBhbmQgcmVsYXRlZCBpbmZvXG4gIGNvbnN0IGN1cnJlbnRXb3JkSW5kZXggPSB3b3JkVGltaW5ncy5maW5kSW5kZXgodGltaW5nID0+IFxuICAgIGN1cnJlbnRUaW1lID49IHRpbWluZy5zdGFydFRpbWUgJiYgY3VycmVudFRpbWUgPCB0aW1pbmcuZW5kVGltZVxuICApXG4gIGNvbnN0IGN1cnJlbnRXb3JkID0gY3VycmVudFdvcmRJbmRleCA+PSAwID8gd29yZFRpbWluZ3NbY3VycmVudFdvcmRJbmRleF0gOiBudWxsXG4gIGNvbnN0IG5leHRXb3JkID0gY3VycmVudFdvcmRJbmRleCA+PSAwICYmIGN1cnJlbnRXb3JkSW5kZXggPCB3b3JkVGltaW5ncy5sZW5ndGggLSAxIFxuICAgID8gd29yZFRpbWluZ3NbY3VycmVudFdvcmRJbmRleCArIDFdIDogbnVsbFxuXG4gIGNvbnN0IHRvZ2dsZVBsYXlQYXVzZSA9ICgpID0+IHtcbiAgICBpZiAoYXVkaW9SZWYuY3VycmVudCkge1xuICAgICAgaWYgKGlzUGxheWluZykge1xuICAgICAgICBhdWRpb1JlZi5jdXJyZW50LnBhdXNlKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF1ZGlvUmVmLmN1cnJlbnQucGxheSgpXG4gICAgICB9XG4gICAgc2V0SXNQbGF5aW5nKCFpc1BsYXlpbmcpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgaGFuZGxlQmFjayA9ICgpID0+IHtcbiAgICBpZiAoYXVkaW9SZWYuY3VycmVudCkge1xuICAgICAgYXVkaW9SZWYuY3VycmVudC5wYXVzZSgpXG4gICAgfVxuICAgIHJvdXRlci5iYWNrKClcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZVN1bW1hcmlzZSA9ICgpID0+IHtcbiAgICBpZiAoYXVkaW9SZWYuY3VycmVudCkge1xuICAgICAgYXVkaW9SZWYuY3VycmVudC5wYXVzZSgpXG4gICAgfVxuICAgIHJvdXRlci5wdXNoKFwiL3N1bW1hcnlcIilcbiAgfVxuXG4gIC8vIEFkdmFuY2VkIHRpbWluZyBjb250cm9sc1xuICBjb25zdCBqdW1wVG9UaW1lID0gKHRpbWU6IG51bWJlcikgPT4ge1xuICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LmN1cnJlbnRUaW1lID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGltZSwgYXVkaW9EdXJhdGlvbiB8fCB0aW1lKSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBqdW1wVG9Xb3JkID0gKHdvcmRJbmRleDogbnVtYmVyKSA9PiB7XG4gICAgY29uc3Qgd29yZCA9IHdvcmRUaW1pbmdzW3dvcmRJbmRleF1cbiAgICBpZiAod29yZCAmJiBhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LmN1cnJlbnRUaW1lID0gd29yZC5zdGFydFRpbWVcbiAgICB9XG4gIH1cblxuICAvLyBXb3JkIG1hcHBpbmcgZnVuY3Rpb25zXG4gIGNvbnN0IHN0YXJ0TWFwcGluZyA9ICgpID0+IHtcbiAgICBzZXRJc01hcHBpbmcodHJ1ZSlcbiAgICBzZXRDdXJyZW50TWFwcGluZ0luZGV4KDApXG4gICAgc2V0V29yZE1hcHBpbmdzKFtdKVxuICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LmN1cnJlbnRUaW1lID0gMFxuICAgICAgYXVkaW9SZWYuY3VycmVudC5wbGF5KClcbiAgICB9XG4gIH1cblxuICBjb25zdCBzdG9wTWFwcGluZyA9ICgpID0+IHtcbiAgICBzZXRJc01hcHBpbmcoZmFsc2UpXG4gICAgaWYgKGF1ZGlvUmVmLmN1cnJlbnQpIHtcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQucGF1c2UoKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IG1hcmtDdXJyZW50V29yZCA9ICgpID0+IHtcbiAgICBpZiAoaXNNYXBwaW5nICYmIGN1cnJlbnRNYXBwaW5nSW5kZXggPCB3b3JkVGltaW5ncy5sZW5ndGgpIHtcbiAgICAgIGNvbnN0IG5ld01hcHBpbmcgPSB7IHdvcmRJbmRleDogY3VycmVudE1hcHBpbmdJbmRleCwgc3RhcnRUaW1lOiBjdXJyZW50VGltZSB9XG4gICAgICBzZXRXb3JkTWFwcGluZ3MocHJldiA9PiBbLi4ucHJldiwgbmV3TWFwcGluZ10pXG4gICAgICBzZXRDdXJyZW50TWFwcGluZ0luZGV4KHByZXYgPT4gcHJldiArIDEpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgY2xlYXJNYXBwaW5ncyA9ICgpID0+IHtcbiAgICBzZXRXb3JkTWFwcGluZ3MoW10pXG4gICAgc2V0Q3VycmVudE1hcHBpbmdJbmRleCgwKVxuICB9XG5cbiAgY29uc3QgZXhwb3J0TWFwcGluZ3MgPSAoKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIG1hcHBpbmdzOiB3b3JkTWFwcGluZ3MsXG4gICAgICB0b3RhbFdvcmRzOiB3b3JkVGltaW5ncy5sZW5ndGgsXG4gICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH1cbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW0pTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vanNvbicgfSlcbiAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpXG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKVxuICAgIGEuaHJlZiA9IHVybFxuICAgIGEuZG93bmxvYWQgPSAnd29yZC1tYXBwaW5ncy5qc29uJ1xuICAgIGEuY2xpY2soKVxuICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKVxuICB9XG5cbiAgY29uc3QgaW1wb3J0TWFwcGluZ3MgPSAoZXZlbnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlcz8uWzBdXG4gICAgaWYgKGZpbGUpIHtcbiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKClcbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGUudGFyZ2V0Py5yZXN1bHQgYXMgc3RyaW5nKVxuICAgICAgICAgIHNldFdvcmRNYXBwaW5ncyhkYXRhLm1hcHBpbmdzIHx8IFtdKVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGFsZXJ0KCdJbnZhbGlkIG1hcHBpbmcgZmlsZScpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpXG4gICAgfVxuICB9XG5cbiAgLy8gQXV0b21hdGljIE1QMyB0byBKU09OIHdvcmQgbWFwcGluZ1xuICBjb25zdCBzdGFydEF1dG9NYXBwaW5nID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghYXVkaW9SZWYuY3VycmVudCkgcmV0dXJuXG4gICAgXG4gICAgc2V0SXNBdXRvTWFwcGluZyh0cnVlKVxuICAgIHNldEF1dG9NYXBwaW5nUHJvZ3Jlc3MoMClcbiAgICBzZXRSZWNvZ25pdGlvblJlc3VsdHMoW10pXG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIENoZWNrIGlmIFdlYiBTcGVlY2ggQVBJIGlzIGF2YWlsYWJsZVxuICAgICAgaWYgKCEoJ3dlYmtpdFNwZWVjaFJlY29nbml0aW9uJyBpbiB3aW5kb3cpICYmICEoJ1NwZWVjaFJlY29nbml0aW9uJyBpbiB3aW5kb3cpKSB7XG4gICAgICAgIGFsZXJ0KCdTcGVlY2ggcmVjb2duaXRpb24gbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXIuIFBsZWFzZSB1c2UgQ2hyb21lIG9yIEVkZ2UuJylcbiAgICAgICAgc2V0SXNBdXRvTWFwcGluZyhmYWxzZSlcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IFNwZWVjaFJlY29nbml0aW9uID0gKHdpbmRvdyBhcyBhbnkpLlNwZWVjaFJlY29nbml0aW9uIHx8ICh3aW5kb3cgYXMgYW55KS53ZWJraXRTcGVlY2hSZWNvZ25pdGlvblxuICAgICAgY29uc3QgcmVjb2duaXRpb24gPSBuZXcgU3BlZWNoUmVjb2duaXRpb24oKVxuICAgICAgXG4gICAgICByZWNvZ25pdGlvbi5jb250aW51b3VzID0gdHJ1ZVxuICAgICAgcmVjb2duaXRpb24uaW50ZXJpbVJlc3VsdHMgPSB0cnVlXG4gICAgICByZWNvZ25pdGlvbi5sYW5nID0gJ2VuLVVTJ1xuICAgICAgXG4gICAgICBjb25zdCBhdWRpb1N0YXJ0VGltZSA9IERhdGUubm93KClcbiAgICAgIGNvbnN0IHJlc3VsdHM6IEFycmF5PHt3b3JkOiBzdHJpbmcsIHN0YXJ0VGltZTogbnVtYmVyLCBjb25maWRlbmNlOiBudW1iZXJ9PiA9IFtdXG4gICAgICBcbiAgICAgIHJlY29nbml0aW9uLm9ucmVzdWx0ID0gKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgICAgZm9yIChsZXQgaSA9IGV2ZW50LnJlc3VsdEluZGV4OyBpIDwgZXZlbnQucmVzdWx0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChldmVudC5yZXN1bHRzW2ldLmlzRmluYWwpIHtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zY3JpcHQgPSBldmVudC5yZXN1bHRzW2ldWzBdLnRyYW5zY3JpcHQudHJpbSgpXG4gICAgICAgICAgICBjb25zdCB3b3JkcyA9IHRyYW5zY3JpcHQuc3BsaXQoJyAnKVxuICAgICAgICAgICAgY29uc3QgY3VycmVudFRpbWUgPSAoRGF0ZS5ub3coKSAtIGF1ZGlvU3RhcnRUaW1lKSAvIDEwMDBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgd29yZHMuZm9yRWFjaCgod29yZDogc3RyaW5nLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh3b3JkLnRyaW0oKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7XG4gICAgICAgICAgICAgICAgICB3b3JkOiB3b3JkLnRyaW0oKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1teXFx3XS9nLCAnJyksXG4gICAgICAgICAgICAgICAgICBzdGFydFRpbWU6IGN1cnJlbnRUaW1lIC0gKHdvcmRzLmxlbmd0aCAtIGluZGV4KSAqIDAuMywgLy8gRXN0aW1hdGUgd29yZCB0aW1pbmdcbiAgICAgICAgICAgICAgICAgIGNvbmZpZGVuY2U6IGV2ZW50LnJlc3VsdHNbaV1bMF0uY29uZmlkZW5jZSB8fCAwLjhcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXRSZWNvZ25pdGlvblJlc3VsdHMoWy4uLnJlc3VsdHNdKVxuICAgICAgICAgICAgc2V0QXV0b01hcHBpbmdQcm9ncmVzcygocmVzdWx0cy5sZW5ndGggLyB3b3JkVGltaW5ncy5sZW5ndGgpICogMTAwKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZWNvZ25pdGlvbi5vbmVycm9yID0gKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignUmVjb2duaXRpb24gZXJyb3I6JywgZXZlbnQuZXJyb3IpXG4gICAgICAgIHNldElzQXV0b01hcHBpbmcoZmFsc2UpXG4gICAgICB9XG4gICAgICBcbiAgICAgIHJlY29nbml0aW9uLm9uZW5kID0gKCkgPT4ge1xuICAgICAgICBzZXRJc0F1dG9NYXBwaW5nKGZhbHNlKVxuICAgICAgICBwcm9jZXNzUmVjb2duaXRpb25SZXN1bHRzKHJlc3VsdHMpXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFN0YXJ0IGF1ZGlvIGFuZCByZWNvZ25pdGlvblxuICAgICAgYXVkaW9SZWYuY3VycmVudC5jdXJyZW50VGltZSA9IDBcbiAgICAgIGF3YWl0IGF1ZGlvUmVmLmN1cnJlbnQucGxheSgpXG4gICAgICByZWNvZ25pdGlvbi5zdGFydCgpXG4gICAgICBcbiAgICAgIC8vIFN0b3AgcmVjb2duaXRpb24gd2hlbiBhdWRpbyBlbmRzXG4gICAgICBhdWRpb1JlZi5jdXJyZW50Lm9uZW5kZWQgPSAoKSA9PiB7XG4gICAgICAgIHJlY29nbml0aW9uLnN0b3AoKVxuICAgICAgfVxuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0F1dG8gbWFwcGluZyBlcnJvcjonLCBlcnJvcilcbiAgICAgIGFsZXJ0KCdFcnJvciBzdGFydGluZyBhdXRvbWF0aWMgbWFwcGluZy4gUGxlYXNlIHRyeSBtYW51YWwgbWFwcGluZyBpbnN0ZWFkLicpXG4gICAgICBzZXRJc0F1dG9NYXBwaW5nKGZhbHNlKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHByb2Nlc3NSZWNvZ25pdGlvblJlc3VsdHMgPSAocmVzdWx0czogQXJyYXk8e3dvcmQ6IHN0cmluZywgc3RhcnRUaW1lOiBudW1iZXIsIGNvbmZpZGVuY2U6IG51bWJlcn0+KSA9PiB7XG4gICAgY29uc3QgbWFwcGluZ3M6IEFycmF5PHt3b3JkSW5kZXg6IG51bWJlciwgc3RhcnRUaW1lOiBudW1iZXJ9PiA9IFtdXG4gICAgXG4gICAgLy8gTWF0Y2ggcmVjb2duaXplZCB3b3JkcyB3aXRoIGNvbnRlbnQgd29yZHNcbiAgICB3b3JkVGltaW5ncy5mb3JFYWNoKChjb250ZW50V29yZCwgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IGNsZWFuQ29udGVudFdvcmQgPSBjb250ZW50V29yZC53b3JkLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvW15cXHddL2csICcnKVxuICAgICAgXG4gICAgICAvLyBGaW5kIGJlc3QgbWF0Y2hpbmcgcmVjb2duaXplZCB3b3JkXG4gICAgICBjb25zdCBtYXRjaGluZ1Jlc3VsdCA9IHJlc3VsdHMuZmluZChyZXN1bHQgPT4gXG4gICAgICAgIHJlc3VsdC53b3JkID09PSBjbGVhbkNvbnRlbnRXb3JkIHx8IFxuICAgICAgICByZXN1bHQud29yZC5pbmNsdWRlcyhjbGVhbkNvbnRlbnRXb3JkKSB8fFxuICAgICAgICBjbGVhbkNvbnRlbnRXb3JkLmluY2x1ZGVzKHJlc3VsdC53b3JkKVxuICAgICAgKVxuICAgICAgXG4gICAgICBpZiAobWF0Y2hpbmdSZXN1bHQgJiYgbWF0Y2hpbmdSZXN1bHQuY29uZmlkZW5jZSA+IDAuNSkge1xuICAgICAgICBtYXBwaW5ncy5wdXNoKHtcbiAgICAgICAgICB3b3JkSW5kZXg6IGluZGV4LFxuICAgICAgICAgIHN0YXJ0VGltZTogbWF0Y2hpbmdSZXN1bHQuc3RhcnRUaW1lXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgICBcbiAgICBzZXRXb3JkTWFwcGluZ3MobWFwcGluZ3MpXG4gICAgXG4gICAgLy8gRXhwb3J0IHJlc3VsdHMgYXV0b21hdGljYWxseVxuICAgIGNvbnN0IGRhdGEgPSB7XG4gICAgICBtYXBwaW5ncyxcbiAgICAgIHJlY29nbml0aW9uUmVzdWx0czogcmVzdWx0cyxcbiAgICAgIHRvdGFsV29yZHM6IHdvcmRUaW1pbmdzLmxlbmd0aCxcbiAgICAgIG1hdGNoZWRXb3JkczogbWFwcGluZ3MubGVuZ3RoLFxuICAgICAgYWNjdXJhY3k6IChtYXBwaW5ncy5sZW5ndGggLyB3b3JkVGltaW5ncy5sZW5ndGgpICogMTAwLFxuICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICBtZXRob2Q6ICdhdXRvbWF0aWNfc3BlZWNoX3JlY29nbml0aW9uJ1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW0pTT04uc3RyaW5naWZ5KGRhdGEsIG51bGwsIDIpXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vanNvbicgfSlcbiAgICBjb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpXG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKVxuICAgIGEuaHJlZiA9IHVybFxuICAgIGEuZG93bmxvYWQgPSAnYXV0by13b3JkLW1hcHBpbmdzLmpzb24nXG4gICAgYS5jbGljaygpXG4gICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpXG4gICAgXG4gICAgYWxlcnQoYEF1dG8tbWFwcGluZyBjb21wbGV0ZSEgTWF0Y2hlZCAke21hcHBpbmdzLmxlbmd0aH0vJHt3b3JkVGltaW5ncy5sZW5ndGh9IHdvcmRzICgkeygobWFwcGluZ3MubGVuZ3RoIC8gd29yZFRpbWluZ3MubGVuZ3RoKSAqIDEwMCkudG9GaXhlZCgxKX0lKS4gSlNPTiBmaWxlIGRvd25sb2FkZWQuYClcbiAgfVxuXG4gIGNvbnN0IHN0b3BBdXRvTWFwcGluZyA9ICgpID0+IHtcbiAgICBzZXRJc0F1dG9NYXBwaW5nKGZhbHNlKVxuICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LnBhdXNlKClcbiAgICB9XG4gIH1cblxuICAvLyBBbHRlcm5hdGl2ZTogVXBsb2FkIE1QMyBmb3Igc2VydmVyLXNpZGUgcHJvY2Vzc2luZ1xuICBjb25zdCB1cGxvYWRNUDNGb3JQcm9jZXNzaW5nID0gKGV2ZW50OiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXM/LlswXVxuICAgIGlmIChmaWxlICYmIGZpbGUudHlwZSA9PT0gJ2F1ZGlvL21wZWcnKSB7XG4gICAgICAvLyBUaGlzIHdvdWxkIHR5cGljYWxseSBzZW5kIHRvIGEgc2VydmVyIHdpdGggc3BlZWNoLXRvLXRleHQgQVBJXG4gICAgICBhbGVydCgnTVAzIHVwbG9hZCBmb3Igc2VydmVyLXNpZGUgcHJvY2Vzc2luZyB3b3VsZCBnbyBoZXJlLiBGb3Igbm93LCB1c2UgdGhlIGF1dG9tYXRpYyBtYXBwaW5nIGZlYXR1cmUuJylcbiAgICB9XG4gIH1cblxuICAvLyBLZXlib2FyZCBoYW5kbGVyIGZvciBzcGFjZWJhciB0byBtYXJrIHdvcmRzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlS2V5UHJlc3MgPSAoZTogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgaWYgKGUuY29kZSA9PT0gJ1NwYWNlJyAmJiBpc01hcHBpbmcpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIG1hcmtDdXJyZW50V29yZCgpXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzTWFwcGluZykge1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUtleVByZXNzKVxuICAgICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlQcmVzcylcbiAgICB9XG4gIH0sIFtpc01hcHBpbmcsIGN1cnJlbnRNYXBwaW5nSW5kZXgsIGN1cnJlbnRUaW1lXSlcblxuICAvLyBDYWxjdWxhdGUgdGltaW5nIGFjY3VyYWN5XG4gIGNvbnN0IGdldFRpbWluZ0FjY3VyYWN5ID0gKCkgPT4ge1xuICAgIGlmICghY3VycmVudFdvcmQpIHJldHVybiBudWxsXG4gICAgY29uc3QgZXhwZWN0ZWRUaW1lID0gY3VycmVudFdvcmQuc3RhcnRUaW1lXG4gICAgY29uc3QgYWN0dWFsVGltZSA9IGN1cnJlbnRUaW1lXG4gICAgY29uc3QgZGlmZmVyZW5jZSA9IGFjdHVhbFRpbWUgLSBleHBlY3RlZFRpbWVcbiAgICByZXR1cm4gZGlmZmVyZW5jZVxuICB9XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBhdWRpbyA9IGF1ZGlvUmVmLmN1cnJlbnRcbiAgICBpZiAoYXVkaW8pIHtcbiAgICAgIGNvbnN0IGhhbmRsZUVuZGVkID0gKCkgPT4gc2V0SXNQbGF5aW5nKGZhbHNlKVxuICAgICAgY29uc3QgaGFuZGxlUGF1c2UgPSAoKSA9PiBzZXRJc1BsYXlpbmcoZmFsc2UpXG4gICAgICBjb25zdCBoYW5kbGVQbGF5ID0gKCkgPT4gc2V0SXNQbGF5aW5nKHRydWUpXG4gICAgICBjb25zdCBoYW5kbGVUaW1lVXBkYXRlID0gKCkgPT4ge1xuICAgICAgICBzZXRDdXJyZW50VGltZShhdWRpby5jdXJyZW50VGltZSlcbiAgICAgICAgcGVyZm9ybVRpbWluZ0NhbGlicmF0aW9uKClcbiAgICAgICAgY2hlY2tQYXJhZ3JhcGhBZHZhbmNlbWVudCgpXG4gICAgICB9XG4gICAgICBjb25zdCBoYW5kbGVMb2FkZWRNZXRhZGF0YSA9ICgpID0+IHNldEF1ZGlvRHVyYXRpb24oYXVkaW8uZHVyYXRpb24pXG5cbiAgICAgIGF1ZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ2VuZGVkJywgaGFuZGxlRW5kZWQpXG4gICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdwYXVzZScsIGhhbmRsZVBhdXNlKVxuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcigncGxheScsIGhhbmRsZVBsYXkpXG4gICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCd0aW1ldXBkYXRlJywgaGFuZGxlVGltZVVwZGF0ZSlcbiAgICAgIGF1ZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWRlZG1ldGFkYXRhJywgaGFuZGxlTG9hZGVkTWV0YWRhdGEpXG5cbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2VuZGVkJywgaGFuZGxlRW5kZWQpXG4gICAgICAgIGF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BhdXNlJywgaGFuZGxlUGF1c2UpXG4gICAgICAgIGF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BsYXknLCBoYW5kbGVQbGF5KVxuICAgICAgICBhdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCd0aW1ldXBkYXRlJywgaGFuZGxlVGltZVVwZGF0ZSlcbiAgICAgICAgYXVkaW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcignbG9hZGVkbWV0YWRhdGEnLCBoYW5kbGVMb2FkZWRNZXRhZGF0YSlcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKVxuXG4gIGNvbnN0IHJlbmRlclRleHRXaXRoSGlnaGxpZ2h0ID0gKHRleHQ6IHN0cmluZywgdHlwZTogJ3F1ZXN0aW9uJyB8ICdhbnN3ZXInLCBxdWVzdGlvbkluZGV4OiBudW1iZXIpID0+IHtcbiAgICAvLyBBZGQgbGluZSBicmVha3MgYWZ0ZXIgZXZlcnkgcGVyaW9kLCBidXQgbm90IGZvciBudW1iZXJlZCBwb2ludHMgKGxpa2UgXCIxLlwiLCBcIjIuXCIsIGV0Yy4pXG4gICAgY29uc3QgdGV4dFdpdGhCcmVha3MgPSB0ZXh0LnJlcGxhY2UoLyg/PCFcXGQpXFwuIC9nLCAnLlxcbicpXG4gICAgY29uc3QgbGluZXMgPSB0ZXh0V2l0aEJyZWFrcy5zcGxpdCgnXFxuJylcbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgcGFyYWdyYXBoIGluZGV4IGZvciB0aGlzIHRleHQgYmxvY2tcbiAgICBjb25zdCBwYXJhZ3JhcGhJbmRleCA9IHF1ZXN0aW9uSW5kZXggKiAyICsgKHR5cGUgPT09ICdhbnN3ZXInID8gMSA6IDApXG4gICAgY29uc3QgaXNDdXJyZW50UGFyYWdyYXBoID0gcGFyYWdyYXBoSW5kZXggPT09IGN1cnJlbnRQYXJhZ3JhcGhJbmRleFxuICAgIFxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IFxuICAgICAgICBjbGFzc05hbWU9e2B0cmFuc2l0aW9uLW9wYWNpdHkgZHVyYXRpb24tMzAwICR7XG4gICAgICAgICAgaXNDdXJyZW50UGFyYWdyYXBoID8gJ29wYWNpdHktMTAwJyA6ICdvcGFjaXR5LTMwJ1xuICAgICAgICB9YH1cbiAgICAgID5cbiAgICAgICAge2xpbmVzLm1hcCgobGluZSwgbGluZUluZGV4KSA9PiAoXG4gICAgICAgICAgPGRpdiBrZXk9e2xpbmVJbmRleH0gY2xhc3NOYW1lPXtsaW5lSW5kZXggPiAwID8gJ210LTInIDogJyd9PlxuICAgICAgICAgICAge2xpbmUudHJpbSgpfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxuXG4gIC8vIENoZWNrIGZvciBwYXJhZ3JhcGggYWR2YW5jZW1lbnQgYmFzZWQgb24gYXVkaW8gdGltaW5nIChrYXJhb2tlLXN0eWxlKVxuICBjb25zdCBjaGVja1BhcmFncmFwaEFkdmFuY2VtZW50ID0gKCkgPT4ge1xuICAgIGlmIChwYXJhZ3JhcGhUaW1pbmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuXG5cbiAgICAvLyBTaW1wbGUgYXBwcm9hY2g6IGZpbmQgcGFyYWdyYXBoIGJhc2VkIG9uIGN1cnJlbnQgdGltZVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFyYWdyYXBoVGltaW5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcGFyYWdyYXBoID0gcGFyYWdyYXBoVGltaW5nc1tpXVxuICAgICAgXG4gICAgICAvLyBJZiB3ZSdyZSB3aXRoaW4gdGhpcyBwYXJhZ3JhcGgncyB0aW1lIHJhbmdlXG4gICAgICBpZiAoY3VycmVudFRpbWUgPj0gcGFyYWdyYXBoLnN0YXJ0VGltZSAmJiBjdXJyZW50VGltZSA8IHBhcmFncmFwaC5lbmRUaW1lKSB7XG4gICAgICAgIGlmIChpICE9PSBjdXJyZW50UGFyYWdyYXBoSW5kZXgpIHtcbiAgICAgICAgICBzZXRDdXJyZW50UGFyYWdyYXBoSW5kZXgoaSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gSWYgd2UncmUgcGFzdCB0aGlzIHBhcmFncmFwaCBidXQgYmVmb3JlIHRoZSBuZXh0IG9uZVxuICAgICAgaWYgKGkgPT09IHBhcmFncmFwaFRpbWluZ3MubGVuZ3RoIC0gMSAmJiBjdXJyZW50VGltZSA+PSBwYXJhZ3JhcGguZW5kVGltZSkge1xuICAgICAgICBpZiAoaSAhPT0gY3VycmVudFBhcmFncmFwaEluZGV4KSB7XG4gICAgICAgICAgc2V0Q3VycmVudFBhcmFncmFwaEluZGV4KGkpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gRmFsbGJhY2s6IGlmIGF1ZGlvIGlzIHBsYXlpbmcgYnV0IG5vIHBhcmFncmFwaCBtYXRjaGVzLCBhZHZhbmNlIGJhc2VkIG9uIHRpbWVcbiAgICBpZiAoY3VycmVudFRpbWUgPiAwKSB7XG4gICAgICBjb25zdCBleHBlY3RlZEluZGV4ID0gTWF0aC5taW4oXG4gICAgICAgIE1hdGguZmxvb3IoY3VycmVudFRpbWUgLyAxMCksIC8vIFJvdWdoIGVzdGltYXRlOiAxMCBzZWNvbmRzIHBlciBwYXJhZ3JhcGhcbiAgICAgICAgcGFyYWdyYXBoVGltaW5ncy5sZW5ndGggLSAxXG4gICAgICApXG4gICAgICBpZiAoZXhwZWN0ZWRJbmRleCAhPT0gY3VycmVudFBhcmFncmFwaEluZGV4KSB7XG4gICAgICAgIHNldEN1cnJlbnRQYXJhZ3JhcGhJbmRleChleHBlY3RlZEluZGV4KVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIHRleHQtd2hpdGUgcmVsYXRpdmVcIlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgYmFja2dyb3VuZEltYWdlOiBcInVybCgnL2ltYWdlcy9ncmFkaWVudC1iZy5wbmcnKVwiLFxuICAgICAgICBiYWNrZ3JvdW5kU2l6ZTogXCJjb3ZlclwiLFxuICAgICAgICBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyXCIsXG4gICAgICAgIGJhY2tncm91bmRSZXBlYXQ6IFwibm8tcmVwZWF0XCIsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHsvKiBMYW5kc2NhcGUgUm90YXRpb24gTWVzc2FnZSAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgaW5zZXQtMCBiZy1ibGFjayBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB6LVsxMDBdIGxhbmRzY2FwZTpmbGV4IHBvcnRyYWl0OmhpZGRlblwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyIHB4LThcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtNnhsIG1iLTRcIj7wn5OxPC9kaXY+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtbWVkaXVtIG1iLTJcIj5Sb3RhdGUgWW91ciBEZXZpY2U8L2gyPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS0zMDBcIj5QbGVhc2Ugcm90YXRlIHlvdXIgZGV2aWNlIHRvIHBvcnRyYWl0IG1vZGUgZm9yIHRoZSBiZXN0IGV4cGVyaWVuY2U8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBIZWFkZXIgd2l0aCBTbW9vdGggRmFkZSBNYXNrICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdGlja3kgdG9wLTAgdy1mdWxsIHotMjBcIj5cbiAgICAgICAgey8qIFNtb290aCBGYWRlIE1hc2sgKi99XG4gICAgICAgIDxkaXYgXG4gICAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGUgaW5zZXQtMCBwb2ludGVyLWV2ZW50cy1ub25lXCJcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgYmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMCwwLDAsMC45KSAwJSwgcmdiYSgwLDAsMCwwLjYpIDMwJSwgcmdiYSgwLDAsMCwwLjMpIDYwJSwgcmdiYSgwLDAsMCwwKSAxMDAlKScsXG4gICAgICAgICAgICBiYWNrZHJvcEZpbHRlcjogJ2JsdXIoOHB4KScsXG4gICAgICAgICAgICBXZWJraXRCYWNrZHJvcEZpbHRlcjogJ2JsdXIoOHB4KScsXG4gICAgICAgICAgICBtYXNrSW1hZ2U6ICdsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCBibGFjayAwJSwgYmxhY2sgNzAlLCB0cmFuc3BhcmVudCAxMDAlKScsXG4gICAgICAgICAgICBXZWJraXRNYXNrSW1hZ2U6ICdsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCBibGFjayAwJSwgYmxhY2sgNzAlLCB0cmFuc3BhcmVudCAxMDAlKSdcbiAgICAgICAgICB9fVxuICAgICAgICA+PC9kaXY+XG4gICAgICAgIFxuICAgICAgICB7LyogSGVhZGVyIENvbnRlbnQgKi99XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgZmxleCBpdGVtcy1jZW50ZXIgcHgtNCBiZy1ncmFkaWVudC10by1iIGZyb20tYmxhY2svNDAgdmlhLWJsYWNrLzIwIHRvLXRyYW5zcGFyZW50IHB0LTUgcGItOCBnYXAtNFwiPlxuICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJwLTIgcm91bmRlZC1bNDBweF0gaW5saW5lLWZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIGN1cnNvci1wb2ludGVyIHRyYW5zaXRpb24tdHJhbnNmb3JtIGhvdmVyOnNjYWxlLTEwNSBhY3RpdmU6c2NhbGUtOTVcIlxuICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVCYWNrfVxuICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogJ2xpbmVhci1ncmFkaWVudCgxNDNkZWcsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zNykgLTMuNTQlLCByZ2JhKDExNCwgMTE0LCAxMTQsIDAuNDIpIDk1LjE1JSknLFxuICAgICAgICAgICAgICBib3hTaGFkb3c6ICcwcHggMS4xMjdweCAzLjM4MXB4IDBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpIGluc2V0LCAwcHggMC41MDFweCAxMi4wMjJweCAtMC41MDFweCByZ2JhKDAsIDAsIDAsIDAuMTgpJyxcbiAgICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6ICdibHVyKDI5LjAxNzUyNDcxOTIzODI4cHgpJyxcbiAgICAgICAgICAgICAgV2Via2l0QmFja2Ryb3BGaWx0ZXI6ICdibHVyKDI5LjAxNzUyNDcxOTIzODI4cHgpJyxcbiAgICAgICAgICAgICAgYm9yZGVySW1hZ2U6ICdsaW5lYXItZ3JhZGllbnQoMTQzZGVnLCAjMzMzMzMzIDAlLCAjRURFREVEIDMyLjQzJSwgI0ZGRkZGRiA3MCUpIDEnXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIyNFwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgICAgICA8cGF0aCBkPVwiTTE5IDEySDVNMTIgMTlsLTctNyA3LTdcIiBzdHJva2U9XCJ3aGl0ZVwiIHN0cm9rZVdpZHRoPVwiMlwiIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1tZWRpdW0gdGV4dC13aGl0ZSBmbGV4LTFcIj5cbiAgICAgICAgICAgIFJlYWQgbWVcbiAgICAgICAgICA8L2gxPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7LyogQ29udGVudCAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHgtNCBwYi0zMiBzcGFjZS15LTEyXCI+XG4gICAgICAgIHsvKiBEZWJ1ZyBpbmZvIC0gcmVtb3ZlIHRoaXMgbGF0ZXIgKi99XG4gICAgICAgIHtpc1BsYXlpbmcgJiYgKFxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgdG9wLTIwIHJpZ2h0LTQgYmctYmxhY2svODAgcC0zIHJvdW5kZWQgdGV4dC14cyB0ZXh0LXdoaXRlIHotMzAgZm9udC1tb25vXCI+XG4gICAgICAgICAgICA8ZGl2PlRpbWU6IHtjdXJyZW50VGltZS50b0ZpeGVkKDEpfXM8L2Rpdj5cbiAgICAgICAgICAgIDxkaXY+Q3VycmVudCBQYXJhOiB7Y3VycmVudFBhcmFncmFwaEluZGV4fTwvZGl2PlxuICAgICAgICAgICAgPGRpdj5Ub3RhbCBQYXJhczoge3BhcmFncmFwaFRpbWluZ3MubGVuZ3RofTwvZGl2PlxuICAgICAgICAgICAge3BhcmFncmFwaFRpbWluZ3NbY3VycmVudFBhcmFncmFwaEluZGV4XSAmJiAoXG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgUGFyYSB7Y3VycmVudFBhcmFncmFwaEluZGV4fToge3BhcmFncmFwaFRpbWluZ3NbY3VycmVudFBhcmFncmFwaEluZGV4XS5zdGFydFRpbWUudG9GaXhlZCgxKX1zIC0ge3BhcmFncmFwaFRpbWluZ3NbY3VycmVudFBhcmFncmFwaEluZGV4XS5lbmRUaW1lLnRvRml4ZWQoMSl9c1xuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8ZGl2PlR5cGU6IHtwYXJhZ3JhcGhUaW1pbmdzW2N1cnJlbnRQYXJhZ3JhcGhJbmRleF0/LnR5cGV9PC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9XG5cbiAgICAgICAge3F1ZXN0aW9uc0RhdGEubWFwKChpdGVtLCBpbmRleCkgPT4gKFxuICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICBrZXk9e2BxYS0ke2luZGV4fWB9IFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic3BhY2UteS02XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTQwMCB0ZXh0LWJhc2UgbGVhZGluZy1yZWxheGVkXCI+XG4gICAgICAgICAgICAgIHtyZW5kZXJUZXh0V2l0aEhpZ2hsaWdodChpdGVtLnF1ZXN0aW9uLCAncXVlc3Rpb24nLCBpbmRleCl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXdoaXRlIHRleHQtMnhsIGxlYWRpbmctcmVsYXhlZCBmb250LW5vcm1hbFwiPlxuICAgICAgICAgICAgICB7cmVuZGVyVGV4dFdpdGhIaWdobGlnaHQoaXRlbS5hbnN3ZXIsICdhbnN3ZXInLCBpbmRleCl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cblxuICAgICAgey8qIEhpZGRlbiBBdWRpbyBFbGVtZW50ICovfVxuICAgICAgPGF1ZGlvXG4gICAgICAgIHJlZj17YXVkaW9SZWZ9XG4gICAgICAgIHByZWxvYWQ9XCJtZXRhZGF0YVwiXG4gICAgICAgIGNsYXNzTmFtZT1cImhpZGRlblwiXG4gICAgICA+XG4gICAgICAgIDxzb3VyY2Ugc3JjPVwiL2F1ZGlvL1JlYWQtb3V0Lm1wM1wiIHR5cGU9XCJhdWRpby9tcGVnXCIgLz5cbiAgICAgICAgWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgdGhlIGF1ZGlvIGVsZW1lbnQuXG4gICAgICA8L2F1ZGlvPlxuXG4gICAgICB7LyogQm90dG9tIE5hdmlnYXRpb24gd2l0aCBTdW1tYXJpc2UgYW5kIFBhdXNlL1BsYXkgKi99XG4gICAgICA8Qm90dG9tTmF2aWdhdGlvblxuICAgICAgICBsZWZ0QnV0dG9uPXt7XG4gICAgICAgICAgbGFiZWw6IFwiU3VtbWFyaXNlXCIsXG4gICAgICAgICAgb25DbGljazogaGFuZGxlU3VtbWFyaXNlLFxuICAgICAgICAgIGljb246IChcbiAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIyNVwiIGhlaWdodD1cIjI0XCIgdmlld0JveD1cIjAgMCAyNSAyNFwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgICAgICA8cGF0aCBmaWxsUnVsZT1cImV2ZW5vZGRcIiBjbGlwUnVsZT1cImV2ZW5vZGRcIiBkPVwiTTQuNSA1QzQuNSAzLjM0MzE1IDUuODQzMTUgMiA3LjUgMkgxNy41QzE5LjE1NjkgMiAyMC41IDMuMzQzMTUgMjAuNSA1VjE5QzIwLjUgMjAuNjU2OSAxOS4xNTY5IDIyIDE3LjUgMjJINy41QzUuMzQzMTUgMjIgNC41IDIwLjY1NjkgNC41IDE5VjVaTTkuNSA2QzguOTQ3NzIgNiA4LjUgNi40NDc3MiA4LjUgN0M4LjUgNy41NTIyOCA4Ljk0NzcyIDggOS41IDhIMTUuNUMxNi4wNTIzIDggMTYuNSA3LjU1MjI4IDE2LjUgN0MxNi41IDYuNDQ3NzIgMTYuMDUyMyA2IDE1LjUgNkg5LjVaTTkuNSAxMEM4Ljk0NzcyIDEwIDguNSAxMC40NDc3IDguNSAxMUM4LjUgMTEuNTUyMyA4Ljk0NzcyIDEyIDkuNSAxMkgxNS41QzE2LjA1MjMgMTIgMTYuNSAxMS41NTIzIDE2LjUgMTFDMTYuNSAxMC40NDc3IDE2LjA1MjMgMTAgMTUuNSAxMEg5LjVaTTkuNSAxNEM4Ljk0NzcyIDE0IDguNSAxNC40NDc3IDguNSAxNUM4LjUgMTUuNTUyMyA4Ljk0NzcyIDE2IDkuNSAxNkgxMS41QzEyLjA1MjMgMTYgMTIuNSAxNS41NTIzIDEyLjUgMTVDMTIuNSAxNC40NDc3IDEyLjA1MjMgMTQgMTEuNSAxNEg5LjVaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgKSxcbiAgICAgICAgICB2YXJpYW50OiAnc2Vjb25kYXJ5J1xuICAgICAgICB9fVxuICAgICAgICByaWdodEJ1dHRvbj17e1xuICAgICAgICAgIGxhYmVsOiBpc1BsYXlpbmcgPyBcIlBhdXNlXCIgOiBcIlBsYXlcIixcbiAgICAgICAgICBvbkNsaWNrOiB0b2dnbGVQbGF5UGF1c2UsXG4gICAgICAgICAgaWNvbjogaXNQbGF5aW5nID8gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy02IGgtNiByZWxhdGl2ZSBvdmVyZmxvdy1oaWRkZW4gZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy0xIGgtNCBiZy13aGl0ZSByb3VuZGVkLXNtXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMSBoLTQgYmctd2hpdGUgcm91bmRlZC1zbSBtbC0xXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxzdmcgXG4gICAgICAgICAgICAgIHdpZHRoPVwiMjVcIiBcbiAgICAgICAgICAgICAgaGVpZ2h0PVwiMjRcIiBcbiAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAyNSAyNFwiIFxuICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiIFxuICAgICAgICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPHBhdGggZD1cIk0xMC4wNzY1IDIuNTMzNjVDOC4wNzc4MSAxLjI5OTE4IDUuNSAyLjczNjg4IDUuNSA1LjA4NjA1VjE4LjkxNEM1LjUgMjEuMjYzMiA4LjA3NzgxIDIyLjcwMDkgMTAuMDc2NSAyMS40NjY0TDIxLjI3MDUgMTQuNTUyNEMyMy4xNjg2IDEzLjM4MDEgMjMuMTY4NiAxMC42MTk5IDIxLjI3MDUgOS40NDc2M0wxMC4wNzY1IDIuNTMzNjVaXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgKSxcbiAgICAgICAgICB2YXJpYW50OiAncHJpbWFyeSdcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZVJvdXRlciIsIkJvdHRvbU5hdmlnYXRpb24iLCJxdWVzdGlvbnNEYXRhIiwiUmVhY3QiLCJSZWFkaW5nUGFnZSIsInBhcmFncmFwaFRpbWluZ3MiLCJpc1BsYXlpbmciLCJzZXRJc1BsYXlpbmciLCJjdXJyZW50VGltZSIsInNldEN1cnJlbnRUaW1lIiwid29yZHNQZXJTZWNvbmQiLCJzZXRXb3Jkc1BlclNlY29uZCIsInN0YXJ0RGVsYXkiLCJzZXRTdGFydERlbGF5IiwibWFudWFsT2Zmc2V0Iiwic2V0TWFudWFsT2Zmc2V0IiwiYXVkaW9EdXJhdGlvbiIsInNldEF1ZGlvRHVyYXRpb24iLCJpc01hcHBpbmciLCJzZXRJc01hcHBpbmciLCJ3b3JkTWFwcGluZ3MiLCJzZXRXb3JkTWFwcGluZ3MiLCJjdXJyZW50TWFwcGluZ0luZGV4Iiwic2V0Q3VycmVudE1hcHBpbmdJbmRleCIsImlzQXV0b01hcHBpbmciLCJzZXRJc0F1dG9NYXBwaW5nIiwiYXV0b01hcHBpbmdQcm9ncmVzcyIsInNldEF1dG9NYXBwaW5nUHJvZ3Jlc3MiLCJyZWNvZ25pdGlvblJlc3VsdHMiLCJzZXRSZWNvZ25pdGlvblJlc3VsdHMiLCJ0aW1pbmdBZGp1c3RtZW50cyIsInNldFRpbWluZ0FkanVzdG1lbnRzIiwiY3VycmVudFBhcmFncmFwaEluZGV4Iiwic2V0Q3VycmVudFBhcmFncmFwaEluZGV4Iiwic2V0UGFyYWdyYXBoVGltaW5ncyIsImF1ZGlvUmVmIiwicm91dGVyIiwiY3JlYXRlV29yZFRpbWluZ3MiLCJhbGxXb3JkcyIsImdsb2JhbFdvcmRJbmRleCIsInBhcmFncmFwaEluZGV4IiwiZm9yRWFjaCIsIml0ZW0iLCJxdWVzdGlvbkluZGV4IiwicXVlc3Rpb25Xb3JkcyIsInF1ZXN0aW9uIiwic3BsaXQiLCJ3b3JkIiwid29yZEluZGV4IiwibWFwcGluZyIsImZpbmQiLCJtIiwiY2FsY3VsYXRlZFN0YXJ0IiwibmV4dE1hcHBpbmciLCJwYXJhZ3JhcGhJZCIsImlzTGFzdFdvcmQiLCJsZW5ndGgiLCJwdXNoIiwidHJpbSIsInN0YXJ0VGltZSIsImVuZFRpbWUiLCJ0eXBlIiwiZ2xvYmFsSW5kZXgiLCJpc01hcHBlZCIsImlzTGFzdFdvcmRPZlBhcmFncmFwaCIsImFuc3dlcldvcmRzIiwiYW5zd2VyIiwid29yZFRpbWluZ3MiLCJjcmVhdGVQYXJhZ3JhcGhUaW1pbmdzIiwicGFyYWdyYXBocyIsImN1bXVsYXRpdmVUaW1lIiwicXVlc3Rpb25EdXJhdGlvbiIsImFuc3dlckR1cmF0aW9uIiwicGVyZm9ybVRpbWluZ0NhbGlicmF0aW9uIiwiY3VycmVudFdvcmQiLCJjdXJyZW50IiwicGFyYWdyYXBoU3RhcnRJbmRleCIsImZpbmRQYXJhZ3JhcGhTdGFydEluZGV4IiwicGFyYWdyYXBoU3RhcnRXb3JkIiwiZXhwZWN0ZWRUaW1lQXRQYXJhZ3JhcGhFbmQiLCJhY3R1YWxUaW1lQXRQYXJhZ3JhcGhFbmQiLCJ0aW1lRGlmZmVyZW5jZSIsIk1hdGgiLCJhYnMiLCJ3b3Jkc0luUGFyYWdyYXBoIiwiZXhwZWN0ZWRQYXJhZ3JhcGhEdXJhdGlvbiIsImFjdHVhbFBhcmFncmFwaER1cmF0aW9uIiwic3BlZWRNdWx0aXBsaWVyIiwibmV3V1BTIiwiYWRqdXN0ZWRXUFMiLCJtaW4iLCJtYXgiLCJhZGp1c3RtZW50IiwiZXhwZWN0ZWRUaW1lIiwiYWN0dWFsVGltZSIsInByZXYiLCJpIiwiY3VycmVudFdvcmRJbmRleCIsImZpbmRJbmRleCIsInRpbWluZyIsIm5leHRXb3JkIiwidG9nZ2xlUGxheVBhdXNlIiwicGF1c2UiLCJwbGF5IiwiaGFuZGxlQmFjayIsImJhY2siLCJoYW5kbGVTdW1tYXJpc2UiLCJqdW1wVG9UaW1lIiwidGltZSIsImp1bXBUb1dvcmQiLCJzdGFydE1hcHBpbmciLCJzdG9wTWFwcGluZyIsIm1hcmtDdXJyZW50V29yZCIsIm5ld01hcHBpbmciLCJjbGVhck1hcHBpbmdzIiwiZXhwb3J0TWFwcGluZ3MiLCJkYXRhIiwibWFwcGluZ3MiLCJ0b3RhbFdvcmRzIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiYmxvYiIsIkJsb2IiLCJKU09OIiwic3RyaW5naWZ5IiwidXJsIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhyZWYiLCJkb3dubG9hZCIsImNsaWNrIiwicmV2b2tlT2JqZWN0VVJMIiwiaW1wb3J0TWFwcGluZ3MiLCJldmVudCIsImZpbGUiLCJ0YXJnZXQiLCJmaWxlcyIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJlIiwicGFyc2UiLCJyZXN1bHQiLCJlcnJvciIsImFsZXJ0IiwicmVhZEFzVGV4dCIsInN0YXJ0QXV0b01hcHBpbmciLCJ3aW5kb3ciLCJTcGVlY2hSZWNvZ25pdGlvbiIsIndlYmtpdFNwZWVjaFJlY29nbml0aW9uIiwicmVjb2duaXRpb24iLCJjb250aW51b3VzIiwiaW50ZXJpbVJlc3VsdHMiLCJsYW5nIiwiYXVkaW9TdGFydFRpbWUiLCJub3ciLCJyZXN1bHRzIiwib25yZXN1bHQiLCJyZXN1bHRJbmRleCIsImlzRmluYWwiLCJ0cmFuc2NyaXB0Iiwid29yZHMiLCJpbmRleCIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsImNvbmZpZGVuY2UiLCJvbmVycm9yIiwiY29uc29sZSIsIm9uZW5kIiwicHJvY2Vzc1JlY29nbml0aW9uUmVzdWx0cyIsInN0YXJ0Iiwib25lbmRlZCIsInN0b3AiLCJjb250ZW50V29yZCIsImNsZWFuQ29udGVudFdvcmQiLCJtYXRjaGluZ1Jlc3VsdCIsImluY2x1ZGVzIiwibWF0Y2hlZFdvcmRzIiwiYWNjdXJhY3kiLCJtZXRob2QiLCJ0b0ZpeGVkIiwic3RvcEF1dG9NYXBwaW5nIiwidXBsb2FkTVAzRm9yUHJvY2Vzc2luZyIsImhhbmRsZUtleVByZXNzIiwiY29kZSIsInByZXZlbnREZWZhdWx0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRUaW1pbmdBY2N1cmFjeSIsImRpZmZlcmVuY2UiLCJhdWRpbyIsImhhbmRsZUVuZGVkIiwiaGFuZGxlUGF1c2UiLCJoYW5kbGVQbGF5IiwiaGFuZGxlVGltZVVwZGF0ZSIsImNoZWNrUGFyYWdyYXBoQWR2YW5jZW1lbnQiLCJoYW5kbGVMb2FkZWRNZXRhZGF0YSIsImR1cmF0aW9uIiwicmVuZGVyVGV4dFdpdGhIaWdobGlnaHQiLCJ0ZXh0IiwidGV4dFdpdGhCcmVha3MiLCJsaW5lcyIsImlzQ3VycmVudFBhcmFncmFwaCIsImRpdiIsImNsYXNzTmFtZSIsIm1hcCIsImxpbmUiLCJsaW5lSW5kZXgiLCJwYXJhZ3JhcGgiLCJleHBlY3RlZEluZGV4IiwiZmxvb3IiLCJzdHlsZSIsImJhY2tncm91bmRJbWFnZSIsImJhY2tncm91bmRTaXplIiwiYmFja2dyb3VuZFBvc2l0aW9uIiwiYmFja2dyb3VuZFJlcGVhdCIsImgyIiwicCIsImJhY2tncm91bmQiLCJiYWNrZHJvcEZpbHRlciIsIldlYmtpdEJhY2tkcm9wRmlsdGVyIiwibWFza0ltYWdlIiwiV2Via2l0TWFza0ltYWdlIiwib25DbGljayIsImJveFNoYWRvdyIsImJvcmRlckltYWdlIiwic3ZnIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsInhtbG5zIiwicGF0aCIsImQiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsInN0cm9rZUxpbmVjYXAiLCJzdHJva2VMaW5lam9pbiIsImgxIiwicmVmIiwicHJlbG9hZCIsInNvdXJjZSIsInNyYyIsImxlZnRCdXR0b24iLCJsYWJlbCIsImljb24iLCJmaWxsUnVsZSIsImNsaXBSdWxlIiwidmFyaWFudCIsInJpZ2h0QnV0dG9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/reading/page.tsx\n"));

/***/ })

});