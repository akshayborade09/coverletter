"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reading/page",{

/***/ "(app-pages-browser)/./app/reading/page.tsx":
/*!******************************!*\
  !*** ./app/reading/page.tsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ReadingPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/BottomNavigation */ \"(app-pages-browser)/./components/BottomNavigation.tsx\");\n/* harmony import */ var _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/QuestionsData */ \"(app-pages-browser)/./components/QuestionsData.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction ReadingPage() {\n    _s();\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [wordsPerSecond, setWordsPerSecond] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(2.5);\n    const [startDelay, setStartDelay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [manualOffset, setManualOffset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [audioDuration, setAudioDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isMapping, setIsMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [wordMappings, setWordMappings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentMappingIndex, setCurrentMappingIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoMapping, setIsAutoMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [autoMappingProgress, setAutoMappingProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [recognitionResults, setRecognitionResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [timingAdjustments, setTimingAdjustments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentParagraphIndex, setCurrentParagraphIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [paragraphStartTimes, setParagraphStartTimes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Create comprehensive word timing data using mapped timings when available\n    const createWordTimings = ()=>{\n        const allWords = [];\n        let globalWordIndex = 0;\n        let paragraphIndex = 0;\n        _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.forEach((item, questionIndex)=>{\n            // Process question words\n            const questionWords = item.question.split(' ');\n            questionWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"q-\".concat(questionIndex);\n                const isLastWord = wordIndex === questionWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'question',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n            // Process answer words\n            const answerWords = item.answer.split(' ');\n            answerWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"a-\".concat(questionIndex);\n                const isLastWord = wordIndex === answerWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'answer',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n        });\n        return allWords;\n    };\n    const wordTimings = createWordTimings();\n    // Create paragraph timing data for paragraph-by-paragraph highlighting\n    const createParagraphTimings = ()=>{\n        const paragraphs = [];\n        let paragraphIndex = 0;\n        _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.forEach((item, questionIndex)=>{\n            var _paragraphs_;\n            // Question paragraph\n            const questionWords = item.question.split(' ');\n            const questionStartTime = startDelay + manualOffset + (paragraphIndex === 0 ? 0 : ((_paragraphs_ = paragraphs[paragraphIndex - 1]) === null || _paragraphs_ === void 0 ? void 0 : _paragraphs_.endTime) || 0);\n            const questionDuration = questionWords.length / wordsPerSecond;\n            paragraphs.push({\n                paragraphIndex,\n                startTime: questionStartTime,\n                endTime: questionStartTime + questionDuration,\n                type: 'question',\n                questionIndex\n            });\n            paragraphIndex++;\n            // Answer paragraph\n            const answerWords = item.answer.split(' ');\n            const answerStartTime = paragraphs[paragraphIndex - 1].endTime;\n            const answerDuration = answerWords.length / wordsPerSecond;\n            paragraphs.push({\n                paragraphIndex,\n                startTime: answerStartTime,\n                endTime: answerStartTime + answerDuration,\n                type: 'answer',\n                questionIndex\n            });\n            paragraphIndex++;\n        });\n        return paragraphs;\n    };\n    const paragraphTimings = createParagraphTimings();\n    // Update paragraph timing data when speed changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"ReadingPage.useEffect\": ()=>{\n            setParagraphStartTimes(createParagraphTimings());\n        }\n    }[\"ReadingPage.useEffect\"], [\n        wordsPerSecond,\n        startDelay,\n        manualOffset\n    ]);\n    // Automatic timing calibration system - runs continuously to sync voice with highlights\n    const performTimingCalibration = ()=>{\n        if (!currentWord || !audioRef.current) return;\n        // Check for calibration at the end of each paragraph (last word of question or answer)\n        if (currentWord.isLastWordOfParagraph && currentTime >= currentWord.endTime) {\n            const paragraphStartIndex = findParagraphStartIndex(currentWord);\n            const paragraphStartWord = wordTimings[paragraphStartIndex];\n            if (paragraphStartWord) {\n                // Simple calculation: compare actual time vs expected time for this paragraph end\n                const expectedTimeAtParagraphEnd = currentWord.endTime;\n                const actualTimeAtParagraphEnd = currentTime;\n                const timeDifference = actualTimeAtParagraphEnd - expectedTimeAtParagraphEnd;\n                // If there's significant drift (more than 1.5 seconds), adjust the speed\n                if (Math.abs(timeDifference) > 1.5) {\n                    const wordsInParagraph = currentWord.globalIndex - paragraphStartIndex + 1;\n                    // Calculate what the speed should be based on actual timing\n                    const expectedParagraphDuration = currentWord.endTime - paragraphStartWord.startTime;\n                    const actualParagraphDuration = currentTime - paragraphStartWord.startTime;\n                    const speedMultiplier = expectedParagraphDuration / actualParagraphDuration;\n                    const newWPS = wordsPerSecond * speedMultiplier;\n                    // Limit adjustments to reasonable range\n                    const adjustedWPS = Math.min(Math.max(newWPS, 0.8), 6.0);\n                    // Only adjust if the change is significant enough\n                    if (Math.abs(adjustedWPS - wordsPerSecond) > 0.2) {\n                        setWordsPerSecond(adjustedWPS);\n                        const adjustment = {\n                            wordIndex: currentWord.globalIndex,\n                            expectedTime: expectedTimeAtParagraphEnd,\n                            actualTime: actualTimeAtParagraphEnd,\n                            adjustment: adjustedWPS - wordsPerSecond\n                        };\n                        setTimingAdjustments((prev)=>[\n                                ...prev,\n                                adjustment\n                            ]);\n                    }\n                }\n            }\n        }\n    };\n    // Check for paragraph advancement based on audio timing\n    const checkParagraphAdvancement = ()=>{\n        const currentParagraph = paragraphTimings[currentParagraphIndex];\n        if (!currentParagraph) return;\n        // Check if we should advance to the next paragraph\n        if (currentTime >= currentParagraph.endTime) {\n            // Move to next paragraph if available\n            if (currentParagraphIndex < paragraphTimings.length - 1) {\n                setCurrentParagraphIndex((prev)=>prev + 1);\n            }\n        }\n        // Also check if we've moved backwards in time (user seeking) and need to update paragraph\n        if (currentTime < currentParagraph.startTime && currentParagraphIndex > 0) {\n            // Find the correct paragraph for current time\n            for(let i = paragraphTimings.length - 1; i >= 0; i--){\n                if (currentTime >= paragraphTimings[i].startTime) {\n                    setCurrentParagraphIndex(i);\n                    break;\n                }\n            }\n        }\n    };\n    // Helper function to find the start of current paragraph\n    const findParagraphStartIndex = (currentWord)=>{\n        // Find the first word of the current paragraph (question or answer)\n        for(let i = currentWord.globalIndex; i >= 0; i--){\n            const word = wordTimings[i];\n            if (word && word.type === currentWord.type && word.questionIndex === currentWord.questionIndex && word.wordIndex === 0) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    // Find current word and related info\n    const currentWordIndex = wordTimings.findIndex((timing)=>currentTime >= timing.startTime && currentTime < timing.endTime);\n    const currentWord = currentWordIndex >= 0 ? wordTimings[currentWordIndex] : null;\n    const nextWord = currentWordIndex >= 0 && currentWordIndex < wordTimings.length - 1 ? wordTimings[currentWordIndex + 1] : null;\n    const togglePlayPause = ()=>{\n        if (audioRef.current) {\n            if (isPlaying) {\n                audioRef.current.pause();\n            } else {\n                audioRef.current.play();\n            }\n            setIsPlaying(!isPlaying);\n        }\n    };\n    const handleBack = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.back();\n    };\n    const handleSummarise = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.push(\"/summary\");\n    };\n    // Advanced timing controls\n    const jumpToTime = (time)=>{\n        if (audioRef.current) {\n            audioRef.current.currentTime = Math.max(0, Math.min(time, audioDuration || time));\n        }\n    };\n    const jumpToWord = (wordIndex)=>{\n        const word = wordTimings[wordIndex];\n        if (word && audioRef.current) {\n            audioRef.current.currentTime = word.startTime;\n        }\n    };\n    // Word mapping functions\n    const startMapping = ()=>{\n        setIsMapping(true);\n        setCurrentMappingIndex(0);\n        setWordMappings([]);\n        if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n        }\n    };\n    const stopMapping = ()=>{\n        setIsMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    const markCurrentWord = ()=>{\n        if (isMapping && currentMappingIndex < wordTimings.length) {\n            const newMapping = {\n                wordIndex: currentMappingIndex,\n                startTime: currentTime\n            };\n            setWordMappings((prev)=>[\n                    ...prev,\n                    newMapping\n                ]);\n            setCurrentMappingIndex((prev)=>prev + 1);\n        }\n    };\n    const clearMappings = ()=>{\n        setWordMappings([]);\n        setCurrentMappingIndex(0);\n    };\n    const exportMappings = ()=>{\n        const data = {\n            mappings: wordMappings,\n            totalWords: wordTimings.length,\n            createdAt: new Date().toISOString()\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n    };\n    const importMappings = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                try {\n                    var _e_target;\n                    const data = JSON.parse((_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result);\n                    setWordMappings(data.mappings || []);\n                } catch (error) {\n                    alert('Invalid mapping file');\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n    // Automatic MP3 to JSON word mapping\n    const startAutoMapping = async ()=>{\n        if (!audioRef.current) return;\n        setIsAutoMapping(true);\n        setAutoMappingProgress(0);\n        setRecognitionResults([]);\n        try {\n            // Check if Web Speech API is available\n            if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n                alert('Speech recognition not supported in this browser. Please use Chrome or Edge.');\n                setIsAutoMapping(false);\n                return;\n            }\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n            const recognition = new SpeechRecognition();\n            recognition.continuous = true;\n            recognition.interimResults = true;\n            recognition.lang = 'en-US';\n            const audioStartTime = Date.now();\n            const results = [];\n            recognition.onresult = (event)=>{\n                for(let i = event.resultIndex; i < event.results.length; i++){\n                    if (event.results[i].isFinal) {\n                        const transcript = event.results[i][0].transcript.trim();\n                        const words = transcript.split(' ');\n                        const currentTime = (Date.now() - audioStartTime) / 1000;\n                        words.forEach((word, index)=>{\n                            if (word.trim()) {\n                                results.push({\n                                    word: word.trim().toLowerCase().replace(/[^\\w]/g, ''),\n                                    startTime: currentTime - (words.length - index) * 0.3,\n                                    confidence: event.results[i][0].confidence || 0.8\n                                });\n                            }\n                        });\n                        setRecognitionResults([\n                            ...results\n                        ]);\n                        setAutoMappingProgress(results.length / wordTimings.length * 100);\n                    }\n                }\n            };\n            recognition.onerror = (event)=>{\n                console.error('Recognition error:', event.error);\n                setIsAutoMapping(false);\n            };\n            recognition.onend = ()=>{\n                setIsAutoMapping(false);\n                processRecognitionResults(results);\n            };\n            // Start audio and recognition\n            audioRef.current.currentTime = 0;\n            await audioRef.current.play();\n            recognition.start();\n            // Stop recognition when audio ends\n            audioRef.current.onended = ()=>{\n                recognition.stop();\n            };\n        } catch (error) {\n            console.error('Auto mapping error:', error);\n            alert('Error starting automatic mapping. Please try manual mapping instead.');\n            setIsAutoMapping(false);\n        }\n    };\n    const processRecognitionResults = (results)=>{\n        const mappings = [];\n        // Match recognized words with content words\n        wordTimings.forEach((contentWord, index)=>{\n            const cleanContentWord = contentWord.word.toLowerCase().replace(/[^\\w]/g, '');\n            // Find best matching recognized word\n            const matchingResult = results.find((result)=>result.word === cleanContentWord || result.word.includes(cleanContentWord) || cleanContentWord.includes(result.word));\n            if (matchingResult && matchingResult.confidence > 0.5) {\n                mappings.push({\n                    wordIndex: index,\n                    startTime: matchingResult.startTime\n                });\n            }\n        });\n        setWordMappings(mappings);\n        // Export results automatically\n        const data = {\n            mappings,\n            recognitionResults: results,\n            totalWords: wordTimings.length,\n            matchedWords: mappings.length,\n            accuracy: mappings.length / wordTimings.length * 100,\n            createdAt: new Date().toISOString(),\n            method: 'automatic_speech_recognition'\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'auto-word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n        alert(\"Auto-mapping complete! Matched \".concat(mappings.length, \"/\").concat(wordTimings.length, \" words (\").concat((mappings.length / wordTimings.length * 100).toFixed(1), \"%). JSON file downloaded.\"));\n    };\n    const stopAutoMapping = ()=>{\n        setIsAutoMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    // Alternative: Upload MP3 for server-side processing\n    const uploadMP3ForProcessing = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file && file.type === 'audio/mpeg') {\n            // This would typically send to a server with speech-to-text API\n            alert('MP3 upload for server-side processing would go here. For now, use the automatic mapping feature.');\n        }\n    };\n    // Keyboard handler for spacebar to mark words\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const handleKeyPress = {\n                \"ReadingPage.useEffect.handleKeyPress\": (e)=>{\n                    if (e.code === 'Space' && isMapping) {\n                        e.preventDefault();\n                        markCurrentWord();\n                    }\n                }\n            }[\"ReadingPage.useEffect.handleKeyPress\"];\n            if (isMapping) {\n                document.addEventListener('keydown', handleKeyPress);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>document.removeEventListener('keydown', handleKeyPress)\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], [\n        isMapping,\n        currentMappingIndex,\n        currentTime\n    ]);\n    // Calculate timing accuracy\n    const getTimingAccuracy = ()=>{\n        if (!currentWord) return null;\n        const expectedTime = currentWord.startTime;\n        const actualTime = currentTime;\n        const difference = actualTime - expectedTime;\n        return difference;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const audio = audioRef.current;\n            if (audio) {\n                const handleEnded = {\n                    \"ReadingPage.useEffect.handleEnded\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handleEnded\"];\n                const handlePause = {\n                    \"ReadingPage.useEffect.handlePause\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handlePause\"];\n                const handlePlay = {\n                    \"ReadingPage.useEffect.handlePlay\": ()=>setIsPlaying(true)\n                }[\"ReadingPage.useEffect.handlePlay\"];\n                const handleTimeUpdate = {\n                    \"ReadingPage.useEffect.handleTimeUpdate\": ()=>{\n                        setCurrentTime(audio.currentTime);\n                        performTimingCalibration();\n                        checkParagraphAdvancement();\n                    }\n                }[\"ReadingPage.useEffect.handleTimeUpdate\"];\n                const handleLoadedMetadata = {\n                    \"ReadingPage.useEffect.handleLoadedMetadata\": ()=>setAudioDuration(audio.duration)\n                }[\"ReadingPage.useEffect.handleLoadedMetadata\"];\n                audio.addEventListener('ended', handleEnded);\n                audio.addEventListener('pause', handlePause);\n                audio.addEventListener('play', handlePlay);\n                audio.addEventListener('timeupdate', handleTimeUpdate);\n                audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>{\n                        audio.removeEventListener('ended', handleEnded);\n                        audio.removeEventListener('pause', handlePause);\n                        audio.removeEventListener('play', handlePlay);\n                        audio.removeEventListener('timeupdate', handleTimeUpdate);\n                        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n                    }\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], []);\n    const renderTextWithHighlight = (text, type, questionIndex)=>{\n        const words = text.split(' ');\n        // Calculate paragraph index for this text block\n        const paragraphIndex = questionIndex * 2 + (type === 'answer' ? 1 : 0);\n        const isCurrentParagraph = paragraphIndex === currentParagraphIndex;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"transition-all duration-500\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                children: words.map((word, wordIndex)=>{\n                    // Find the timing for this specific word\n                    const wordTiming = wordTimings.find((timing)=>timing.type === type && timing.questionIndex === questionIndex && timing.wordIndex === wordIndex);\n                    if (!wordTiming) return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: [\n                            word,\n                            \" \"\n                        ]\n                    }, wordIndex, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 550,\n                        columnNumber: 37\n                    }, this);\n                    const isCurrentlyHighlighted = wordTiming.startTime >= 0 && currentTime >= wordTiming.startTime && currentTime < wordTiming.endTime;\n                    const hasBeenSpoken = wordTiming.startTime >= 0 && currentTime >= wordTiming.endTime;\n                    const isNext = nextWord && wordTiming.globalIndex === nextWord.globalIndex;\n                    const isCurrentMappingTarget = isMapping && currentMappingIndex === wordTiming.globalIndex;\n                    const isLastWordInParagraph = wordTiming.isLastWordOfParagraph;\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"transition-all duration-200 cursor-pointer hover:opacity-80 \".concat(isCurrentMappingTarget ? 'opacity-100 bg-yellow-500/30 border border-yellow-400 rounded px-1' : isCurrentlyHighlighted || hasBeenSpoken ? 'opacity-100' : isNext ? 'opacity-60' : wordTiming.startTime >= 0 ? 'opacity-30' : 'opacity-20', \" \").concat(wordTiming.isMapped ? 'border-b border-green-400' : ''),\n                        onClick: ()=>!isMapping && wordTiming.startTime >= 0 && jumpToWord(wordTiming.globalIndex),\n                        title: isCurrentMappingTarget ? 'Press SPACE to mark this word' : wordTiming.isMapped ? \"Mapped to \".concat(wordTiming.startTime.toFixed(1), \"s\") : wordTiming.startTime >= 0 ? \"Jump to \".concat(wordTiming.startTime.toFixed(1), \"s\") : 'Word timing not available',\n                        children: [\n                            word,\n                            wordIndex < words.length - 1 ? ' ' : ''\n                        ]\n                    }, wordIndex, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 559,\n                        columnNumber: 15\n                    }, this);\n                })\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 541,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n            lineNumber: 540,\n            columnNumber: 7\n        }, this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen text-white relative\",\n        style: {\n            backgroundImage: \"url('/images/gradient-bg.png')\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black flex items-center justify-center z-[100] landscape:flex portrait:hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center px-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-6xl mb-4\",\n                            children: \"\\uD83D\\uDCF1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 608,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-2xl font-medium mb-2\",\n                            children: \"Rotate Your Device\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 609,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-300\",\n                            children: \"Please rotate your device to portrait mode for the best experience\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 610,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                    lineNumber: 607,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 606,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"sticky top-0 w-full z-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute inset-0 pointer-events-none\",\n                        style: {\n                            background: 'linear-gradient(180deg, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.6) 30%, rgba(0,0,0,0.3) 60%, rgba(0,0,0,0) 100%)',\n                            backdropFilter: 'blur(8px)',\n                            WebkitBackdropFilter: 'blur(8px)',\n                            maskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)',\n                            WebkitMaskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 617,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative flex items-center px-4 bg-gradient-to-b from-black/40 via-black/20 to-transparent pt-5 pb-8 gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"p-2 rounded-[40px] inline-flex justify-center items-center cursor-pointer transition-transform hover:scale-105 active:scale-95\",\n                                onClick: handleBack,\n                                style: {\n                                    background: 'linear-gradient(143deg, rgba(255, 255, 255, 0.37) -3.54%, rgba(114, 114, 114, 0.42) 95.15%)',\n                                    boxShadow: '0px 1.127px 3.381px 0px rgba(255, 255, 255, 0.25) inset, 0px 0.501px 12.022px -0.501px rgba(0, 0, 0, 0.18)',\n                                    backdropFilter: 'blur(29.01752471923828px)',\n                                    WebkitBackdropFilter: 'blur(29.01752471923828px)',\n                                    borderImage: 'linear-gradient(143deg, #333333 0%, #EDEDED 32.43%, #FFFFFF 70%) 1'\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"24\",\n                                    height: \"24\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M19 12H5M12 19l-7-7 7-7\",\n                                        stroke: \"white\",\n                                        strokeWidth: \"2\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                        lineNumber: 642,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                    lineNumber: 641,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 630,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-2xl font-medium text-white flex-1\",\n                                children: \"Read me\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 645,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 629,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 615,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"px-4 pb-32 space-y-12\",\n                children: _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-gray-400 text-base leading-relaxed\",\n                                children: renderTextWithHighlight(item.question, 'question', index)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 658,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-white text-2xl leading-relaxed font-normal\",\n                                children: renderTextWithHighlight(item.answer, 'answer', index)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 661,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, \"qa-\".concat(index), true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 654,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 652,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                preload: \"metadata\",\n                className: \"hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                        src: \"/audio/Read-out.mp3\",\n                        type: \"audio/mpeg\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 674,\n                        columnNumber: 9\n                    }, this),\n                    \"Your browser does not support the audio element.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 669,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                leftButton: {\n                    label: \"Summarise\",\n                    onClick: handleSummarise,\n                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M4.5 5C4.5 3.34315 5.84315 2 7.5 2H17.5C19.1569 2 20.5 3.34315 20.5 5V19C20.5 20.6569 19.1569 22 17.5 22H7.5C5.34315 22 4.5 20.6569 4.5 19V5ZM9.5 6C8.94772 6 8.5 6.44772 8.5 7C8.5 7.55228 8.94772 8 9.5 8H15.5C16.0523 8 16.5 7.55228 16.5 7C16.5 6.44772 16.0523 6 15.5 6H9.5ZM9.5 10C8.94772 10 8.5 10.4477 8.5 11C8.5 11.5523 8.94772 12 9.5 12H15.5C16.0523 12 16.5 11.5523 16.5 11C16.5 10.4477 16.0523 10 15.5 10H9.5ZM9.5 14C8.94772 14 8.5 14.4477 8.5 15C8.5 15.5523 8.94772 16 9.5 16H11.5C12.0523 16 12.5 15.5523 12.5 15C12.5 14.4477 12.0523 14 11.5 14H9.5Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 685,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 684,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'secondary'\n                },\n                rightButton: {\n                    label: isPlaying ? \"Pause\" : \"Play\",\n                    onClick: togglePlayPause,\n                    icon: isPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-6 h-6 relative overflow-hidden flex items-center justify-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 695,\n                                columnNumber: 15\n                            }, void 0),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm ml-1\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 696,\n                                columnNumber: 15\n                            }, void 0)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 694,\n                        columnNumber: 13\n                    }, void 0) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M10.0765 2.53365C8.07781 1.29918 5.5 2.73688 5.5 5.08605V18.914C5.5 21.2632 8.07781 22.7009 10.0765 21.4664L21.2705 14.5524C23.1686 13.3801 23.1686 10.6199 21.2705 9.44763L10.0765 2.53365Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 706,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 699,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'primary'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 679,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n        lineNumber: 596,\n        columnNumber: 5\n    }, this);\n}\n_s(ReadingPage, \"CkQg3x7Mza5Iv6POu9gaKwxhyKQ=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = ReadingPage;\nvar _c;\n$RefreshReg$(_c, \"ReadingPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/reading/page.tsx\n"));

/***/ })

});