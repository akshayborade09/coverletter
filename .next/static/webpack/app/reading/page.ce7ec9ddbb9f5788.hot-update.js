"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reading/page",{

/***/ "(app-pages-browser)/./app/reading/page.tsx":
/*!******************************!*\
  !*** ./app/reading/page.tsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ReadingPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.2.4_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/BottomNavigation */ \"(app-pages-browser)/./components/BottomNavigation.tsx\");\n/* harmony import */ var _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/QuestionsData */ \"(app-pages-browser)/./components/QuestionsData.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction ReadingPage() {\n    _s();\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [wordsPerSecond, setWordsPerSecond] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(2.5);\n    const [startDelay, setStartDelay] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [manualOffset, setManualOffset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [audioDuration, setAudioDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isMapping, setIsMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [wordMappings, setWordMappings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentMappingIndex, setCurrentMappingIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isAutoMapping, setIsAutoMapping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [autoMappingProgress, setAutoMappingProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [recognitionResults, setRecognitionResults] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [timingAdjustments, setTimingAdjustments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentParagraphIndex, setCurrentParagraphIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [paragraphTimings, setParagraphTimings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Create comprehensive word timing data using mapped timings when available\n    const createWordTimings = ()=>{\n        const allWords = [];\n        let globalWordIndex = 0;\n        let paragraphIndex = 0;\n        _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.forEach((item, questionIndex)=>{\n            // Process question words\n            const questionWords = item.question.split(' ');\n            questionWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"q-\".concat(questionIndex);\n                const isLastWord = wordIndex === questionWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'question',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n            // Process answer words\n            const answerWords = item.answer.split(' ');\n            answerWords.forEach((word, wordIndex)=>{\n                const mapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex);\n                const calculatedStart = startDelay + manualOffset + globalWordIndex / wordsPerSecond;\n                const nextMapping = wordMappings.find((m)=>m.wordIndex === globalWordIndex + 1);\n                const paragraphId = \"a-\".concat(questionIndex);\n                const isLastWord = wordIndex === answerWords.length - 1;\n                allWords.push({\n                    word: word.trim(),\n                    startTime: calculatedStart,\n                    endTime: calculatedStart + 1 / wordsPerSecond,\n                    type: 'answer',\n                    questionIndex,\n                    wordIndex,\n                    globalIndex: globalWordIndex,\n                    isMapped: !!mapping,\n                    paragraphId,\n                    isLastWordOfParagraph: isLastWord\n                });\n                globalWordIndex++;\n            });\n            paragraphIndex++;\n        });\n        return allWords;\n    };\n    const wordTimings = createWordTimings();\n    // Update paragraph timing data when speed changes\n    react__WEBPACK_IMPORTED_MODULE_1___default().useEffect({\n        \"ReadingPage.useEffect\": ()=>{\n        // No need to update paragraphStartTimes as it's no longer used\n        }\n    }[\"ReadingPage.useEffect\"], [\n        wordsPerSecond,\n        startDelay,\n        manualOffset\n    ]);\n    // Automatic timing calibration system - runs continuously to sync voice with highlights\n    const performTimingCalibration = ()=>{\n        if (!currentWord || !audioRef.current) return;\n        // Check for calibration at the end of each paragraph (last word of question or answer)\n        if (currentWord.isLastWordOfParagraph && currentTime >= currentWord.endTime) {\n            const paragraphStartIndex = findParagraphStartIndex(currentWord);\n            const paragraphStartWord = wordTimings[paragraphStartIndex];\n            if (paragraphStartWord) {\n                // Simple calculation: compare actual time vs expected time for this paragraph end\n                const expectedTimeAtParagraphEnd = currentWord.endTime;\n                const actualTimeAtParagraphEnd = currentTime;\n                const timeDifference = actualTimeAtParagraphEnd - expectedTimeAtParagraphEnd;\n                // If there's significant drift (more than 1.5 seconds), adjust the speed\n                if (Math.abs(timeDifference) > 1.5) {\n                    const wordsInParagraph = currentWord.globalIndex - paragraphStartIndex + 1;\n                    // Calculate what the speed should be based on actual timing\n                    const expectedParagraphDuration = currentWord.endTime - paragraphStartWord.startTime;\n                    const actualParagraphDuration = currentTime - paragraphStartWord.startTime;\n                    const speedMultiplier = expectedParagraphDuration / actualParagraphDuration;\n                    const newWPS = wordsPerSecond * speedMultiplier;\n                    // Limit adjustments to reasonable range\n                    const adjustedWPS = Math.min(Math.max(newWPS, 0.8), 6.0);\n                    // Only adjust if the change is significant enough\n                    if (Math.abs(adjustedWPS - wordsPerSecond) > 0.2) {\n                        setWordsPerSecond(adjustedWPS);\n                        const adjustment = {\n                            wordIndex: currentWord.globalIndex,\n                            expectedTime: expectedTimeAtParagraphEnd,\n                            actualTime: actualTimeAtParagraphEnd,\n                            adjustment: adjustedWPS - wordsPerSecond\n                        };\n                        setTimingAdjustments((prev)=>[\n                                ...prev,\n                                adjustment\n                            ]);\n                    }\n                }\n            }\n        }\n    };\n    // Helper function to find the start of current paragraph\n    const findParagraphStartIndex = (currentWord)=>{\n        // Find the first word of the current paragraph (question or answer)\n        for(let i = currentWord.globalIndex; i >= 0; i--){\n            const word = wordTimings[i];\n            if (word && word.type === currentWord.type && word.questionIndex === currentWord.questionIndex && word.wordIndex === 0) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    // Find current word and related info\n    const currentWordIndex = wordTimings.findIndex((timing)=>currentTime >= timing.startTime && currentTime < timing.endTime);\n    const currentWord = currentWordIndex >= 0 ? wordTimings[currentWordIndex] : null;\n    const nextWord = currentWordIndex >= 0 && currentWordIndex < wordTimings.length - 1 ? wordTimings[currentWordIndex + 1] : null;\n    const togglePlayPause = ()=>{\n        if (audioRef.current) {\n            if (isPlaying) {\n                audioRef.current.pause();\n            } else {\n                audioRef.current.play();\n            }\n            setIsPlaying(!isPlaying);\n        }\n    };\n    const handleBack = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.back();\n    };\n    const handleSummarise = ()=>{\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n        router.push(\"/summary\");\n    };\n    // Advanced timing controls\n    const jumpToTime = (time)=>{\n        if (audioRef.current) {\n            audioRef.current.currentTime = Math.max(0, Math.min(time, audioDuration || time));\n        }\n    };\n    const jumpToWord = (wordIndex)=>{\n        const word = wordTimings[wordIndex];\n        if (word && audioRef.current) {\n            audioRef.current.currentTime = word.startTime;\n        }\n    };\n    // Word mapping functions\n    const startMapping = ()=>{\n        setIsMapping(true);\n        setCurrentMappingIndex(0);\n        setWordMappings([]);\n        if (audioRef.current) {\n            audioRef.current.currentTime = 0;\n            audioRef.current.play();\n        }\n    };\n    const stopMapping = ()=>{\n        setIsMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    const markCurrentWord = ()=>{\n        if (isMapping && currentMappingIndex < wordTimings.length) {\n            const newMapping = {\n                wordIndex: currentMappingIndex,\n                startTime: currentTime\n            };\n            setWordMappings((prev)=>[\n                    ...prev,\n                    newMapping\n                ]);\n            setCurrentMappingIndex((prev)=>prev + 1);\n        }\n    };\n    const clearMappings = ()=>{\n        setWordMappings([]);\n        setCurrentMappingIndex(0);\n    };\n    const exportMappings = ()=>{\n        const data = {\n            mappings: wordMappings,\n            totalWords: wordTimings.length,\n            createdAt: new Date().toISOString()\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n    };\n    const importMappings = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                try {\n                    var _e_target;\n                    const data = JSON.parse((_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result);\n                    setWordMappings(data.mappings || []);\n                } catch (error) {\n                    alert('Invalid mapping file');\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n    // Automatic MP3 to JSON word mapping\n    const startAutoMapping = async ()=>{\n        if (!audioRef.current) return;\n        setIsAutoMapping(true);\n        setAutoMappingProgress(0);\n        setRecognitionResults([]);\n        try {\n            // Check if Web Speech API is available\n            if (!('webkitSpeechRecognition' in window) && !('SpeechRecognition' in window)) {\n                alert('Speech recognition not supported in this browser. Please use Chrome or Edge.');\n                setIsAutoMapping(false);\n                return;\n            }\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n            const recognition = new SpeechRecognition();\n            recognition.continuous = true;\n            recognition.interimResults = true;\n            recognition.lang = 'en-US';\n            const audioStartTime = Date.now();\n            const results = [];\n            recognition.onresult = (event)=>{\n                for(let i = event.resultIndex; i < event.results.length; i++){\n                    if (event.results[i].isFinal) {\n                        const transcript = event.results[i][0].transcript.trim();\n                        const words = transcript.split(' ');\n                        const currentTime = (Date.now() - audioStartTime) / 1000;\n                        words.forEach((word, index)=>{\n                            if (word.trim()) {\n                                results.push({\n                                    word: word.trim().toLowerCase().replace(/[^\\w]/g, ''),\n                                    startTime: currentTime - (words.length - index) * 0.3,\n                                    confidence: event.results[i][0].confidence || 0.8\n                                });\n                            }\n                        });\n                        setRecognitionResults([\n                            ...results\n                        ]);\n                        setAutoMappingProgress(results.length / wordTimings.length * 100);\n                    }\n                }\n            };\n            recognition.onerror = (event)=>{\n                console.error('Recognition error:', event.error);\n                setIsAutoMapping(false);\n            };\n            recognition.onend = ()=>{\n                setIsAutoMapping(false);\n                processRecognitionResults(results);\n            };\n            // Start audio and recognition\n            audioRef.current.currentTime = 0;\n            await audioRef.current.play();\n            recognition.start();\n            // Stop recognition when audio ends\n            audioRef.current.onended = ()=>{\n                recognition.stop();\n            };\n        } catch (error) {\n            console.error('Auto mapping error:', error);\n            alert('Error starting automatic mapping. Please try manual mapping instead.');\n            setIsAutoMapping(false);\n        }\n    };\n    const processRecognitionResults = (results)=>{\n        const mappings = [];\n        // Match recognized words with content words\n        wordTimings.forEach((contentWord, index)=>{\n            const cleanContentWord = contentWord.word.toLowerCase().replace(/[^\\w]/g, '');\n            // Find best matching recognized word\n            const matchingResult = results.find((result)=>result.word === cleanContentWord || result.word.includes(cleanContentWord) || cleanContentWord.includes(result.word));\n            if (matchingResult && matchingResult.confidence > 0.5) {\n                mappings.push({\n                    wordIndex: index,\n                    startTime: matchingResult.startTime\n                });\n            }\n        });\n        setWordMappings(mappings);\n        // Export results automatically\n        const data = {\n            mappings,\n            recognitionResults: results,\n            totalWords: wordTimings.length,\n            matchedWords: mappings.length,\n            accuracy: mappings.length / wordTimings.length * 100,\n            createdAt: new Date().toISOString(),\n            method: 'automatic_speech_recognition'\n        };\n        const blob = new Blob([\n            JSON.stringify(data, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'auto-word-mappings.json';\n        a.click();\n        URL.revokeObjectURL(url);\n        alert(\"Auto-mapping complete! Matched \".concat(mappings.length, \"/\").concat(wordTimings.length, \" words (\").concat((mappings.length / wordTimings.length * 100).toFixed(1), \"%). JSON file downloaded.\"));\n    };\n    const stopAutoMapping = ()=>{\n        setIsAutoMapping(false);\n        if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    };\n    // Alternative: Upload MP3 for server-side processing\n    const uploadMP3ForProcessing = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (file && file.type === 'audio/mpeg') {\n            // This would typically send to a server with speech-to-text API\n            alert('MP3 upload for server-side processing would go here. For now, use the automatic mapping feature.');\n        }\n    };\n    // Keyboard handler for spacebar to mark words\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const handleKeyPress = {\n                \"ReadingPage.useEffect.handleKeyPress\": (e)=>{\n                    if (e.code === 'Space' && isMapping) {\n                        e.preventDefault();\n                        markCurrentWord();\n                    }\n                }\n            }[\"ReadingPage.useEffect.handleKeyPress\"];\n            if (isMapping) {\n                document.addEventListener('keydown', handleKeyPress);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>document.removeEventListener('keydown', handleKeyPress)\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], [\n        isMapping,\n        currentMappingIndex,\n        currentTime\n    ]);\n    // Calculate timing accuracy\n    const getTimingAccuracy = ()=>{\n        if (!currentWord) return null;\n        const expectedTime = currentWord.startTime;\n        const actualTime = currentTime;\n        const difference = actualTime - expectedTime;\n        return difference;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ReadingPage.useEffect\": ()=>{\n            const audio = audioRef.current;\n            if (audio) {\n                const handleEnded = {\n                    \"ReadingPage.useEffect.handleEnded\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handleEnded\"];\n                const handlePause = {\n                    \"ReadingPage.useEffect.handlePause\": ()=>setIsPlaying(false)\n                }[\"ReadingPage.useEffect.handlePause\"];\n                const handlePlay = {\n                    \"ReadingPage.useEffect.handlePlay\": ()=>setIsPlaying(true)\n                }[\"ReadingPage.useEffect.handlePlay\"];\n                const handleTimeUpdate = {\n                    \"ReadingPage.useEffect.handleTimeUpdate\": ()=>{\n                        setCurrentTime(audio.currentTime);\n                        performTimingCalibration();\n                    }\n                }[\"ReadingPage.useEffect.handleTimeUpdate\"];\n                const handleLoadedMetadata = {\n                    \"ReadingPage.useEffect.handleLoadedMetadata\": ()=>setAudioDuration(audio.duration)\n                }[\"ReadingPage.useEffect.handleLoadedMetadata\"];\n                audio.addEventListener('ended', handleEnded);\n                audio.addEventListener('pause', handlePause);\n                audio.addEventListener('play', handlePlay);\n                audio.addEventListener('timeupdate', handleTimeUpdate);\n                audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n                return ({\n                    \"ReadingPage.useEffect\": ()=>{\n                        audio.removeEventListener('ended', handleEnded);\n                        audio.removeEventListener('pause', handlePause);\n                        audio.removeEventListener('play', handlePlay);\n                        audio.removeEventListener('timeupdate', handleTimeUpdate);\n                        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n                    }\n                })[\"ReadingPage.useEffect\"];\n            }\n        }\n    }[\"ReadingPage.useEffect\"], []);\n    const renderTextWithHighlight = (text, type, questionIndex)=>{\n        // Add line breaks after every period, but not for numbered points (like \"1.\", \"2.\", etc.)\n        const textWithBreaks = text.replace(RegExp(\"(?<!\\\\d)\\\\. \", \"g\"), '.\\n');\n        const lines = textWithBreaks.split('\\n');\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: lines.map((line, lineIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: lineIndex > 0 ? 'mt-2' : '',\n                    children: line.trim()\n                }, lineIndex, false, {\n                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                    lineNumber: 474,\n                    columnNumber: 11\n                }, this))\n        }, void 0, false, {\n            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n            lineNumber: 472,\n            columnNumber: 7\n        }, this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen text-white relative\",\n        style: {\n            backgroundImage: \"url('/images/gradient-bg.png')\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black flex items-center justify-center z-[100] landscape:flex portrait:hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center px-8\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-6xl mb-4\",\n                            children: \"\\uD83D\\uDCF1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 495,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-2xl font-medium mb-2\",\n                            children: \"Rotate Your Device\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 496,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-gray-300\",\n                            children: \"Please rotate your device to portrait mode for the best experience\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 497,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                    lineNumber: 494,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 493,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"sticky top-0 w-full z-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute inset-0 pointer-events-none\",\n                        style: {\n                            background: 'linear-gradient(180deg, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.6) 30%, rgba(0,0,0,0.3) 60%, rgba(0,0,0,0) 100%)',\n                            backdropFilter: 'blur(8px)',\n                            WebkitBackdropFilter: 'blur(8px)',\n                            maskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)',\n                            WebkitMaskImage: 'linear-gradient(180deg, black 0%, black 70%, transparent 100%)'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 504,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"relative flex items-center px-4 bg-gradient-to-b from-black/40 via-black/20 to-transparent pt-5 pb-8 gap-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"p-2 rounded-[40px] inline-flex justify-center items-center cursor-pointer transition-transform hover:scale-105 active:scale-95\",\n                                onClick: handleBack,\n                                style: {\n                                    background: 'linear-gradient(143deg, rgba(255, 255, 255, 0.37) -3.54%, rgba(114, 114, 114, 0.42) 95.15%)',\n                                    boxShadow: '0px 1.127px 3.381px 0px rgba(255, 255, 255, 0.25) inset, 0px 0.501px 12.022px -0.501px rgba(0, 0, 0, 0.18)',\n                                    backdropFilter: 'blur(29.01752471923828px)',\n                                    WebkitBackdropFilter: 'blur(29.01752471923828px)',\n                                    borderImage: 'linear-gradient(143deg, #333333 0%, #EDEDED 32.43%, #FFFFFF 70%) 1'\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    width: \"24\",\n                                    height: \"24\",\n                                    viewBox: \"0 0 24 24\",\n                                    fill: \"none\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        d: \"M19 12H5M12 19l-7-7 7-7\",\n                                        stroke: \"white\",\n                                        strokeWidth: \"2\",\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                        lineNumber: 529,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                    lineNumber: 528,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 517,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-2xl font-medium text-white flex-1\",\n                                children: \"Read me\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 532,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 516,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 502,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"px-4 pb-32 space-y-12\",\n                children: _components_QuestionsData__WEBPACK_IMPORTED_MODULE_4__.questionsData.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-gray-400 text-base leading-relaxed\",\n                                children: renderTextWithHighlight(item.question, 'question', index)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 545,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-white text-2xl leading-relaxed font-normal\",\n                                children: renderTextWithHighlight(item.answer, 'answer', index)\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 548,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, \"qa-\".concat(index), true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 541,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 539,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                preload: \"metadata\",\n                className: \"hidden\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                        src: \"/audio/Read-out.mp3\",\n                        type: \"audio/mpeg\"\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 561,\n                        columnNumber: 9\n                    }, this),\n                    \"Your browser does not support the audio element.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 556,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_BottomNavigation__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                leftButton: {\n                    label: \"Summarise\",\n                    onClick: handleSummarise,\n                    icon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            fillRule: \"evenodd\",\n                            clipRule: \"evenodd\",\n                            d: \"M4.5 5C4.5 3.34315 5.84315 2 7.5 2H17.5C19.1569 2 20.5 3.34315 20.5 5V19C20.5 20.6569 19.1569 22 17.5 22H7.5C5.34315 22 4.5 20.6569 4.5 19V5ZM9.5 6C8.94772 6 8.5 6.44772 8.5 7C8.5 7.55228 8.94772 8 9.5 8H15.5C16.0523 8 16.5 7.55228 16.5 7C16.5 6.44772 16.0523 6 15.5 6H9.5ZM9.5 10C8.94772 10 8.5 10.4477 8.5 11C8.5 11.5523 8.94772 12 9.5 12H15.5C16.0523 12 16.5 11.5523 16.5 11C16.5 10.4477 16.0523 10 15.5 10H9.5ZM9.5 14C8.94772 14 8.5 14.4477 8.5 15C8.5 15.5523 8.94772 16 9.5 16H11.5C12.0523 16 12.5 15.5523 12.5 15C12.5 14.4477 12.0523 14 11.5 14H9.5Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 572,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 571,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'secondary'\n                },\n                rightButton: {\n                    label: isPlaying ? \"Pause\" : \"Play\",\n                    onClick: togglePlayPause,\n                    icon: isPlaying ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-6 h-6 relative overflow-hidden flex items-center justify-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 582,\n                                columnNumber: 15\n                            }, void 0),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-1 h-4 bg-white rounded-sm ml-1\"\n                            }, void 0, false, {\n                                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                                lineNumber: 583,\n                                columnNumber: 15\n                            }, void 0)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 581,\n                        columnNumber: 13\n                    }, void 0) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        width: \"25\",\n                        height: \"24\",\n                        viewBox: \"0 0 25 24\",\n                        fill: \"none\",\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M10.0765 2.53365C8.07781 1.29918 5.5 2.73688 5.5 5.08605V18.914C5.5 21.2632 8.07781 22.7009 10.0765 21.4664L21.2705 14.5524C23.1686 13.3801 23.1686 10.6199 21.2705 9.44763L10.0765 2.53365Z\",\n                            fill: \"white\"\n                        }, void 0, false, {\n                            fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                            lineNumber: 593,\n                            columnNumber: 15\n                        }, void 0)\n                    }, void 0, false, {\n                        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                        lineNumber: 586,\n                        columnNumber: 13\n                    }, void 0),\n                    variant: 'primary'\n                }\n            }, void 0, false, {\n                fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n                lineNumber: 566,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/akshay.borhade/coverletter/app/reading/page.tsx\",\n        lineNumber: 483,\n        columnNumber: 5\n    }, this);\n}\n_s(ReadingPage, \"s8vHQAr2CKXWiW1ahupVUK0L1JA=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = ReadingPage;\nvar _c;\n$RefreshReg$(_c, \"ReadingPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Yiw4REFBQ0o7Z0NBQUlJLFdBQVU7Ozs7OzswQ0FDZiw4REFBQ0o7Z0NBQUlJLFdBQVU7Ozs7Ozs7Ozs7OytDQUdqQiw4REFBQ2dCO3dCQUNDQyxPQUFNO3dCQUNOQyxRQUFPO3dCQUNQQyxTQUFRO3dCQUNSQyxNQUFLO3dCQUNMQyxPQUFNO2tDQUVOLDRFQUFDQzs0QkFBS0MsR0FBRTs0QkFBK0xILE1BQUs7Ozs7Ozs7Ozs7O29CQUdoTmtCLFNBQVM7Z0JBQ1g7Ozs7Ozs7Ozs7OztBQUlSO0dBL2tCd0I5Tzs7UUFpQlBKLHNEQUFTQTs7O0tBakJGSSIsInNvdXJjZXMiOlsiL1VzZXJzL2Frc2hheS5ib3JoYWRlL2NvdmVybGV0dGVyL2FwcC9yZWFkaW5nL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCJcbmltcG9ydCBCb3R0b21OYXZpZ2F0aW9uIGZyb20gXCJAL2NvbXBvbmVudHMvQm90dG9tTmF2aWdhdGlvblwiXG5pbXBvcnQgeyBxdWVzdGlvbnNEYXRhIH0gZnJvbSBcIkAvY29tcG9uZW50cy9RdWVzdGlvbnNEYXRhXCJcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZWFkaW5nUGFnZSgpIHtcbiAgY29uc3QgW2lzUGxheWluZywgc2V0SXNQbGF5aW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbY3VycmVudFRpbWUsIHNldEN1cnJlbnRUaW1lXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFt3b3Jkc1BlclNlY29uZCwgc2V0V29yZHNQZXJTZWNvbmRdID0gdXNlU3RhdGUoMi41KVxuICBjb25zdCBbc3RhcnREZWxheSwgc2V0U3RhcnREZWxheV0gPSB1c2VTdGF0ZSgwKVxuICBjb25zdCBbbWFudWFsT2Zmc2V0LCBzZXRNYW51YWxPZmZzZXRdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW2F1ZGlvRHVyYXRpb24sIHNldEF1ZGlvRHVyYXRpb25dID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW2lzTWFwcGluZywgc2V0SXNNYXBwaW5nXSA9IHVzZVN0YXRlKGZhbHNlKVxuICBjb25zdCBbd29yZE1hcHBpbmdzLCBzZXRXb3JkTWFwcGluZ3NdID0gdXNlU3RhdGU8QXJyYXk8e3dvcmRJbmRleDogbnVtYmVyLCBzdGFydFRpbWU6IG51bWJlcn0+PihbXSlcbiAgY29uc3QgW2N1cnJlbnRNYXBwaW5nSW5kZXgsIHNldEN1cnJlbnRNYXBwaW5nSW5kZXhdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW2lzQXV0b01hcHBpbmcsIHNldElzQXV0b01hcHBpbmddID0gdXNlU3RhdGUoZmFsc2UpXG4gIGNvbnN0IFthdXRvTWFwcGluZ1Byb2dyZXNzLCBzZXRBdXRvTWFwcGluZ1Byb2dyZXNzXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IFtyZWNvZ25pdGlvblJlc3VsdHMsIHNldFJlY29nbml0aW9uUmVzdWx0c10gPSB1c2VTdGF0ZTxBcnJheTx7d29yZDogc3RyaW5nLCBzdGFydFRpbWU6IG51bWJlciwgY29uZmlkZW5jZTogbnVtYmVyfT4+KFtdKVxuICBjb25zdCBbdGltaW5nQWRqdXN0bWVudHMsIHNldFRpbWluZ0FkanVzdG1lbnRzXSA9IHVzZVN0YXRlPEFycmF5PHt3b3JkSW5kZXg6IG51bWJlciwgZXhwZWN0ZWRUaW1lOiBudW1iZXIsIGFjdHVhbFRpbWU6IG51bWJlciwgYWRqdXN0bWVudDogbnVtYmVyfT4+KFtdKVxuICBjb25zdCBbY3VycmVudFBhcmFncmFwaEluZGV4LCBzZXRDdXJyZW50UGFyYWdyYXBoSW5kZXhdID0gdXNlU3RhdGUoMClcbiAgY29uc3QgW3BhcmFncmFwaFRpbWluZ3MsIHNldFBhcmFncmFwaFRpbWluZ3NdID0gdXNlU3RhdGU8QXJyYXk8e3BhcmFncmFwaEluZGV4OiBudW1iZXIsIHN0YXJ0VGltZTogbnVtYmVyLCBlbmRUaW1lOiBudW1iZXIsIHR5cGU6ICdxdWVzdGlvbicgfCAnYW5zd2VyJywgcXVlc3Rpb25JbmRleDogbnVtYmVyfT4+KFtdKVxuICBjb25zdCBhdWRpb1JlZiA9IHVzZVJlZjxIVE1MQXVkaW9FbGVtZW50PihudWxsKVxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKVxuXG4gIC8vIENyZWF0ZSBjb21wcmVoZW5zaXZlIHdvcmQgdGltaW5nIGRhdGEgdXNpbmcgbWFwcGVkIHRpbWluZ3Mgd2hlbiBhdmFpbGFibGVcbiAgY29uc3QgY3JlYXRlV29yZFRpbWluZ3MgPSAoKSA9PiB7XG4gICAgY29uc3QgYWxsV29yZHM6IEFycmF5PHtcbiAgICAgIHdvcmQ6IHN0cmluZ1xuICAgICAgc3RhcnRUaW1lOiBudW1iZXJcbiAgICAgIGVuZFRpbWU6IG51bWJlclxuICAgICAgdHlwZTogJ3F1ZXN0aW9uJyB8ICdhbnN3ZXInXG4gICAgICBxdWVzdGlvbkluZGV4OiBudW1iZXJcbiAgICAgIHdvcmRJbmRleDogbnVtYmVyXG4gICAgICBnbG9iYWxJbmRleDogbnVtYmVyXG4gICAgICBpc01hcHBlZDogYm9vbGVhblxuICAgICAgcGFyYWdyYXBoSWQ6IHN0cmluZ1xuICAgICAgaXNMYXN0V29yZE9mUGFyYWdyYXBoOiBib29sZWFuXG4gICAgfT4gPSBbXVxuXG4gICAgbGV0IGdsb2JhbFdvcmRJbmRleCA9IDBcbiAgICBsZXQgcGFyYWdyYXBoSW5kZXggPSAwXG5cbiAgICBxdWVzdGlvbnNEYXRhLmZvckVhY2goKGl0ZW0sIHF1ZXN0aW9uSW5kZXgpID0+IHtcbiAgICAgIC8vIFByb2Nlc3MgcXVlc3Rpb24gd29yZHNcbiAgICAgIGNvbnN0IHF1ZXN0aW9uV29yZHMgPSBpdGVtLnF1ZXN0aW9uLnNwbGl0KCcgJylcbiAgICAgIHF1ZXN0aW9uV29yZHMuZm9yRWFjaCgod29yZCwgd29yZEluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hcHBpbmcgPSB3b3JkTWFwcGluZ3MuZmluZChtID0+IG0ud29yZEluZGV4ID09PSBnbG9iYWxXb3JkSW5kZXgpXG4gICAgICAgIGNvbnN0IGNhbGN1bGF0ZWRTdGFydCA9IHN0YXJ0RGVsYXkgKyBtYW51YWxPZmZzZXQgKyAoZ2xvYmFsV29yZEluZGV4IC8gd29yZHNQZXJTZWNvbmQpXG4gICAgICAgIGNvbnN0IG5leHRNYXBwaW5nID0gd29yZE1hcHBpbmdzLmZpbmQobSA9PiBtLndvcmRJbmRleCA9PT0gZ2xvYmFsV29yZEluZGV4ICsgMSlcbiAgICAgICAgY29uc3QgcGFyYWdyYXBoSWQgPSBgcS0ke3F1ZXN0aW9uSW5kZXh9YFxuICAgICAgICBjb25zdCBpc0xhc3RXb3JkID0gd29yZEluZGV4ID09PSBxdWVzdGlvbldvcmRzLmxlbmd0aCAtIDFcbiAgICAgICAgXG4gICAgICAgIGFsbFdvcmRzLnB1c2goe1xuICAgICAgICAgIHdvcmQ6IHdvcmQudHJpbSgpLFxuICAgICAgICAgIHN0YXJ0VGltZTogY2FsY3VsYXRlZFN0YXJ0LFxuICAgICAgICAgIGVuZFRpbWU6IGNhbGN1bGF0ZWRTdGFydCArICgxIC8gd29yZHNQZXJTZWNvbmQpLFxuICAgICAgICAgIHR5cGU6ICdxdWVzdGlvbicsXG4gICAgICAgICAgcXVlc3Rpb25JbmRleCxcbiAgICAgICAgICB3b3JkSW5kZXgsXG4gICAgICAgICAgZ2xvYmFsSW5kZXg6IGdsb2JhbFdvcmRJbmRleCxcbiAgICAgICAgICBpc01hcHBlZDogISFtYXBwaW5nLFxuICAgICAgICAgIHBhcmFncmFwaElkLFxuICAgICAgICAgIGlzTGFzdFdvcmRPZlBhcmFncmFwaDogaXNMYXN0V29yZFxuICAgICAgICB9KVxuICAgICAgICBnbG9iYWxXb3JkSW5kZXgrK1xuICAgICAgfSlcbiAgICAgIHBhcmFncmFwaEluZGV4KytcblxuICAgICAgLy8gUHJvY2VzcyBhbnN3ZXIgd29yZHNcbiAgICAgIGNvbnN0IGFuc3dlcldvcmRzID0gaXRlbS5hbnN3ZXIuc3BsaXQoJyAnKVxuICAgICAgYW5zd2VyV29yZHMuZm9yRWFjaCgod29yZCwgd29yZEluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IG1hcHBpbmcgPSB3b3JkTWFwcGluZ3MuZmluZChtID0+IG0ud29yZEluZGV4ID09PSBnbG9iYWxXb3JkSW5kZXgpXG4gICAgICAgIGNvbnN0IGNhbGN1bGF0ZWRTdGFydCA9IHN0YXJ0RGVsYXkgKyBtYW51YWxPZmZzZXQgKyAoZ2xvYmFsV29yZEluZGV4IC8gd29yZHNQZXJTZWNvbmQpXG4gICAgICAgIGNvbnN0IG5leHRNYXBwaW5nID0gd29yZE1hcHBpbmdzLmZpbmQobSA9PiBtLndvcmRJbmRleCA9PT0gZ2xvYmFsV29yZEluZGV4ICsgMSlcbiAgICAgICAgY29uc3QgcGFyYWdyYXBoSWQgPSBgYS0ke3F1ZXN0aW9uSW5kZXh9YFxuICAgICAgICBjb25zdCBpc0xhc3RXb3JkID0gd29yZEluZGV4ID09PSBhbnN3ZXJXb3Jkcy5sZW5ndGggLSAxXG4gICAgICAgIFxuICAgICAgICBhbGxXb3Jkcy5wdXNoKHtcbiAgICAgICAgICB3b3JkOiB3b3JkLnRyaW0oKSxcbiAgICAgICAgICBzdGFydFRpbWU6IGNhbGN1bGF0ZWRTdGFydCxcbiAgICAgICAgICBlbmRUaW1lOiBjYWxjdWxhdGVkU3RhcnQgKyAoMSAvIHdvcmRzUGVyU2Vjb25kKSxcbiAgICAgICAgICB0eXBlOiAnYW5zd2VyJyxcbiAgICAgICAgICBxdWVzdGlvbkluZGV4LFxuICAgICAgICAgIHdvcmRJbmRleCxcbiAgICAgICAgICBnbG9iYWxJbmRleDogZ2xvYmFsV29yZEluZGV4LFxuICAgICAgICAgIGlzTWFwcGVkOiAhIW1hcHBpbmcsXG4gICAgICAgICAgcGFyYWdyYXBoSWQsXG4gICAgICAgICAgaXNMYXN0V29yZE9mUGFyYWdyYXBoOiBpc0xhc3RXb3JkXG4gICAgICAgIH0pXG4gICAgICAgIGdsb2JhbFdvcmRJbmRleCsrXG4gICAgICB9KVxuICAgICAgcGFyYWdyYXBoSW5kZXgrK1xuICAgIH0pXG5cbiAgICByZXR1cm4gYWxsV29yZHNcbiAgfVxuXG4gIGNvbnN0IHdvcmRUaW1pbmdzID0gY3JlYXRlV29yZFRpbWluZ3MoKVxuXG4gIC8vIFVwZGF0ZSBwYXJhZ3JhcGggdGltaW5nIGRhdGEgd2hlbiBzcGVlZCBjaGFuZ2VzXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gTm8gbmVlZCB0byB1cGRhdGUgcGFyYWdyYXBoU3RhcnRUaW1lcyBhcyBpdCdzIG5vIGxvbmdlciB1c2VkXG4gIH0sIFt3b3Jkc1BlclNlY29uZCwgc3RhcnREZWxheSwgbWFudWFsT2Zmc2V0XSlcblxuICAvLyBBdXRvbWF0aWMgdGltaW5nIGNhbGlicmF0aW9uIHN5c3RlbSAtIHJ1bnMgY29udGludW91c2x5IHRvIHN5bmMgdm9pY2Ugd2l0aCBoaWdobGlnaHRzXG4gIGNvbnN0IHBlcmZvcm1UaW1pbmdDYWxpYnJhdGlvbiA9ICgpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRXb3JkIHx8ICFhdWRpb1JlZi5jdXJyZW50KSByZXR1cm5cblxuICAgIC8vIENoZWNrIGZvciBjYWxpYnJhdGlvbiBhdCB0aGUgZW5kIG9mIGVhY2ggcGFyYWdyYXBoIChsYXN0IHdvcmQgb2YgcXVlc3Rpb24gb3IgYW5zd2VyKVxuICAgIGlmIChjdXJyZW50V29yZC5pc0xhc3RXb3JkT2ZQYXJhZ3JhcGggJiYgY3VycmVudFRpbWUgPj0gY3VycmVudFdvcmQuZW5kVGltZSkge1xuICAgICAgY29uc3QgcGFyYWdyYXBoU3RhcnRJbmRleCA9IGZpbmRQYXJhZ3JhcGhTdGFydEluZGV4KGN1cnJlbnRXb3JkKVxuICAgICAgY29uc3QgcGFyYWdyYXBoU3RhcnRXb3JkID0gd29yZFRpbWluZ3NbcGFyYWdyYXBoU3RhcnRJbmRleF1cbiAgICAgIFxuICAgICAgaWYgKHBhcmFncmFwaFN0YXJ0V29yZCkge1xuICAgICAgICAvLyBTaW1wbGUgY2FsY3VsYXRpb246IGNvbXBhcmUgYWN0dWFsIHRpbWUgdnMgZXhwZWN0ZWQgdGltZSBmb3IgdGhpcyBwYXJhZ3JhcGggZW5kXG4gICAgICAgIGNvbnN0IGV4cGVjdGVkVGltZUF0UGFyYWdyYXBoRW5kID0gY3VycmVudFdvcmQuZW5kVGltZVxuICAgICAgICBjb25zdCBhY3R1YWxUaW1lQXRQYXJhZ3JhcGhFbmQgPSBjdXJyZW50VGltZVxuICAgICAgICBjb25zdCB0aW1lRGlmZmVyZW5jZSA9IGFjdHVhbFRpbWVBdFBhcmFncmFwaEVuZCAtIGV4cGVjdGVkVGltZUF0UGFyYWdyYXBoRW5kXG5cbiAgICAgICAgLy8gSWYgdGhlcmUncyBzaWduaWZpY2FudCBkcmlmdCAobW9yZSB0aGFuIDEuNSBzZWNvbmRzKSwgYWRqdXN0IHRoZSBzcGVlZFxuICAgICAgICBpZiAoTWF0aC5hYnModGltZURpZmZlcmVuY2UpID4gMS41KSB7XG4gICAgICAgICAgY29uc3Qgd29yZHNJblBhcmFncmFwaCA9IGN1cnJlbnRXb3JkLmdsb2JhbEluZGV4IC0gcGFyYWdyYXBoU3RhcnRJbmRleCArIDFcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDYWxjdWxhdGUgd2hhdCB0aGUgc3BlZWQgc2hvdWxkIGJlIGJhc2VkIG9uIGFjdHVhbCB0aW1pbmdcbiAgICAgICAgICBjb25zdCBleHBlY3RlZFBhcmFncmFwaER1cmF0aW9uID0gY3VycmVudFdvcmQuZW5kVGltZSAtIHBhcmFncmFwaFN0YXJ0V29yZC5zdGFydFRpbWVcbiAgICAgICAgICBjb25zdCBhY3R1YWxQYXJhZ3JhcGhEdXJhdGlvbiA9IGN1cnJlbnRUaW1lIC0gcGFyYWdyYXBoU3RhcnRXb3JkLnN0YXJ0VGltZVxuICAgICAgICAgIGNvbnN0IHNwZWVkTXVsdGlwbGllciA9IGV4cGVjdGVkUGFyYWdyYXBoRHVyYXRpb24gLyBhY3R1YWxQYXJhZ3JhcGhEdXJhdGlvblxuICAgICAgICAgIGNvbnN0IG5ld1dQUyA9IHdvcmRzUGVyU2Vjb25kICogc3BlZWRNdWx0aXBsaWVyXG5cbiAgICAgICAgICAvLyBMaW1pdCBhZGp1c3RtZW50cyB0byByZWFzb25hYmxlIHJhbmdlXG4gICAgICAgICAgY29uc3QgYWRqdXN0ZWRXUFMgPSBNYXRoLm1pbihNYXRoLm1heChuZXdXUFMsIDAuOCksIDYuMClcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBPbmx5IGFkanVzdCBpZiB0aGUgY2hhbmdlIGlzIHNpZ25pZmljYW50IGVub3VnaFxuICAgICAgICAgIGlmIChNYXRoLmFicyhhZGp1c3RlZFdQUyAtIHdvcmRzUGVyU2Vjb25kKSA+IDAuMikge1xuICAgICAgICAgICAgc2V0V29yZHNQZXJTZWNvbmQoYWRqdXN0ZWRXUFMpXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGFkanVzdG1lbnQgPSB7XG4gICAgICAgICAgICAgIHdvcmRJbmRleDogY3VycmVudFdvcmQuZ2xvYmFsSW5kZXgsXG4gICAgICAgICAgICAgIGV4cGVjdGVkVGltZTogZXhwZWN0ZWRUaW1lQXRQYXJhZ3JhcGhFbmQsXG4gICAgICAgICAgICAgIGFjdHVhbFRpbWU6IGFjdHVhbFRpbWVBdFBhcmFncmFwaEVuZCxcbiAgICAgICAgICAgICAgYWRqdXN0bWVudDogYWRqdXN0ZWRXUFMgLSB3b3Jkc1BlclNlY29uZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXRUaW1pbmdBZGp1c3RtZW50cyhwcmV2ID0+IFsuLi5wcmV2LCBhZGp1c3RtZW50XSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gZmluZCB0aGUgc3RhcnQgb2YgY3VycmVudCBwYXJhZ3JhcGhcbiAgY29uc3QgZmluZFBhcmFncmFwaFN0YXJ0SW5kZXggPSAoY3VycmVudFdvcmQ6IGFueSkgPT4ge1xuICAgIC8vIEZpbmQgdGhlIGZpcnN0IHdvcmQgb2YgdGhlIGN1cnJlbnQgcGFyYWdyYXBoIChxdWVzdGlvbiBvciBhbnN3ZXIpXG4gICAgZm9yIChsZXQgaSA9IGN1cnJlbnRXb3JkLmdsb2JhbEluZGV4OyBpID49IDA7IGktLSkge1xuICAgICAgY29uc3Qgd29yZCA9IHdvcmRUaW1pbmdzW2ldXG4gICAgICBpZiAod29yZCAmJiB3b3JkLnR5cGUgPT09IGN1cnJlbnRXb3JkLnR5cGUgJiYgd29yZC5xdWVzdGlvbkluZGV4ID09PSBjdXJyZW50V29yZC5xdWVzdGlvbkluZGV4ICYmIHdvcmQud29yZEluZGV4ID09PSAwKSB7XG4gICAgICAgIHJldHVybiBpXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAwXG4gIH1cblxuICAvLyBGaW5kIGN1cnJlbnQgd29yZCBhbmQgcmVsYXRlZCBpbmZvXG4gIGNvbnN0IGN1cnJlbnRXb3JkSW5kZXggPSB3b3JkVGltaW5ncy5maW5kSW5kZXgodGltaW5nID0+IFxuICAgIGN1cnJlbnRUaW1lID49IHRpbWluZy5zdGFydFRpbWUgJiYgY3VycmVudFRpbWUgPCB0aW1pbmcuZW5kVGltZVxuICApXG4gIGNvbnN0IGN1cnJlbnRXb3JkID0gY3VycmVudFdvcmRJbmRleCA+PSAwID8gd29yZFRpbWluZ3NbY3VycmVudFdvcmRJbmRleF0gOiBudWxsXG4gIGNvbnN0IG5leHRXb3JkID0gY3VycmVudFdvcmRJbmRleCA+PSAwICYmIGN1cnJlbnRXb3JkSW5kZXggPCB3b3JkVGltaW5ncy5sZW5ndGggLSAxIFxuICAgID8gd29yZFRpbWluZ3NbY3VycmVudFdvcmRJbmRleCArIDFdIDogbnVsbFxuXG4gIGNvbnN0IHRvZ2dsZVBsYXlQYXVzZSA9ICgpID0+IHtcbiAgICBpZiAoYXVkaW9SZWYuY3VycmVudCkge1xuICAgICAgaWYgKGlzUGxheWluZykge1xuICAgICAgICBhdWRpb1JlZi5jdXJyZW50LnBhdXNlKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGF1ZGlvUmVmLmN1cnJlbnQucGxheSgpXG4gICAgICB9XG4gICAgICBzZXRJc1BsYXlpbmcoIWlzUGxheWluZylcbiAgICB9XG4gIH1cblxuICBjb25zdCBoYW5kbGVCYWNrID0gKCkgPT4ge1xuICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LnBhdXNlKClcbiAgICB9XG4gICAgcm91dGVyLmJhY2soKVxuICB9XG5cbiAgY29uc3QgaGFuZGxlU3VtbWFyaXNlID0gKCkgPT4ge1xuICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICBhdWRpb1JlZi5jdXJyZW50LnBhdXNlKClcbiAgICB9XG4gICAgcm91dGVyLnB1c2goXCIvc3VtbWFyeVwiKVxuICB9XG5cbiAgLy8gQWR2YW5jZWQgdGltaW5nIGNvbnRyb2xzXG4gIGNvbnN0IGp1bXBUb1RpbWUgPSAodGltZTogbnVtYmVyKSA9PiB7XG4gICAgaWYgKGF1ZGlvUmVmLmN1cnJlbnQpIHtcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQuY3VycmVudFRpbWUgPSBNYXRoLm1heCgwLCBNYXRoLm1pbih0aW1lLCBhdWRpb0R1cmF0aW9uIHx8IHRpbWUpKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGp1bXBUb1dvcmQgPSAod29yZEluZGV4OiBudW1iZXIpID0+IHtcbiAgICBjb25zdCB3b3JkID0gd29yZFRpbWluZ3Nbd29yZEluZGV4XVxuICAgIGlmICh3b3JkICYmIGF1ZGlvUmVmLmN1cnJlbnQpIHtcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQuY3VycmVudFRpbWUgPSB3b3JkLnN0YXJ0VGltZVxuICAgIH1cbiAgfVxuXG4gIC8vIFdvcmQgbWFwcGluZyBmdW5jdGlvbnNcbiAgY29uc3Qgc3RhcnRNYXBwaW5nID0gKCkgPT4ge1xuICAgIHNldElzTWFwcGluZyh0cnVlKVxuICAgIHNldEN1cnJlbnRNYXBwaW5nSW5kZXgoMClcbiAgICBzZXRXb3JkTWFwcGluZ3MoW10pXG4gICAgaWYgKGF1ZGlvUmVmLmN1cnJlbnQpIHtcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQuY3VycmVudFRpbWUgPSAwXG4gICAgICBhdWRpb1JlZi5jdXJyZW50LnBsYXkoKVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHN0b3BNYXBwaW5nID0gKCkgPT4ge1xuICAgIHNldElzTWFwcGluZyhmYWxzZSlcbiAgICBpZiAoYXVkaW9SZWYuY3VycmVudCkge1xuICAgICAgYXVkaW9SZWYuY3VycmVudC5wYXVzZSgpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgbWFya0N1cnJlbnRXb3JkID0gKCkgPT4ge1xuICAgIGlmIChpc01hcHBpbmcgJiYgY3VycmVudE1hcHBpbmdJbmRleCA8IHdvcmRUaW1pbmdzLmxlbmd0aCkge1xuICAgICAgY29uc3QgbmV3TWFwcGluZyA9IHsgd29yZEluZGV4OiBjdXJyZW50TWFwcGluZ0luZGV4LCBzdGFydFRpbWU6IGN1cnJlbnRUaW1lIH1cbiAgICAgIHNldFdvcmRNYXBwaW5ncyhwcmV2ID0+IFsuLi5wcmV2LCBuZXdNYXBwaW5nXSlcbiAgICAgIHNldEN1cnJlbnRNYXBwaW5nSW5kZXgocHJldiA9PiBwcmV2ICsgMSlcbiAgICB9XG4gIH1cblxuICBjb25zdCBjbGVhck1hcHBpbmdzID0gKCkgPT4ge1xuICAgIHNldFdvcmRNYXBwaW5ncyhbXSlcbiAgICBzZXRDdXJyZW50TWFwcGluZ0luZGV4KDApXG4gIH1cblxuICBjb25zdCBleHBvcnRNYXBwaW5ncyA9ICgpID0+IHtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgbWFwcGluZ3M6IHdvcmRNYXBwaW5ncyxcbiAgICAgIHRvdGFsV29yZHM6IHdvcmRUaW1pbmdzLmxlbmd0aCxcbiAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfVxuICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMildLCB7IHR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyB9KVxuICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYilcbiAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpXG4gICAgYS5ocmVmID0gdXJsXG4gICAgYS5kb3dubG9hZCA9ICd3b3JkLW1hcHBpbmdzLmpzb24nXG4gICAgYS5jbGljaygpXG4gICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpXG4gIH1cblxuICBjb25zdCBpbXBvcnRNYXBwaW5ncyA9IChldmVudDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzPy5bMF1cbiAgICBpZiAoZmlsZSkge1xuICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZS50YXJnZXQ/LnJlc3VsdCBhcyBzdHJpbmcpXG4gICAgICAgICAgc2V0V29yZE1hcHBpbmdzKGRhdGEubWFwcGluZ3MgfHwgW10pXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgYWxlcnQoJ0ludmFsaWQgbWFwcGluZyBmaWxlJylcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSlcbiAgICB9XG4gIH1cblxuICAvLyBBdXRvbWF0aWMgTVAzIHRvIEpTT04gd29yZCBtYXBwaW5nXG4gIGNvbnN0IHN0YXJ0QXV0b01hcHBpbmcgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFhdWRpb1JlZi5jdXJyZW50KSByZXR1cm5cbiAgICBcbiAgICBzZXRJc0F1dG9NYXBwaW5nKHRydWUpXG4gICAgc2V0QXV0b01hcHBpbmdQcm9ncmVzcygwKVxuICAgIHNldFJlY29nbml0aW9uUmVzdWx0cyhbXSlcbiAgICBcbiAgICB0cnkge1xuICAgICAgLy8gQ2hlY2sgaWYgV2ViIFNwZWVjaCBBUEkgaXMgYXZhaWxhYmxlXG4gICAgICBpZiAoISgnd2Via2l0U3BlZWNoUmVjb2duaXRpb24nIGluIHdpbmRvdykgJiYgISgnU3BlZWNoUmVjb2duaXRpb24nIGluIHdpbmRvdykpIHtcbiAgICAgICAgYWxlcnQoJ1NwZWVjaCByZWNvZ25pdGlvbiBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3Nlci4gUGxlYXNlIHVzZSBDaHJvbWUgb3IgRWRnZS4nKVxuICAgICAgICBzZXRJc0F1dG9NYXBwaW5nKGZhbHNlKVxuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgY29uc3QgU3BlZWNoUmVjb2duaXRpb24gPSAod2luZG93IGFzIGFueSkuU3BlZWNoUmVjb2duaXRpb24gfHwgKHdpbmRvdyBhcyBhbnkpLndlYmtpdFNwZWVjaFJlY29nbml0aW9uXG4gICAgICBjb25zdCByZWNvZ25pdGlvbiA9IG5ldyBTcGVlY2hSZWNvZ25pdGlvbigpXG4gICAgICBcbiAgICAgIHJlY29nbml0aW9uLmNvbnRpbnVvdXMgPSB0cnVlXG4gICAgICByZWNvZ25pdGlvbi5pbnRlcmltUmVzdWx0cyA9IHRydWVcbiAgICAgIHJlY29nbml0aW9uLmxhbmcgPSAnZW4tVVMnXG4gICAgICBcbiAgICAgIGNvbnN0IGF1ZGlvU3RhcnRUaW1lID0gRGF0ZS5ub3coKVxuICAgICAgY29uc3QgcmVzdWx0czogQXJyYXk8e3dvcmQ6IHN0cmluZywgc3RhcnRUaW1lOiBudW1iZXIsIGNvbmZpZGVuY2U6IG51bWJlcn0+ID0gW11cbiAgICAgIFxuICAgICAgcmVjb2duaXRpb24ub25yZXN1bHQgPSAoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpID0gZXZlbnQucmVzdWx0SW5kZXg7IGkgPCBldmVudC5yZXN1bHRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKGV2ZW50LnJlc3VsdHNbaV0uaXNGaW5hbCkge1xuICAgICAgICAgICAgY29uc3QgdHJhbnNjcmlwdCA9IGV2ZW50LnJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdC50cmltKClcbiAgICAgICAgICAgIGNvbnN0IHdvcmRzID0gdHJhbnNjcmlwdC5zcGxpdCgnICcpXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IChEYXRlLm5vdygpIC0gYXVkaW9TdGFydFRpbWUpIC8gMTAwMFxuICAgICAgICAgICAgXG4gICAgICAgICAgICB3b3Jkcy5mb3JFYWNoKCh3b3JkOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgaWYgKHdvcmQudHJpbSgpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgIHdvcmQ6IHdvcmQudHJpbSgpLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvW15cXHddL2csICcnKSxcbiAgICAgICAgICAgICAgICAgIHN0YXJ0VGltZTogY3VycmVudFRpbWUgLSAod29yZHMubGVuZ3RoIC0gaW5kZXgpICogMC4zLCAvLyBFc3RpbWF0ZSB3b3JkIHRpbWluZ1xuICAgICAgICAgICAgICAgICAgY29uZmlkZW5jZTogZXZlbnQucmVzdWx0c1tpXVswXS5jb25maWRlbmNlIHx8IDAuOFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNldFJlY29nbml0aW9uUmVzdWx0cyhbLi4ucmVzdWx0c10pXG4gICAgICAgICAgICBzZXRBdXRvTWFwcGluZ1Byb2dyZXNzKChyZXN1bHRzLmxlbmd0aCAvIHdvcmRUaW1pbmdzLmxlbmd0aCkgKiAxMDApXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJlY29nbml0aW9uLm9uZXJyb3IgPSAoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdSZWNvZ25pdGlvbiBlcnJvcjonLCBldmVudC5lcnJvcilcbiAgICAgICAgc2V0SXNBdXRvTWFwcGluZyhmYWxzZSlcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmVjb2duaXRpb24ub25lbmQgPSAoKSA9PiB7XG4gICAgICAgIHNldElzQXV0b01hcHBpbmcoZmFsc2UpXG4gICAgICAgIHByb2Nlc3NSZWNvZ25pdGlvblJlc3VsdHMocmVzdWx0cylcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU3RhcnQgYXVkaW8gYW5kIHJlY29nbml0aW9uXG4gICAgICBhdWRpb1JlZi5jdXJyZW50LmN1cnJlbnRUaW1lID0gMFxuICAgICAgYXdhaXQgYXVkaW9SZWYuY3VycmVudC5wbGF5KClcbiAgICAgIHJlY29nbml0aW9uLnN0YXJ0KClcbiAgICAgIFxuICAgICAgLy8gU3RvcCByZWNvZ25pdGlvbiB3aGVuIGF1ZGlvIGVuZHNcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQub25lbmRlZCA9ICgpID0+IHtcbiAgICAgICAgcmVjb2duaXRpb24uc3RvcCgpXG4gICAgICB9XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignQXV0byBtYXBwaW5nIGVycm9yOicsIGVycm9yKVxuICAgICAgYWxlcnQoJ0Vycm9yIHN0YXJ0aW5nIGF1dG9tYXRpYyBtYXBwaW5nLiBQbGVhc2UgdHJ5IG1hbnVhbCBtYXBwaW5nIGluc3RlYWQuJylcbiAgICAgIHNldElzQXV0b01hcHBpbmcoZmFsc2UpXG4gICAgfVxuICB9XG5cbiAgY29uc3QgcHJvY2Vzc1JlY29nbml0aW9uUmVzdWx0cyA9IChyZXN1bHRzOiBBcnJheTx7d29yZDogc3RyaW5nLCBzdGFydFRpbWU6IG51bWJlciwgY29uZmlkZW5jZTogbnVtYmVyfT4pID0+IHtcbiAgICBjb25zdCBtYXBwaW5nczogQXJyYXk8e3dvcmRJbmRleDogbnVtYmVyLCBzdGFydFRpbWU6IG51bWJlcn0+ID0gW11cbiAgICBcbiAgICAvLyBNYXRjaCByZWNvZ25pemVkIHdvcmRzIHdpdGggY29udGVudCB3b3Jkc1xuICAgIHdvcmRUaW1pbmdzLmZvckVhY2goKGNvbnRlbnRXb3JkLCBpbmRleCkgPT4ge1xuICAgICAgY29uc3QgY2xlYW5Db250ZW50V29yZCA9IGNvbnRlbnRXb3JkLndvcmQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9bXlxcd10vZywgJycpXG4gICAgICBcbiAgICAgIC8vIEZpbmQgYmVzdCBtYXRjaGluZyByZWNvZ25pemVkIHdvcmRcbiAgICAgIGNvbnN0IG1hdGNoaW5nUmVzdWx0ID0gcmVzdWx0cy5maW5kKHJlc3VsdCA9PiBcbiAgICAgICAgcmVzdWx0LndvcmQgPT09IGNsZWFuQ29udGVudFdvcmQgfHwgXG4gICAgICAgIHJlc3VsdC53b3JkLmluY2x1ZGVzKGNsZWFuQ29udGVudFdvcmQpIHx8XG4gICAgICAgIGNsZWFuQ29udGVudFdvcmQuaW5jbHVkZXMocmVzdWx0LndvcmQpXG4gICAgICApXG4gICAgICBcbiAgICAgIGlmIChtYXRjaGluZ1Jlc3VsdCAmJiBtYXRjaGluZ1Jlc3VsdC5jb25maWRlbmNlID4gMC41KSB7XG4gICAgICAgIG1hcHBpbmdzLnB1c2goe1xuICAgICAgICAgIHdvcmRJbmRleDogaW5kZXgsXG4gICAgICAgICAgc3RhcnRUaW1lOiBtYXRjaGluZ1Jlc3VsdC5zdGFydFRpbWVcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9KVxuICAgIFxuICAgIHNldFdvcmRNYXBwaW5ncyhtYXBwaW5ncylcbiAgICBcbiAgICAvLyBFeHBvcnQgcmVzdWx0cyBhdXRvbWF0aWNhbGx5XG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIG1hcHBpbmdzLFxuICAgICAgcmVjb2duaXRpb25SZXN1bHRzOiByZXN1bHRzLFxuICAgICAgdG90YWxXb3Jkczogd29yZFRpbWluZ3MubGVuZ3RoLFxuICAgICAgbWF0Y2hlZFdvcmRzOiBtYXBwaW5ncy5sZW5ndGgsXG4gICAgICBhY2N1cmFjeTogKG1hcHBpbmdzLmxlbmd0aCAvIHdvcmRUaW1pbmdzLmxlbmd0aCkgKiAxMDAsXG4gICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIG1ldGhvZDogJ2F1dG9tYXRpY19zcGVlY2hfcmVjb2duaXRpb24nXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbSlNPTi5zdHJpbmdpZnkoZGF0YSwgbnVsbCwgMildLCB7IHR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyB9KVxuICAgIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYilcbiAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpXG4gICAgYS5ocmVmID0gdXJsXG4gICAgYS5kb3dubG9hZCA9ICdhdXRvLXdvcmQtbWFwcGluZ3MuanNvbidcbiAgICBhLmNsaWNrKClcbiAgICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybClcbiAgICBcbiAgICBhbGVydChgQXV0by1tYXBwaW5nIGNvbXBsZXRlISBNYXRjaGVkICR7bWFwcGluZ3MubGVuZ3RofS8ke3dvcmRUaW1pbmdzLmxlbmd0aH0gd29yZHMgKCR7KChtYXBwaW5ncy5sZW5ndGggLyB3b3JkVGltaW5ncy5sZW5ndGgpICogMTAwKS50b0ZpeGVkKDEpfSUpLiBKU09OIGZpbGUgZG93bmxvYWRlZC5gKVxuICB9XG5cbiAgY29uc3Qgc3RvcEF1dG9NYXBwaW5nID0gKCkgPT4ge1xuICAgIHNldElzQXV0b01hcHBpbmcoZmFsc2UpXG4gICAgaWYgKGF1ZGlvUmVmLmN1cnJlbnQpIHtcbiAgICAgIGF1ZGlvUmVmLmN1cnJlbnQucGF1c2UoKVxuICAgIH1cbiAgfVxuXG4gIC8vIEFsdGVybmF0aXZlOiBVcGxvYWQgTVAzIGZvciBzZXJ2ZXItc2lkZSBwcm9jZXNzaW5nXG4gIGNvbnN0IHVwbG9hZE1QM0ZvclByb2Nlc3NpbmcgPSAoZXZlbnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgZmlsZSA9IGV2ZW50LnRhcmdldC5maWxlcz8uWzBdXG4gICAgaWYgKGZpbGUgJiYgZmlsZS50eXBlID09PSAnYXVkaW8vbXBlZycpIHtcbiAgICAgIC8vIFRoaXMgd291bGQgdHlwaWNhbGx5IHNlbmQgdG8gYSBzZXJ2ZXIgd2l0aCBzcGVlY2gtdG8tdGV4dCBBUElcbiAgICAgIGFsZXJ0KCdNUDMgdXBsb2FkIGZvciBzZXJ2ZXItc2lkZSBwcm9jZXNzaW5nIHdvdWxkIGdvIGhlcmUuIEZvciBub3csIHVzZSB0aGUgYXV0b21hdGljIG1hcHBpbmcgZmVhdHVyZS4nKVxuICAgIH1cbiAgfVxuXG4gIC8vIEtleWJvYXJkIGhhbmRsZXIgZm9yIHNwYWNlYmFyIHRvIG1hcmsgd29yZHNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVLZXlQcmVzcyA9IChlOiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICBpZiAoZS5jb2RlID09PSAnU3BhY2UnICYmIGlzTWFwcGluZykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgbWFya0N1cnJlbnRXb3JkKClcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaXNNYXBwaW5nKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5UHJlc3MpXG4gICAgICByZXR1cm4gKCkgPT4gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUtleVByZXNzKVxuICAgIH1cbiAgfSwgW2lzTWFwcGluZywgY3VycmVudE1hcHBpbmdJbmRleCwgY3VycmVudFRpbWVdKVxuXG4gIC8vIENhbGN1bGF0ZSB0aW1pbmcgYWNjdXJhY3lcbiAgY29uc3QgZ2V0VGltaW5nQWNjdXJhY3kgPSAoKSA9PiB7XG4gICAgaWYgKCFjdXJyZW50V29yZCkgcmV0dXJuIG51bGxcbiAgICBjb25zdCBleHBlY3RlZFRpbWUgPSBjdXJyZW50V29yZC5zdGFydFRpbWVcbiAgICBjb25zdCBhY3R1YWxUaW1lID0gY3VycmVudFRpbWVcbiAgICBjb25zdCBkaWZmZXJlbmNlID0gYWN0dWFsVGltZSAtIGV4cGVjdGVkVGltZVxuICAgIHJldHVybiBkaWZmZXJlbmNlXG4gIH1cblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGF1ZGlvID0gYXVkaW9SZWYuY3VycmVudFxuICAgIGlmIChhdWRpbykge1xuICAgICAgY29uc3QgaGFuZGxlRW5kZWQgPSAoKSA9PiBzZXRJc1BsYXlpbmcoZmFsc2UpXG4gICAgICBjb25zdCBoYW5kbGVQYXVzZSA9ICgpID0+IHNldElzUGxheWluZyhmYWxzZSlcbiAgICAgIGNvbnN0IGhhbmRsZVBsYXkgPSAoKSA9PiBzZXRJc1BsYXlpbmcodHJ1ZSlcbiAgICAgIGNvbnN0IGhhbmRsZVRpbWVVcGRhdGUgPSAoKSA9PiB7XG4gICAgICAgIHNldEN1cnJlbnRUaW1lKGF1ZGlvLmN1cnJlbnRUaW1lKVxuICAgICAgICBwZXJmb3JtVGltaW5nQ2FsaWJyYXRpb24oKVxuICAgICAgfVxuICAgICAgY29uc3QgaGFuZGxlTG9hZGVkTWV0YWRhdGEgPSAoKSA9PiBzZXRBdWRpb0R1cmF0aW9uKGF1ZGlvLmR1cmF0aW9uKVxuXG4gICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdlbmRlZCcsIGhhbmRsZUVuZGVkKVxuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcigncGF1c2UnLCBoYW5kbGVQYXVzZSlcbiAgICAgIGF1ZGlvLmFkZEV2ZW50TGlzdGVuZXIoJ3BsYXknLCBoYW5kbGVQbGF5KVxuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcigndGltZXVwZGF0ZScsIGhhbmRsZVRpbWVVcGRhdGUpXG4gICAgICBhdWRpby5hZGRFdmVudExpc3RlbmVyKCdsb2FkZWRtZXRhZGF0YScsIGhhbmRsZUxvYWRlZE1ldGFkYXRhKVxuXG4gICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBhdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCdlbmRlZCcsIGhhbmRsZUVuZGVkKVxuICAgICAgICBhdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCdwYXVzZScsIGhhbmRsZVBhdXNlKVxuICAgICAgICBhdWRpby5yZW1vdmVFdmVudExpc3RlbmVyKCdwbGF5JywgaGFuZGxlUGxheSlcbiAgICAgICAgYXVkaW8ucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGltZXVwZGF0ZScsIGhhbmRsZVRpbWVVcGRhdGUpXG4gICAgICAgIGF1ZGlvLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWRlZG1ldGFkYXRhJywgaGFuZGxlTG9hZGVkTWV0YWRhdGEpXG4gICAgICB9XG4gICAgfVxuICB9LCBbXSlcblxuICBjb25zdCByZW5kZXJUZXh0V2l0aEhpZ2hsaWdodCA9ICh0ZXh0OiBzdHJpbmcsIHR5cGU6ICdxdWVzdGlvbicgfCAnYW5zd2VyJywgcXVlc3Rpb25JbmRleDogbnVtYmVyKSA9PiB7XG4gICAgLy8gQWRkIGxpbmUgYnJlYWtzIGFmdGVyIGV2ZXJ5IHBlcmlvZCwgYnV0IG5vdCBmb3IgbnVtYmVyZWQgcG9pbnRzIChsaWtlIFwiMS5cIiwgXCIyLlwiLCBldGMuKVxuICAgIGNvbnN0IHRleHRXaXRoQnJlYWtzID0gdGV4dC5yZXBsYWNlKC8oPzwhXFxkKVxcLiAvZywgJy5cXG4nKVxuICAgIGNvbnN0IGxpbmVzID0gdGV4dFdpdGhCcmVha3Muc3BsaXQoJ1xcbicpXG4gICAgXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIHtsaW5lcy5tYXAoKGxpbmUsIGxpbmVJbmRleCkgPT4gKFxuICAgICAgICAgIDxkaXYga2V5PXtsaW5lSW5kZXh9IGNsYXNzTmFtZT17bGluZUluZGV4ID4gMCA/ICdtdC0yJyA6ICcnfT5cbiAgICAgICAgICAgIHtsaW5lLnRyaW0oKX1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiB0ZXh0LXdoaXRlIHJlbGF0aXZlXCJcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIGJhY2tncm91bmRJbWFnZTogXCJ1cmwoJy9pbWFnZXMvZ3JhZGllbnQtYmcucG5nJylcIixcbiAgICAgICAgYmFja2dyb3VuZFNpemU6IFwiY292ZXJcIixcbiAgICAgICAgYmFja2dyb3VuZFBvc2l0aW9uOiBcImNlbnRlclwiLFxuICAgICAgICBiYWNrZ3JvdW5kUmVwZWF0OiBcIm5vLXJlcGVhdFwiLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7LyogTGFuZHNjYXBlIFJvdGF0aW9uIE1lc3NhZ2UgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpeGVkIGluc2V0LTAgYmctYmxhY2sgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgei1bMTAwXSBsYW5kc2NhcGU6ZmxleCBwb3J0cmFpdDpoaWRkZW5cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciBweC04XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTZ4bCBtYi00XCI+8J+TsTwvZGl2PlxuICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LW1lZGl1bSBtYi0yXCI+Um90YXRlIFlvdXIgRGV2aWNlPC9oMj5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktMzAwXCI+UGxlYXNlIHJvdGF0ZSB5b3VyIGRldmljZSB0byBwb3J0cmFpdCBtb2RlIGZvciB0aGUgYmVzdCBleHBlcmllbmNlPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogSGVhZGVyIHdpdGggU21vb3RoIEZhZGUgTWFzayAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3RpY2t5IHRvcC0wIHctZnVsbCB6LTIwXCI+XG4gICAgICAgIHsvKiBTbW9vdGggRmFkZSBNYXNrICovfVxuICAgICAgICA8ZGl2IFxuICAgICAgICAgIGNsYXNzTmFtZT1cImFic29sdXRlIGluc2V0LTAgcG9pbnRlci1ldmVudHMtbm9uZVwiXG4gICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDAsMCwwLDAuOSkgMCUsIHJnYmEoMCwwLDAsMC42KSAzMCUsIHJnYmEoMCwwLDAsMC4zKSA2MCUsIHJnYmEoMCwwLDAsMCkgMTAwJSknLFxuICAgICAgICAgICAgYmFja2Ryb3BGaWx0ZXI6ICdibHVyKDhweCknLFxuICAgICAgICAgICAgV2Via2l0QmFja2Ryb3BGaWx0ZXI6ICdibHVyKDhweCknLFxuICAgICAgICAgICAgbWFza0ltYWdlOiAnbGluZWFyLWdyYWRpZW50KDE4MGRlZywgYmxhY2sgMCUsIGJsYWNrIDcwJSwgdHJhbnNwYXJlbnQgMTAwJSknLFxuICAgICAgICAgICAgV2Via2l0TWFza0ltYWdlOiAnbGluZWFyLWdyYWRpZW50KDE4MGRlZywgYmxhY2sgMCUsIGJsYWNrIDcwJSwgdHJhbnNwYXJlbnQgMTAwJSknXG4gICAgICAgICAgfX1cbiAgICAgICAgPjwvZGl2PlxuICAgICAgICBcbiAgICAgICAgey8qIEhlYWRlciBDb250ZW50ICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIGZsZXggaXRlbXMtY2VudGVyIHB4LTQgYmctZ3JhZGllbnQtdG8tYiBmcm9tLWJsYWNrLzQwIHZpYS1ibGFjay8yMCB0by10cmFuc3BhcmVudCBwdC01IHBiLTggZ2FwLTRcIj5cbiAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwicC0yIHJvdW5kZWQtWzQwcHhdIGlubGluZS1mbGV4IGp1c3RpZnktY2VudGVyIGl0ZW1zLWNlbnRlciBjdXJzb3ItcG9pbnRlciB0cmFuc2l0aW9uLXRyYW5zZm9ybSBob3ZlcjpzY2FsZS0xMDUgYWN0aXZlOnNjYWxlLTk1XCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUJhY2t9XG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAnbGluZWFyLWdyYWRpZW50KDE0M2RlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjM3KSAtMy41NCUsIHJnYmEoMTE0LCAxMTQsIDExNCwgMC40MikgOTUuMTUlKScsXG4gICAgICAgICAgICAgIGJveFNoYWRvdzogJzBweCAxLjEyN3B4IDMuMzgxcHggMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yNSkgaW5zZXQsIDBweCAwLjUwMXB4IDEyLjAyMnB4IC0wLjUwMXB4IHJnYmEoMCwgMCwgMCwgMC4xOCknLFxuICAgICAgICAgICAgICBiYWNrZHJvcEZpbHRlcjogJ2JsdXIoMjkuMDE3NTI0NzE5MjM4MjhweCknLFxuICAgICAgICAgICAgICBXZWJraXRCYWNrZHJvcEZpbHRlcjogJ2JsdXIoMjkuMDE3NTI0NzE5MjM4MjhweCknLFxuICAgICAgICAgICAgICBib3JkZXJJbWFnZTogJ2xpbmVhci1ncmFkaWVudCgxNDNkZWcsICMzMzMzMzMgMCUsICNFREVERUQgMzIuNDMlLCAjRkZGRkZGIDcwJSkgMSdcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI0XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTkgMTJINU0xMiAxOWwtNy03IDctN1wiIHN0cm9rZT1cIndoaXRlXCIgc3Ryb2tlV2lkdGg9XCIyXCIgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LW1lZGl1bSB0ZXh0LXdoaXRlIGZsZXgtMVwiPlxuICAgICAgICAgICAgUmVhZCBtZVxuICAgICAgICAgIDwvaDE+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBDb250ZW50ICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJweC00IHBiLTMyIHNwYWNlLXktMTJcIj5cbiAgICAgICAge3F1ZXN0aW9uc0RhdGEubWFwKChpdGVtLCBpbmRleCkgPT4gKFxuICAgICAgICAgIDxkaXYgXG4gICAgICAgICAgICBrZXk9e2BxYS0ke2luZGV4fWB9IFxuICAgICAgICAgICAgY2xhc3NOYW1lPVwic3BhY2UteS02XCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtZ3JheS00MDAgdGV4dC1iYXNlIGxlYWRpbmctcmVsYXhlZFwiPlxuICAgICAgICAgICAgICB7cmVuZGVyVGV4dFdpdGhIaWdobGlnaHQoaXRlbS5xdWVzdGlvbiwgJ3F1ZXN0aW9uJywgaW5kZXgpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtd2hpdGUgdGV4dC0yeGwgbGVhZGluZy1yZWxheGVkIGZvbnQtbm9ybWFsXCI+XG4gICAgICAgICAgICAgIHtyZW5kZXJUZXh0V2l0aEhpZ2hsaWdodChpdGVtLmFuc3dlciwgJ2Fuc3dlcicsIGluZGV4KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogSGlkZGVuIEF1ZGlvIEVsZW1lbnQgKi99XG4gICAgICA8YXVkaW9cbiAgICAgICAgcmVmPXthdWRpb1JlZn1cbiAgICAgICAgcHJlbG9hZD1cIm1ldGFkYXRhXCJcbiAgICAgICAgY2xhc3NOYW1lPVwiaGlkZGVuXCJcbiAgICAgID5cbiAgICAgICAgPHNvdXJjZSBzcmM9XCIvYXVkaW8vUmVhZC1vdXQubXAzXCIgdHlwZT1cImF1ZGlvL21wZWdcIiAvPlxuICAgICAgICBZb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgYXVkaW8gZWxlbWVudC5cbiAgICAgIDwvYXVkaW8+XG5cbiAgICAgIHsvKiBCb3R0b20gTmF2aWdhdGlvbiB3aXRoIFN1bW1hcmlzZSBhbmQgUGF1c2UvUGxheSAqL31cbiAgICAgIDxCb3R0b21OYXZpZ2F0aW9uXG4gICAgICAgIGxlZnRCdXR0b249e3tcbiAgICAgICAgICBsYWJlbDogXCJTdW1tYXJpc2VcIixcbiAgICAgICAgICBvbkNsaWNrOiBoYW5kbGVTdW1tYXJpc2UsXG4gICAgICAgICAgaWNvbjogKFxuICAgICAgICAgICAgPHN2ZyB3aWR0aD1cIjI1XCIgaGVpZ2h0PVwiMjRcIiB2aWV3Qm94PVwiMCAwIDI1IDI0XCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICAgICAgICAgIDxwYXRoIGZpbGxSdWxlPVwiZXZlbm9kZFwiIGNsaXBSdWxlPVwiZXZlbm9kZFwiIGQ9XCJNNC41IDVDNC41IDMuMzQzMTUgNS44NDMxNSAyIDcuNSAySDE3LjVDMTkuMTU2OSAyIDIwLjUgMy4zNDMxNSAyMC41IDVWMTlDMjAuNSAyMC42NTY5IDE5LjE1NjkgMjIgMTcuNSAyMkg3LjVDNS4zNDMxNSAyMiA0LjUgMjAuNjU2OSA0LjUgMTlWNVpNOS41IDZDOC45NDc3MiA2IDguNSA2LjQ0NzcyIDguNSA3QzguNSA3LjU1MjI4IDguOTQ3NzIgOCA5LjUgOEgxNS41QzE2LjA1MjMgOCAxNi41IDcuNTUyMjggMTYuNSA3QzE2LjUgNi40NDc3MiAxNi4wNTIzIDYgMTUuNSA2SDkuNVpNOS41IDEwQzguOTQ3NzIgMTAgOC41IDEwLjQ0NzcgOC41IDExQzguNSAxMS41NTIzIDguOTQ3NzIgMTIgOS41IDEySDE1LjVDMTYuMDUyMyAxMiAxNi41IDExLjU1MjMgMTYuNSAxMUMxNi41IDEwLjQ0NzcgMTYuMDUyMyAxMCAxNS41IDEwSDkuNVpNOS41IDE0QzguOTQ3NzIgMTQgOC41IDE0LjQ0NzcgOC41IDE1QzguNSAxNS41NTIzIDguOTQ3NzIgMTYgOS41IDE2SDExLjVDMTIuMDUyMyAxNiAxMi41IDE1LjU1MjMgMTIuNSAxNUMxMi41IDE0LjQ0NzcgMTIuMDUyMyAxNCAxMS41IDE0SDkuNVpcIiBmaWxsPVwid2hpdGVcIi8+XG4gICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICApLFxuICAgICAgICAgIHZhcmlhbnQ6ICdzZWNvbmRhcnknXG4gICAgICAgIH19XG4gICAgICAgIHJpZ2h0QnV0dG9uPXt7XG4gICAgICAgICAgbGFiZWw6IGlzUGxheWluZyA/IFwiUGF1c2VcIiA6IFwiUGxheVwiLFxuICAgICAgICAgIG9uQ2xpY2s6IHRvZ2dsZVBsYXlQYXVzZSxcbiAgICAgICAgICBpY29uOiBpc1BsYXlpbmcgPyAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctNiBoLTYgcmVsYXRpdmUgb3ZlcmZsb3ctaGlkZGVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy0xIGgtNCBiZy13aGl0ZSByb3VuZGVkLXNtXCI+PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy0xIGgtNCBiZy13aGl0ZSByb3VuZGVkLXNtIG1sLTFcIj48L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8c3ZnIFxuICAgICAgICAgICAgICB3aWR0aD1cIjI1XCIgXG4gICAgICAgICAgICAgIGhlaWdodD1cIjI0XCIgXG4gICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMjUgMjRcIiBcbiAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIiBcbiAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTAuMDc2NSAyLjUzMzY1QzguMDc3ODEgMS4yOTkxOCA1LjUgMi43MzY4OCA1LjUgNS4wODYwNVYxOC45MTRDNS41IDIxLjI2MzIgOC4wNzc4MSAyMi43MDA5IDEwLjA3NjUgMjEuNDY2NEwyMS4yNzA1IDE0LjU1MjRDMjMuMTY4NiAxMy4zODAxIDIzLjE2ODYgMTAuNjE5OSAyMS4yNzA1IDkuNDQ3NjNMMTAuMDc2NSAyLjUzMzY1WlwiIGZpbGw9XCJ3aGl0ZVwiLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICksXG4gICAgICAgICAgdmFyaWFudDogJ3ByaW1hcnknXG4gICAgICAgIH19XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJ1c2VSb3V0ZXIiLCJCb3R0b21OYXZpZ2F0aW9uIiwicXVlc3Rpb25zRGF0YSIsIlJlYWN0IiwiUmVhZGluZ1BhZ2UiLCJpc1BsYXlpbmciLCJzZXRJc1BsYXlpbmciLCJjdXJyZW50VGltZSIsInNldEN1cnJlbnRUaW1lIiwid29yZHNQZXJTZWNvbmQiLCJzZXRXb3Jkc1BlclNlY29uZCIsInN0YXJ0RGVsYXkiLCJzZXRTdGFydERlbGF5IiwibWFudWFsT2Zmc2V0Iiwic2V0TWFudWFsT2Zmc2V0IiwiYXVkaW9EdXJhdGlvbiIsInNldEF1ZGlvRHVyYXRpb24iLCJpc01hcHBpbmciLCJzZXRJc01hcHBpbmciLCJ3b3JkTWFwcGluZ3MiLCJzZXRXb3JkTWFwcGluZ3MiLCJjdXJyZW50TWFwcGluZ0luZGV4Iiwic2V0Q3VycmVudE1hcHBpbmdJbmRleCIsImlzQXV0b01hcHBpbmciLCJzZXRJc0F1dG9NYXBwaW5nIiwiYXV0b01hcHBpbmdQcm9ncmVzcyIsInNldEF1dG9NYXBwaW5nUHJvZ3Jlc3MiLCJyZWNvZ25pdGlvblJlc3VsdHMiLCJzZXRSZWNvZ25pdGlvblJlc3VsdHMiLCJ0aW1pbmdBZGp1c3RtZW50cyIsInNldFRpbWluZ0FkanVzdG1lbnRzIiwiY3VycmVudFBhcmFncmFwaEluZGV4Iiwic2V0Q3VycmVudFBhcmFncmFwaEluZGV4IiwicGFyYWdyYXBoVGltaW5ncyIsInNldFBhcmFncmFwaFRpbWluZ3MiLCJhdWRpb1JlZiIsInJvdXRlciIsImNyZWF0ZVdvcmRUaW1pbmdzIiwiYWxsV29yZHMiLCJnbG9iYWxXb3JkSW5kZXgiLCJwYXJhZ3JhcGhJbmRleCIsImZvckVhY2giLCJpdGVtIiwicXVlc3Rpb25JbmRleCIsInF1ZXN0aW9uV29yZHMiLCJxdWVzdGlvbiIsInNwbGl0Iiwid29yZCIsIndvcmRJbmRleCIsIm1hcHBpbmciLCJmaW5kIiwibSIsImNhbGN1bGF0ZWRTdGFydCIsIm5leHRNYXBwaW5nIiwicGFyYWdyYXBoSWQiLCJpc0xhc3RXb3JkIiwibGVuZ3RoIiwicHVzaCIsInRyaW0iLCJzdGFydFRpbWUiLCJlbmRUaW1lIiwidHlwZSIsImdsb2JhbEluZGV4IiwiaXNNYXBwZWQiLCJpc0xhc3RXb3JkT2ZQYXJhZ3JhcGgiLCJhbnN3ZXJXb3JkcyIsImFuc3dlciIsIndvcmRUaW1pbmdzIiwicGVyZm9ybVRpbWluZ0NhbGlicmF0aW9uIiwiY3VycmVudFdvcmQiLCJjdXJyZW50IiwicGFyYWdyYXBoU3RhcnRJbmRleCIsImZpbmRQYXJhZ3JhcGhTdGFydEluZGV4IiwicGFyYWdyYXBoU3RhcnRXb3JkIiwiZXhwZWN0ZWRUaW1lQXRQYXJhZ3JhcGhFbmQiLCJhY3R1YWxUaW1lQXRQYXJhZ3JhcGhFbmQiLCJ0aW1lRGlmZmVyZW5jZSIsIk1hdGgiLCJhYnMiLCJ3b3Jkc0luUGFyYWdyYXBoIiwiZXhwZWN0ZWRQYXJhZ3JhcGhEdXJhdGlvbiIsImFjdHVhbFBhcmFncmFwaER1cmF0aW9uIiwic3BlZWRNdWx0aXBsaWVyIiwibmV3V1BTIiwiYWRqdXN0ZWRXUFMiLCJtaW4iLCJtYXgiLCJhZGp1c3RtZW50IiwiZXhwZWN0ZWRUaW1lIiwiYWN0dWFsVGltZSIsInByZXYiLCJpIiwiY3VycmVudFdvcmRJbmRleCIsImZpbmRJbmRleCIsInRpbWluZyIsIm5leHRXb3JkIiwidG9nZ2xlUGxheVBhdXNlIiwicGF1c2UiLCJwbGF5IiwiaGFuZGxlQmFjayIsImJhY2siLCJoYW5kbGVTdW1tYXJpc2UiLCJqdW1wVG9UaW1lIiwidGltZSIsImp1bXBUb1dvcmQiLCJzdGFydE1hcHBpbmciLCJzdG9wTWFwcGluZyIsIm1hcmtDdXJyZW50V29yZCIsIm5ld01hcHBpbmciLCJjbGVhck1hcHBpbmdzIiwiZXhwb3J0TWFwcGluZ3MiLCJkYXRhIiwibWFwcGluZ3MiLCJ0b3RhbFdvcmRzIiwiY3JlYXRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiYmxvYiIsIkJsb2IiLCJKU09OIiwic3RyaW5naWZ5IiwidXJsIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwiYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhyZWYiLCJkb3dubG9hZCIsImNsaWNrIiwicmV2b2tlT2JqZWN0VVJMIiwiaW1wb3J0TWFwcGluZ3MiLCJldmVudCIsImZpbGUiLCJ0YXJnZXQiLCJmaWxlcyIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJlIiwicGFyc2UiLCJyZXN1bHQiLCJlcnJvciIsImFsZXJ0IiwicmVhZEFzVGV4dCIsInN0YXJ0QXV0b01hcHBpbmciLCJ3aW5kb3ciLCJTcGVlY2hSZWNvZ25pdGlvbiIsIndlYmtpdFNwZWVjaFJlY29nbml0aW9uIiwicmVjb2duaXRpb24iLCJjb250aW51b3VzIiwiaW50ZXJpbVJlc3VsdHMiLCJsYW5nIiwiYXVkaW9TdGFydFRpbWUiLCJub3ciLCJyZXN1bHRzIiwib25yZXN1bHQiLCJyZXN1bHRJbmRleCIsImlzRmluYWwiLCJ0cmFuc2NyaXB0Iiwid29yZHMiLCJpbmRleCIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsImNvbmZpZGVuY2UiLCJvbmVycm9yIiwiY29uc29sZSIsIm9uZW5kIiwicHJvY2Vzc1JlY29nbml0aW9uUmVzdWx0cyIsInN0YXJ0Iiwib25lbmRlZCIsInN0b3AiLCJjb250ZW50V29yZCIsImNsZWFuQ29udGVudFdvcmQiLCJtYXRjaGluZ1Jlc3VsdCIsImluY2x1ZGVzIiwibWF0Y2hlZFdvcmRzIiwiYWNjdXJhY3kiLCJtZXRob2QiLCJ0b0ZpeGVkIiwic3RvcEF1dG9NYXBwaW5nIiwidXBsb2FkTVAzRm9yUHJvY2Vzc2luZyIsImhhbmRsZUtleVByZXNzIiwiY29kZSIsInByZXZlbnREZWZhdWx0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJnZXRUaW1pbmdBY2N1cmFjeSIsImRpZmZlcmVuY2UiLCJhdWRpbyIsImhhbmRsZUVuZGVkIiwiaGFuZGxlUGF1c2UiLCJoYW5kbGVQbGF5IiwiaGFuZGxlVGltZVVwZGF0ZSIsImhhbmRsZUxvYWRlZE1ldGFkYXRhIiwiZHVyYXRpb24iLCJyZW5kZXJUZXh0V2l0aEhpZ2hsaWdodCIsInRleHQiLCJ0ZXh0V2l0aEJyZWFrcyIsImxpbmVzIiwiZGl2IiwibWFwIiwibGluZSIsImxpbmVJbmRleCIsImNsYXNzTmFtZSIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwiYmFja2dyb3VuZFNpemUiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJiYWNrZ3JvdW5kUmVwZWF0IiwiaDIiLCJwIiwiYmFja2dyb3VuZCIsImJhY2tkcm9wRmlsdGVyIiwiV2Via2l0QmFja2Ryb3BGaWx0ZXIiLCJtYXNrSW1hZ2UiLCJXZWJraXRNYXNrSW1hZ2UiLCJvbkNsaWNrIiwiYm94U2hhZG93IiwiYm9yZGVySW1hZ2UiLCJzdmciLCJ3aWR0aCIsImhlaWdodCIsInZpZXdCb3giLCJmaWxsIiwieG1sbnMiLCJwYXRoIiwiZCIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiaDEiLCJyZWYiLCJwcmVsb2FkIiwic291cmNlIiwic3JjIiwibGVmdEJ1dHRvbiIsImxhYmVsIiwiaWNvbiIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJ2YXJpYW50IiwicmlnaHRCdXR0b24iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/reading/page.tsx\n"));

/***/ })

});