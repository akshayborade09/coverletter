"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reading/page",{

/***/ "(app-pages-browser)/./lib/elevenlabs.ts":
/*!***************************!*\
  !*** ./lib/elevenlabs.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VoiceService: () => (/* binding */ VoiceService),\n/* harmony export */   generateCoverLetterAudio: () => (/* binding */ generateCoverLetterAudio),\n/* harmony export */   voiceService: () => (/* binding */ voiceService)\n/* harmony export */ });\nclass VoiceService {\n    async generateSpeech(text) {\n        let settings = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const apiKey = \"sk_8fdc8d15d81a585c5366bf5e5791d18cf34438703e95dc47\";\n        if (!apiKey) {\n            throw new Error('ElevenLabs API key not found');\n        }\n        try {\n            const response = await fetch(\"https://api.elevenlabs.io/v1/text-to-speech/\".concat(settings.voiceId || 'pNInz6obpgDQGcFmaJgB'), {\n                method: 'POST',\n                headers: {\n                    'Accept': 'audio/mpeg',\n                    'Content-Type': 'application/json',\n                    'xi-api-key': apiKey\n                },\n                body: JSON.stringify({\n                    text,\n                    model_id: 'eleven_multilingual_v2',\n                    voice_settings: {\n                        stability: settings.stability || 0.5,\n                        similarity_boost: settings.similarityBoost || 0.75\n                    }\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"ElevenLabs API error: \".concat(response.status));\n            }\n            const arrayBuffer = await response.arrayBuffer();\n            const blob = new Blob([\n                arrayBuffer\n            ], {\n                type: 'audio/mpeg'\n            });\n            return URL.createObjectURL(blob);\n        } catch (error) {\n            console.error('Error generating speech:', error);\n            throw error;\n        }\n    }\n    async playAudio(audioUrl) {\n        return new Promise((resolve, reject)=>{\n            try {\n                if (this.currentAudio) {\n                    this.currentAudio.pause();\n                    this.currentAudio = null;\n                }\n                this.currentAudio = new Audio(audioUrl);\n                this.currentAudio.addEventListener('canplaythrough', ()=>{\n                    if (this.currentAudio) {\n                        this.currentAudio.play();\n                        this.isPlaying = true;\n                    }\n                });\n                this.currentAudio.addEventListener('ended', ()=>{\n                    this.isPlaying = false;\n                    resolve();\n                });\n                this.currentAudio.addEventListener('error', (e)=>{\n                    this.isPlaying = false;\n                    reject(e);\n                });\n                this.currentAudio.load();\n            } catch (error) {\n                reject(error);\n            }\n        });\n    }\n    pauseAudio() {\n        if (this.currentAudio && this.isPlaying) {\n            this.currentAudio.pause();\n            this.isPlaying = false;\n        }\n    }\n    resumeAudio() {\n        if (this.currentAudio && !this.isPlaying) {\n            this.currentAudio.play();\n            this.isPlaying = true;\n        }\n    }\n    stopAudio() {\n        if (this.currentAudio) {\n            this.currentAudio.pause();\n            this.currentAudio.currentTime = 0;\n            this.isPlaying = false;\n        }\n    }\n    getIsPlaying() {\n        return this.isPlaying;\n    }\n    getCurrentTime() {\n        var _this_currentAudio;\n        return ((_this_currentAudio = this.currentAudio) === null || _this_currentAudio === void 0 ? void 0 : _this_currentAudio.currentTime) || 0;\n    }\n    getDuration() {\n        var _this_currentAudio;\n        return ((_this_currentAudio = this.currentAudio) === null || _this_currentAudio === void 0 ? void 0 : _this_currentAudio.duration) || 0;\n    }\n    setVolume(volume) {\n        if (this.currentAudio) {\n            this.currentAudio.volume = Math.max(0, Math.min(1, volume));\n        }\n    }\n    cleanup() {\n        this.stopAudio();\n        if (this.currentAudio) {\n            URL.revokeObjectURL(this.currentAudio.src);\n            this.currentAudio = null;\n        }\n    }\n    constructor(){\n        this.currentAudio = null;\n        this.isPlaying = false;\n    }\n}\n// Export a singleton instance\nconst voiceService = new VoiceService();\n// Helper function to generate speech for the cover letter content\nasync function generateCoverLetterAudio(questions) {\n    let settings = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    // For testing - use only first 3 questions to avoid rate limits\n    const selectedQuestions = questions.slice(0, 3);\n    const fullText = selectedQuestions.map((item, index)=>\"Question \".concat(index + 1, \": \").concat(item.question, \". \").concat(item.answer, \". \")).join('');\n    return await voiceService.generateSpeech(fullText, settings);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/elevenlabs.ts\n"));

/***/ })

});